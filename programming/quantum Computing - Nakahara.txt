
QUANTUM
COMPUTING
From Linear Algebra
to Physical Realizations


QUANTUM
COMPUTING
From Linear Algebra
to Physical Realizations
Mikio Nakahara
Department of Physics
Kinki University, Higashi-Osaka, Japan
Tetsuo Ohmi
Interdisciplinary Graduate School of Science and Engineering
Kinki University, Higashi-Osaka, Japan
A TAYLOR & FRANCIS BOOK
CRC Press is an imprint of the
Taylor & Francis Group, an informa business
Boca Raton   London   New York

CRC Press
Taylor & Francis Group
6000 Broken Sound Parkway NW, Suite 300
Boca Raton, FL 33487‑2742
© 2008 by Taylor & Francis Group, LLC 
CRC Press is an imprint of Taylor & Francis Group, an Informa business
No claim to original U.S. Government works
Printed in the United States of America on acid‑free paper
10 9 8 7 6 5 4 3 2 1
International Standard Book Number‑13: 978‑0‑7503‑0983‑7 (Hardcover)
This book contains information obtained from authentic and highly regarded sources  Reason‑
able efforts have been made to publish reliable data and information, but the author and publisher 
cannot assume responsibility for the validity of all materials or the consequences of their use. The 
Authors and Publishers have attempted to trace the copyright holders of all material reproduced 
in this publication and apologize to copyright holders if permission to publish in this form has not 
been obtained. If any copyright material has not been acknowledged please write and let us know so 
we may rectify in any future reprint 
Except as permitted under U.S. Copyright Law, no part of this book may be reprinted, reproduced, 
transmitted, or utilized in any form by any electronic, mechanical, or other means, now known or 
hereafter invented, including photocopying, microfilming, and recording, or in any information 
storage or retrieval system, without written permission from the publishers.
For permission to photocopy or use material electronically from this work, please access www.
copyright.com (http://www.copyright.com/) or contact the Copyright Clearance Center, Inc. (CCC) 
222 Rosewood Drive, Danvers, MA 01923, 978‑750‑8400. CCC is a not‑for‑profit organization that 
provides licenses and registration for a variety of users. For organizations that have been granted a 
photocopy license by the CCC, a separate system of payment has been arranged.
Trademark Notice: Product or corporate names may be trademarks or registered trademarks, and 
are used only for identification and explanation without intent to infringe.
Library of Congress Cataloging‑in‑Publication Data
Nakahara, Mikio.
Quantum computing : from linear algebra to physical realizations / M.
Nakahara and Tetsuo Ohmi.
p. cm.
Includes bibliographical references and index.
ISBN 978‑0‑7503‑0983‑7 (alk. paper)
1.  Quantum computers.  I. Ohmi, Tetsuo, 1942‑ II. Title.
QA76.889.N34 2008
621.39'1‑‑dc22	
2007044310
Visit the Taylor & Francis Web site at
http://www.taylorandfrancis.com
and the CRC Press Web site at
http://www.crcpress.com

Dedication
To our families
v


Contents
I
From Linear Algebra to Quantum Computing
1
1
Basics of Vectors and Matrices
3
1.1
Vector Spaces
. . . . . . . . . . . . . . . . . . . . . . . . . . .
4
1.2
Linear Dependence and Independence of Vectors
. . . . . . .
5
1.3
Dual Vector Spaces . . . . . . . . . . . . . . . . . . . . . . . .
6
1.4
Basis, Projection Operator and Completeness Relation
. . . .
8
1.4.1
Orthonormal Basis and Completeness Relation . . . .
8
1.4.2
Projection Operators . . . . . . . . . . . . . . . . . . .
9
1.4.3
Gram-Schmidt Orthonormalization . . . . . . . . . . .
10
1.5
Linear Operators and Matrices
. . . . . . . . . . . . . . . . .
11
1.5.1
Hermitian Conjugate, Hermitian and Unitary
Matrices . . . . . . . . . . . . . . . . . . . . . . . . . .
12
1.6
Eigenvalue Problems
. . . . . . . . . . . . . . . . . . . . . . .
13
1.6.1
Eigenvalue Problems of Hermitian and Normal
Matrices . . . . . . . . . . . . . . . . . . . . . . . . . .
14
1.7
Pauli Matrices
. . . . . . . . . . . . . . . . . . . . . . . . . .
18
1.8
Spectral Decomposition
. . . . . . . . . . . . . . . . . . . . .
19
1.9
Singular Value Decomposition (SVD) . . . . . . . . . . . . . .
23
1.10
Tensor Product (Kronecker Product)
. . . . . . . . . . . . . .
26
2
Framework of Quantum Mechanics
29
2.1
Fundamental Postulates
. . . . . . . . . . . . . . . . . . . . .
29
2.2
Some Examples
. . . . . . . . . . . . . . . . . . . . . . . . . .
32
2.3
Multipartite System, Tensor Product and Entangled State
. .
36
2.4
Mixed States and Density Matrices
. . . . . . . . . . . . . . .
38
2.4.1
Negativity . . . . . . . . . . . . . . . . . . . . . . . . .
42
2.4.2
Partial Trace and Puriﬁcation . . . . . . . . . . . . . .
45
2.4.3
Fidelity
. . . . . . . . . . . . . . . . . . . . . . . . . .
47
3
Qubits and Quantum Key Distribution
51
3.1
Qubits
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
51
3.1.1
One Qubit . . . . . . . . . . . . . . . . . . . . . . . . .
51
3.1.2
Bloch Sphere . . . . . . . . . . . . . . . . . . . . . . .
53
3.1.3
Multi-Qubit Systems and Entangled States
. . . . . .
54
3.1.4
Measurements . . . . . . . . . . . . . . . . . . . . . . .
56

3.1.5
Einstein-Podolsky-Rosen (EPR) Paradox
. . . . . . .
59
3.2
Quantum Key Distribution (BB84 Protocol) . . . . . . . . . .
60
4
Quantum Gates, Quantum Circuit and Quantum Computa-
tion
65
4.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . .
65
4.2
Quantum Gates . . . . . . . . . . . . . . . . . . . . . . . . . .
66
4.2.1
Simple Quantum Gates
. . . . . . . . . . . . . . . . .
66
4.2.2
Walsh-Hadamard Transformation . . . . . . . . . . . .
69
4.2.3
SWAP Gate and Fredkin Gate
. . . . . . . . . . . . .
70
4.3
Correspondence with Classical Logic Gates
. . . . . . . . . .
71
4.3.1
NOT Gate . . . . . . . . . . . . . . . . . . . . . . . . .
72
4.3.2
XOR Gate . . . . . . . . . . . . . . . . . . . . . . . . .
72
4.3.3
AND Gate . . . . . . . . . . . . . . . . . . . . . . . . .
73
4.3.4
OR Gate . . . . . . . . . . . . . . . . . . . . . . . . . .
73
4.4
No-Cloning Theorem
. . . . . . . . . . . . . . . . . . . . . . .
75
4.5
Dense Coding and Quantum Teleportation . . . . . . . . . . .
76
4.5.1
Dense Coding . . . . . . . . . . . . . . . . . . . . . . .
77
4.5.2
Quantum Teleportation
. . . . . . . . . . . . . . . . .
79
4.6
Universal Quantum Gates
. . . . . . . . . . . . . . . . . . . .
82
4.7
Quantum Parallelism and Entanglement
. . . . . . . . . . . .
95
5
Simple Quantum Algorithms
99
5.1
Deutsch Algorithm
. . . . . . . . . . . . . . . . . . . . . . . .
99
5.2
Deutsch-Jozsa Algorithm and Bernstein-Vazirani Algorithm
. 101
5.3
Simon's Algorithm
. . . . . . . . . . . . . . . . . . . . . . . . 105
6
Quantum Integral Transforms
109
6.1
Quantum Integral Transforms
. . . . . . . . . . . . . . . . . . 109
6.2
Quantum Fourier Transform (QFT)
. . . . . . . . . . . . . . 111
6.3
Application of QFT: Period-Finding
. . . . . . . . . . . . . . 113
6.4
Implementation of QFT
. . . . . . . . . . . . . . . . . . . . . 116
6.5
Walsh-Hadamard Transform . . . . . . . . . . . . . . . . . . . 122
6.6
Selective Phase Rotation Transform
. . . . . . . . . . . . . . 123
7
Grover's Search Algorithm
125
7.1
Searching for a Single File
. . . . . . . . . . . . . . . . . . . . 125
7.2
Searching for d Files
. . . . . . . . . . . . . . . . . . . . . . . 133
8
Shor's Factorization Algorithm
137
8.1
The RSA Cryptosystem
. . . . . . . . . . . . . . . . . . . . . 137
8.2
Factorization Algorithm
. . . . . . . . . . . . . . . . . . . . . 140
8.3
Quantum Part of Shor's Algorithm
. . . . . . . . . . . . . . . 141
8.3.1
Settings for STEP 2
. . . . . . . . . . . . . . . . . . . 141
8.3.2
STEP 2 . . . . . . . . . . . . . . . . . . . . . . . . . . 143

8.4
Probability Distribution
. . . . . . . . . . . . . . . . . . . . . 144
8.5
Continued Fractions and Order Finding
. . . . . . . . . . . . 151
8.6
Modular Exponential Function
. . . . . . . . . . . . . . . . . 156
8.6.1
Adder . . . . . . . . . . . . . . . . . . . . . . . . . . . 157
8.6.2
Modular Adder . . . . . . . . . . . . . . . . . . . . . . 161
8.6.3
Modular Multiplexer . . . . . . . . . . . . . . . . . . . 166
8.6.4
Modular Exponential Function
. . . . . . . . . . . . . 168
8.6.5
Computational Complexity of Modular Exponential
Circuit . . . . . . . . . . . . . . . . . . . . . . . . . . . 170
9
Decoherence
173
9.1
Open Quantum System
. . . . . . . . . . . . . . . . . . . . . 173
9.1.1
Quantum Operations and Kraus Operators
. . . . . . 174
9.1.2
Operator-Sum Representation and Noisy Quantum
Channel . . . . . . . . . . . . . . . . . . . . . . . . . . 177
9.1.3
Completely Positive Maps . . . . . . . . . . . . . . . . 178
9.2
Measurements as Quantum Operations . . . . . . . . . . . . . 179
9.2.1
Projective Measurements
. . . . . . . . . . . . . . . . 179
9.2.2
POVM . . . . . . . . . . . . . . . . . . . . . . . . . . . 180
9.3
Examples
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 181
9.3.1
Bit-Flip Channel . . . . . . . . . . . . . . . . . . . . . 181
9.3.2
Phase-Flip Channel . . . . . . . . . . . . . . . . . . . . 183
9.3.3
Depolarizing Channel
. . . . . . . . . . . . . . . . . . 185
9.3.4
Amplitude-Damping Channel . . . . . . . . . . . . . . 187
9.4
Lindblad Equation
. . . . . . . . . . . . . . . . . . . . . . . . 188
9.4.1
Quantum Dynamical Semigroup
. . . . . . . . . . . . 189
9.4.2
Lindblad Equation . . . . . . . . . . . . . . . . . . . . 189
9.4.3
Examples . . . . . . . . . . . . . . . . . . . . . . . . . 192
10 Quantum Error Correcting Codes
195
10.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . 195
10.2
Three-Qubit Bit-Flip Code and Phase-Flip Code
. . . . . . . 196
10.2.1
Bit-Flip QECC . . . . . . . . . . . . . . . . . . . . . . 196
10.2.2
Phase-Flip QECC
. . . . . . . . . . . . . . . . . . . . 202
10.3
Shor's Nine-Qubit Code
. . . . . . . . . . . . . . . . . . . . . 203
10.3.1
Encoding
. . . . . . . . . . . . . . . . . . . . . . . . . 204
10.3.2
Transmission
. . . . . . . . . . . . . . . . . . . . . . . 205
10.3.3
Error Syndrome Detection and Correction . . . . . . . 205
10.3.4
Decoding
. . . . . . . . . . . . . . . . . . . . . . . . . 208
10.4
Seven-Qubit QECC . . . . . . . . . . . . . . . . . . . . . . . . 209
10.4.1
Classical Theory of Error Correcting Codes . . . . . . 209
10.4.2
Seven-Qubit QECC . . . . . . . . . . . . . . . . . . . . 213
10.4.3
Gate Operations for Seven-Qubit QECC . . . . . . . . 220
10.5
Five-Qubit QECC
. . . . . . . . . . . . . . . . . . . . . . . . 224
10.5.1
Encoding
. . . . . . . . . . . . . . . . . . . . . . . . . 224

10.5.2
Error Syndrome Detection . . . . . . . . . . . . . . . . 227
II
Physical Realizations of Quantum Computing
231
11 DiVincenzo Criteria
233
11.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . 233
11.2
DiVincenzo Criteria
. . . . . . . . . . . . . . . . . . . . . . . 234
11.3
Physical Realizations . . . . . . . . . . . . . . . . . . . . . . . 239
12 NMR Quantum Computer
241
12.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . 241
12.2
NMR Spectrometer . . . . . . . . . . . . . . . . . . . . . . . . 241
12.2.1
Molecules . . . . . . . . . . . . . . . . . . . . . . . . . 242
12.2.2
NMR Spectrometer . . . . . . . . . . . . . . . . . . . . 242
12.3
Hamiltonian . . . . . . . . . . . . . . . . . . . . . . . . . . . . 245
12.3.1
Single-Spin Hamiltonian . . . . . . . . . . . . . . . . . 245
12.3.2
Multi-Spin Hamiltonian . . . . . . . . . . . . . . . . . 248
12.4
Implementation of Gates and Algorithms . . . . . . . . . . . . 252
12.4.1
One-Qubit Gates in One-Qubit Molecule . . . . . . . . 252
12.4.2
One-Qubit Operation in Two-Qubit Molecule: Bloch-
Siegert Eﬀect . . . . . . . . . . . . . . . . . . . . . . . 256
12.4.3
Two-Qubit Gates . . . . . . . . . . . . . . . . . . . . . 257
12.4.4
Multi-Qubit Gates . . . . . . . . . . . . . . . . . . . . 259
12.5
Time-Optimal Control of NMR Quantum Computer
. . . . . 262
12.5.1
A Brief Introduction to Lie Algebras and Lie Groups . 262
12.5.2
Cartan Decomposition and Optimal Implementation
of Two-Qubit Gates
. . . . . . . . . . . . . . . . . . . 264
12.6
Measurements . . . . . . . . . . . . . . . . . . . . . . . . . . . 268
12.6.1
Introduction and Preliminary . . . . . . . . . . . . . . 268
12.6.2
One-Qubit Quantum State Tomography . . . . . . . . 269
12.6.3
Free Induction Decay (FID) . . . . . . . . . . . . . . . 270
12.6.4
Two-Qubit Tomography . . . . . . . . . . . . . . . . . 271
12.7
Preparation of Pseudopure State
. . . . . . . . . . . . . . . . 274
12.7.1
Temporal Averaging . . . . . . . . . . . . . . . . . . . 276
12.7.2
Spatial Averaging . . . . . . . . . . . . . . . . . . . . . 277
12.8
DiVincenzo Criteria
. . . . . . . . . . . . . . . . . . . . . . . 281
13 Trapped Ions
285
13.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . 285
13.2
Electronic States of Ions as Qubits
. . . . . . . . . . . . . . . 287
13.3
Ions in Paul Trap . . . . . . . . . . . . . . . . . . . . . . . . . 289
13.3.1
Trapping Potential . . . . . . . . . . . . . . . . . . . . 289
13.3.2
Lattice Formation
. . . . . . . . . . . . . . . . . . . . 294
13.3.3
Normal Modes
. . . . . . . . . . . . . . . . . . . . . . 296
13.4
Ion Qubit
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 298

13.4.1
One-Spin Hamiltonian . . . . . . . . . . . . . . . . . . 298
13.4.2
Sideband Cooling . . . . . . . . . . . . . . . . . . . . . 301
13.5
Quantum Gates . . . . . . . . . . . . . . . . . . . . . . . . . . 302
13.5.1
One-Qubit Gates . . . . . . . . . . . . . . . . . . . . . 302
13.5.2
CNOT Gate . . . . . . . . . . . . . . . . . . . . . . . . 304
13.6
Readout
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 306
13.7
DiVincenzo Criteria
. . . . . . . . . . . . . . . . . . . . . . . 307
14 Quantum Computing with Neutral Atoms
311
14.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . 311
14.2
Trapping Neutral Atoms
. . . . . . . . . . . . . . . . . . . . . 311
14.2.1
Alkali Metal Atoms . . . . . . . . . . . . . . . . . . . . 311
14.2.2
Magneto-Optical Trap (MOT)
. . . . . . . . . . . . . 312
14.2.3
Optical Dipole Trap
. . . . . . . . . . . . . . . . . . . 314
14.2.4
Optical Lattice . . . . . . . . . . . . . . . . . . . . . . 316
14.2.5
Spin-Dependent Optical Potential . . . . . . . . . . . . 317
14.3
One-Qubit Gates
. . . . . . . . . . . . . . . . . . . . . . . . . 319
14.4
Quantum State Engineering of Neutral Atoms . . . . . . . . . 321
14.4.1
Trapping of a Single Atom . . . . . . . . . . . . . . . . 321
14.4.2
Rabi Oscillation . . . . . . . . . . . . . . . . . . . . . . 321
14.4.3
Neutral Atom Quantum Regisiter . . . . . . . . . . . . 323
14.5
Preparation of Entangled Neutral Atoms . . . . . . . . . . . . 324
14.6
DiVincenzo Criteria
. . . . . . . . . . . . . . . . . . . . . . . 327
15 Josephson Junction Qubits
329
15.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . 329
15.2
Nanoscale Josephson Junctions and SQUIDs . . . . . . . . . . 330
15.2.1
Josephson Junctions . . . . . . . . . . . . . . . . . . . 330
15.2.2
SQUIDs . . . . . . . . . . . . . . . . . . . . . . . . . . 333
15.3
Charge Qubit
. . . . . . . . . . . . . . . . . . . . . . . . . . . 337
15.3.1
Simple Cooper Pair Box . . . . . . . . . . . . . . . . . 337
15.3.2
Split Cooper Pair Box . . . . . . . . . . . . . . . . . . 341
15.4
Flux Qubit
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 342
15.4.1
Simplest Flux Qubit . . . . . . . . . . . . . . . . . . . 342
15.4.2
Three-Junction Flux Qubit
. . . . . . . . . . . . . . . 345
15.5
Quantronium
. . . . . . . . . . . . . . . . . . . . . . . . . . . 347
15.6
Current-Biased Qubit (Phase Qubit)
. . . . . . . . . . . . . . 348
15.7
Readout
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 352
15.7.1
Charge Qubit . . . . . . . . . . . . . . . . . . . . . . . 352
15.7.2
Readout of Quantronium
. . . . . . . . . . . . . . . . 355
15.7.3
Switching Current Readout of Flux Qubits
. . . . . . 357
15.8
Coupled Qubits
. . . . . . . . . . . . . . . . . . . . . . . . . . 358
15.8.1
Capacitively Coupled Charge Qubits . . . . . . . . . . 359
15.8.2
Inductive Coupling of Charge Qubits . . . . . . . . . . 362
15.8.3
Tunable Coupling between Flux Qubits
. . . . . . . . 366

15.8.4
Coupling Flux Qubits with an LC Resonator
. . . . . 369
15.9
DiVincenzo Criteria
. . . . . . . . . . . . . . . . . . . . . . . 374
16 Quantum Computing with Quantum Dots
377
16.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . 377
16.2
Mesoscopic Semiconductors
. . . . . . . . . . . . . . . . . . . 377
16.2.1
Two-Dimensional Electron Gas in Inversion Layer
. . 377
16.2.2
Coulomb Blockade . . . . . . . . . . . . . . . . . . . . 378
16.3
Electron Charge Qubit
. . . . . . . . . . . . . . . . . . . . . . 383
16.3.1
Electron Charge Qubit . . . . . . . . . . . . . . . . . . 384
16.3.2
Rabi Oscillation . . . . . . . . . . . . . . . . . . . . . . 385
16.4
Electron Spin Qubit
. . . . . . . . . . . . . . . . . . . . . . . 386
16.4.1
Electron Spin Qubit
. . . . . . . . . . . . . . . . . . . 386
16.4.2
Single-Qubit Operations . . . . . . . . . . . . . . . . . 387
16.4.3
Coherence Time
. . . . . . . . . . . . . . . . . . . . . 390
16.5
DiVincenzo Criteria
. . . . . . . . . . . . . . . . . . . . . . . 396
16.5.1
Charge Qubits
. . . . . . . . . . . . . . . . . . . . . . 396
16.5.2
Spin Qubits . . . . . . . . . . . . . . . . . . . . . . . . 397
A Solutions to Selected Exercises
399
Index
417

Preface
One of the authors (MN) had an opportunity to give a series of lectures
on quantum computing at Materials Physics Laboratory, Helsinki University
of Technology, Finland during the 2001-2002 Winter term.
The audience
included advanced undergraduate students, postgraduate students and re-
searchers in physics, mathematics, information science, computer science and
electrical engineering among others. The host scientist, Professor Martti M.
Salomaa, suggested that the lectures, mostly devoted to theoretical aspects
of quantum computing, be published with additional chapters on physical
realization. In fact Martti himself was willing to contribute to the physical
realization part, but his unexpected early death made it impossible. After
Martti passed away, MN asked his longstanding collaborator, TO, to coau-
thor the book. This is how this book was created. Part I, the theory part, was
written by MN, while Part II, the physical realization part, was written jointly
by MN and TO. Both authors have reviewed the ﬁnal manuscript carefully
and are equally responsible for the whole content.
Quantum computing and quantum information processing are emerging
disciplines in which the principles of quantum physics are employed to store
and process information. We use classical digital technology at almost every
moment in our lives: computers, mobile phones, mp3 players, just to name a
few. Even though quantum mechanics is used in the design of devices such as
LSI, the logic is purely classical. This means that an AND circuit, for example,
produces deﬁnitely 1 when the inputs are 1 and 1. One of the most remarkable
aspects of the principles of quantum physics is the superposition principle
by which a quantum system can take several diﬀerent states simultaneously.
The input for a quantum computing device may be a superposition of many
possible inputs, and accordingly the output is also a superposition of the
corresponding input states. Another aspect of quantum physics, which is far
beyond the classical description, is entanglement. Given several objects in a
classical world, they can be described by specifying each object separately.
Given a group of ﬁve people, for example, this group can be described by
specifying the height, color of eyes, personality and so on of each constituent
person. In a quantum world, however, only a very small subset of all possible
states can be described by such individual speciﬁcations. In other words, most
quantum states cannot be described by such individual speciﬁcations, thereby
being called "entangled." Why and how these two features give rise to the
enormous computational power in quantum computing will be explained in
this book.
xiii

xiv
QUANTUM COMPUTING
Part I is devoted to theoretical aspects of quantum computing, starting
with Chapter 1 in which a brief summary of linear algebra is given. Some
subjects in this chapter, such as spectral decomposition, singular value de-
composition and tensor product, may not be taught in a standard physics
curriculum. The principles of quantum mechanics are outlined in Chapter 2.
Some examples introduced in this chapter are important for understanding
some parts in Part II. Qubit, the quantum counterpart of bit in classical in-
formation processing, is introduced in Chapter 3. Here we illustrate the ﬁrst
application of quantum information processing, namely quantum key distri-
bution. By making use of the theory of measurement, a cryptosystem that
is 100% secure can be realized. Quantum gates, the important parameters
for quantum computing and quantum information processing, are introduced
in Chapter 4, where the universality theorem is proved. Quantum gates are
quantum counterparts of the elementary logic gates such as AND, NOT, OR,
NAND, XOR and NOR in a classical logic circuit. In fact, it will be shown
that all these classical gates can be reproduced with the quantum gates as
special cases. A few simple but elucidating examples of quantum algorithms
are introduced in Chapter 5. They employ the principle of quantum physics
to achieve outstanding eﬃciency compared to their classical counterparts.
Chapter 6 is devoted to the explanation of quantum circuits that implement
integral transforms, which play central roles in several practical quantum al-
gorithms, such as Grover's database search algorithm (Chapter 7) and Shor's
factorization algorithm (Chapter 8). Chapter 9 describes a disturbing issue of
decoherence, which is one of the obstacles against the physical realization of a
working quantum computer. A quantum system gradually loses its coherence
through interactions with its environment, a phenomenon known as decoher-
ence. Quantum error correcting codes (QECC) introduced in Chapter 10 are
designed to overcome certain kinds of decoherence. We will illustrate QECC
with several important examples.
Part II starts with Chapter 11, where the DiVincenzo criteria, the criteria
that any physical system has to satisfy to be a candidate for a working quan-
tum computer, are introduced. The subsequent chapters introduce physical
systems wherein the DiVincenzo criteria are evaluated for respective realiza-
tions. Liquid state NMR, the subject of Chapter 12, is introduced ﬁrst since
it is one of the well-understood systems. The subject of liquid state NMR
has a long history, and numerous theoretical techniques have been developed
for understanding the system. The liquid state NMR system has, however,
several drawbacks and cannot be the ultimate candidate for a scalable quan-
tum computer — at least not in its current form. The molecular Hamiltonian
for the liquid state NMR system is determined very precisely, and the agree-
ment between the theory and experiments is remarkable. Chapters 13 and 14
are devoted to ionic and atomic qubits, respectively. The ion trap quantum
computer is one of the most promising systems: the largest quantum register
with 8 qubits has been reported. Atomic qubits trapped in an optical lattice
are expected to have very small decoherence due to their charge neutrality.

Preface
xv
Chapters 15 and 16 describe solid state realization of a quantum computer.
Chapter 15 introduces several types of Josephson junction qubits. The inter-
action among them is analyzed in detail. Chapter 16 describes quantum dots
realization of qubits. There are two types: charge qubits and spin qubits, and
they are treated separately.
Suggestion to readers and instructors: The whole book may be used for
a one-year course on quantum computing. Using Part I for a semester and
Part II for the subsequent semester is ideal. Alternatively, Part I may be used
for a single semester course for physics, mathematics or information science
graduate students. It may not be a good idea to use only Part II for lectures.
Instead, Chapters 1 through 4 followed by Part II may be reasonable course
materials for physics graduate students. An instructor may choose chapters in
Part II depending on his/her preference. Chapters in Part II are only loosely
related with each other.
MN used various parts of the book for lectures at several universities in-
cluding Kinki University, Helsinki University of Technology, Shizuoka Uni-
versity, Kyoto University, Osaka City University, Ehime University, Kobe
University and Kumamoto University.
He would like to thank Yoshimasa
Nakano, Martti M Salomaa, Mikko Paalanen, Jukka Pekola, Akihiko Mat-
suyama, Takao Mizusaki, Tohru Hata, Katsuhiro Nakamura, Ayumu Sugita,
Taro Kashiwa, Yukio Fukuda, Toshiro Kohmoto and Masaharu Mitsunaga for
giving him opportunities to improve the manuscript and also for the warm
hospitality extended to him.
Tero Heikkil¨a, Teemu Ojanen and Juha Voutilainen at Helsinki University
of Technology worked as course assistants for MN's lectures. MN would like
to thank them for their excellent course management.
We are also grateful to Takashi Aoki, Koji Chinen, Kazuyuki Fujii, Toshi-
masa Fujisawa, Shigeru Kanemitsu, Go Kato, Toshiyuki Kikuta, Sachiko
Kitajima, Yasushi Kondo, Hiroyuki Miyoshi, Mikko M¨ott¨onen, Yumi Naka-
jima, Hayato Nakano, Kae Nemoto, Antti Niskanen, Manabu Ozaki, Robabeh
Rahimi Darabad, Akira SaiToh, Martti Salomaa, Kouichi Semba, Fumiaki
Shibata Yasuhiro Takahashi, Shogo Tanimura, Chikako Uchiyama, Juha Var-
tiainen, Makoto Yamashita and Paolo Zanardi for illuminating discussions
and collaborations.
We would like to thank Ville Bergholm, David DiVincenzo, Kazuyuki Fu-
jii, Toshimasa Fujisawa, Saburo Higuchi, Akio Hosoya, Hartmut H¨aﬀner, Bob
Joynt, Yasuhito Kawano, Seth Lloyd, David Mermin, Masaharu Mitsunaga,
Hiroyuki Miyoshi, Bill Munro, Mikko M¨ott¨onen, Yumi Nakajima, Hayato
Nakano, Kae Nemoto, Harumichi Nishimura, Antti Niskanen, Izumi Ojima,
Kouichi Semba, Juha Vartiainen, Frank Wilhelm, Makoto Yamashita and
Paolo Zanardi for giving enlightening lectures at Kinki University.
Takashi Aoki, Shigeru Kanemitsu, Toshiyuki Kikuta, Yasushi Kondo, Yuki-
hiro Ohta, Takayoshi Ootsuka, Juha Pirkkalainen, Robabeh Rahimi Darabad,
Akira SaiToh and Hiroyuki Tomita have pointed out numerous typos and
errors in the draft. Their comments helped us enormously to improve the

xvi
QUANTUM COMPUTING
manuscript.
Technical assistance from Akira SaiToh and Juha Vartiainen in the prepa-
ration of ﬁgures is greatly appreciated.
MN would like to thank JSPS grant (Grant Nos. 14540346 and 19540422),
MEXT grant (Grant No. 13135215) and various research grants from Kinki
University for supporting this book writing project.
We are grateful to Clare Brannigan, Theresa Delforn, Amber Donley, Shashi
Kumar, Jay Margolis and John Navas of Taylor & Francis for their excellent
editorial work.
John's patience over our failure to meet deadlines is also
gratefully acknowledged.
Last but not least, we would like to thank our families for patience and
encouragement, to whom this book is dedicated.
Mikio Nakahara and Testuo Ohmi
Higashi-Osaka, Japan

Part I
From Linear Algebra to
Quantum Computing
1


1
Basics of Vectors and Matrices
The set of natural numbers {1, 2, 3, . . .} is denoted by N. The set of integers
{. . . , −2, −1, 0, 1, 2, . . .} is denoted by Z. Q denotes the set of rational num-
bers. Finally R and C denote the sets of real numbers and complex numbers,
respectively. Observe that
N ⊂Z ⊂Q ⊂R ⊂C
The vector spaces encountered in physics are mostly real vector spaces and
complex vector spaces. Classical mechanics and electrodynamics are formu-
lated mainly in real vector spaces while quantum mechanics (and hence this
book) is founded on complex vector spaces. In the rest of this chapter, we
brieﬂy summarize vector spaces and matrices (linear maps), taking applica-
tions to quantum mechanics into account.
The Pauli matrices, also known as the spin matrices, are deﬁned by
σx =
0 1
1 0

,
σy =
0 −i
i 0

,
σz =
1 0
0 −1

.
They are also referred to as σ1, σ2 and σ3, respectively.
The symbol In denotes the unit matrix of order n with ones on the di-
agonal and zeros oﬀthe diagonal. The subscript n will be dropped when
the dimension is clear from the context. The arrow →often indicates logical
implication. We use ex and exp(x) interchangeably to denote the exponential
function.
For any two matrices A and B of the same dimension, their commutator,
or commutation relation, is a matrix deﬁned as
[A, B] ≡AB −BA,
while the anticommutator, or anticommutation relation, is
{A, B} ≡AB + BA.
The symbol
denotes the end of a proof.
3

4
QUANTUM COMPUTING
1.1
Vector Spaces
Let K be a ﬁeld, which is a set where ordinary addition, substraction, multi-
plication and division are well-deﬁned. The sets R and C are the only ﬁelds
which we will be concerned with in this book. A vector space is a set where
the addition of two vectors and a multiplication by an element of K, so-called
a scalar, are deﬁned.
DEFINITION 1.1 A vector space V is a set with the following properties;
(0-1) For any u, v ∈V , their sum u + v ∈V .
(0-2) For any u ∈V and c ∈K, their scalar multiple cu ∈V .
(1-1) (u + v) + w = u + (v + w) for any u, v, w ∈V .
(1-2) u + v = v + u for any u, v ∈V .
(1-3) There exists an element 0 ∈V such that u + 0 = u for any u ∈V . This
element 0 is called the zero-vector.
(1-4) For any element u ∈V , there exists an element v ∈V such that u+v = 0.
The vector v is called the inverse of u and denoted by −u.
(2-1) c(x + y) = cx + cy for any c ∈K, u, v ∈V .
(2-2) (c + d)u = cu + du for any c, d ∈K, u ∈V .
(2-3) (cd)u = c(du) for any c, d ∈K, u ∈V .
(2-4) Let 1 be the unit element of K. Then 1u = u for any u ∈V .
It is assumed that the reader is familiar with the above properties. We will
be concerned mostly with the complex vector space Cn in the following.
There are, however, occasional instances where the real vector space Rn is
considered.
An element of V = Cn will be denoted by |x⟩, instead of u, and expressed
as a column of n complex numbers xi (1 ≤i ≤n) as
|x⟩=
⎛
⎜
⎝
x1
...
xn
⎞
⎟
⎠,
xi ∈C
(1.1)
It is often written as a transpose of a row vector, as |x⟩= (x1, x2, . . . , xn)t,
to save space. The integer n ∈N is called the dimension of the vector space.
In some literature, Cn is denoted by V (n, C). Similary we deﬁne the real

Basics of Vectors and Matrices
5
vector space Rn = V (n, R) as the set of column vectors with real entries.
An element |x⟩is also called a ket vector or simply a ket. We will later
introduce another kind of vector called a bra vector, which, combined with
a ket vector, yields the bracket (see Eq. (1.6)). For |x⟩, |y⟩∈Cn and a ∈C,
vector addition and scalar multiplication are deﬁned as
|x⟩=
⎛
⎜
⎜
⎜
⎝
x1
x2
...
xn
⎞
⎟
⎟
⎟
⎠, |y⟩=
⎛
⎜
⎜
⎜
⎝
y1
y2
...
yn
⎞
⎟
⎟
⎟
⎠⇒|x⟩+ |y⟩=
⎛
⎜
⎜
⎜
⎝
x1 + y1
x2 + y2
...
xn + yn
⎞
⎟
⎟
⎟
⎠, a|x⟩=
⎛
⎜
⎜
⎜
⎝
ax1
ax2
...
axn
⎞
⎟
⎟
⎟
⎠,
(1.2)
respectively. All the components of the zero-vector |0⟩are zero. The zero-
vector is also written as 0 in a less strict manner. The reader should verify
that these deﬁnitions satisfy all the axioms in the deﬁnition of a vector space.
Note, in particular, that any linear combination c1|x⟩+ c2|y⟩of vectors
|x⟩, |y⟩∈Cn with c1, c2 ∈C is also an element of Cn.
1.2
Linear Dependence and Independence of Vectors
Let us consider a set of k vectors {|x1⟩, . . . , |xk⟩} in V = Cn. This set is said
to be linearly dependent if the equation
k

i=1
ci|xi⟩= |0⟩
(1.3)
has a solution c1, . . . , ck, at least one of which is non-vanishing.
In other
words, vectors {|xi⟩} are linearly dependent if one of the vectors is expressed
as a linear combination of the other vectors. This deﬁnition implies that any
set containing the zero-vector |0⟩is linearly dependent.
If, in contrast, the trivial solution ci = 0 (1 ≤i ≤k) is the only solution of
Eq. (1.3), the set is said to be linearly independent.
EXERCISE 1.1 Find the condition under which two vectors
|v1⟩=
⎛
⎝
x
y
3
⎞
⎠, |v2⟩=
⎛
⎝
2
x −y
1
⎞
⎠∈R3
are linearly independent.
THEOREM 1.1 If a set of k vectors in Cn is linearly independent, then the
number k satisiﬁes k ≤n. The set is always linearly dependent if k > n.

6
QUANTUM COMPUTING
The proof is left as an exercise for the readers. Suppose there are n lin-
early independent vectors {|vi⟩} in Cn. Then any |x⟩∈Cn can be expressed
uniquely as a linear combination of these n vectors;
|x⟩=
n

i=1
ci|vi⟩,
ci ∈C.
The set of n linearly independent vectors is called a basis of Cn and the
vectors are called basis vectors. The vector space spanned by a basis {|vi⟩}
is often denoted as Span({|vi⟩}).
EXERCISE 1.2 Show that a set of vectors
|v1⟩=
⎛
⎝
1
1
1
⎞
⎠,
|v2⟩=
⎛
⎝
1
0
1
⎞
⎠,
|v3⟩=
⎛
⎝
1
−1
−1
⎞
⎠
is a basis of C3.
1.3
Dual Vector Spaces
A function f : Cn →C (f : |x⟩	→f(|x⟩) ∈C) satisﬁng the linearity condition
f(c1|x⟩+ c2|y⟩) = c1f(|x⟩) + c2f(|y⟩),
∀|x⟩, |y⟩∈Cn, ∀c1, c2 ∈C
(1.4)
is called a linear function. To express f in a component form, let us intro-
duce a row vector ⟨α|,
⟨α| = (α1, . . . , αn),
αi ∈C
(1.5)
A row vector is called a bra vector or simply a bra in the following. Let us
deﬁne the inner product of a bra vector ⟨α| and a ket vector |x⟩by
⟨α|x⟩=
n

i=1
αixi
(1.6)
Note that this product is nothing but an ordinary matrix multiplication of a
1 × n matrix and an n × 1 matrix.
A bra vector with the above inner product induces a linear function
⟨α|(|x⟩) = ⟨α|x⟩. In fact,
⟨α|(c1|x⟩+ c2|y⟩) =

i
αi(c1xi + c2yi) = c1

i
αixi + c2

i
αiyi
= c1⟨α|x⟩+ c2⟨α|y⟩.

Basics of Vectors and Matrices
7
Conversely, any linear function can be expressed as a linear function induced
by a bra vector. The bra vector is explicitly constructed once a dual basis is
introduced as we will see below.
The vector space of linear functions on a vector space V (Cn in the present
case) is called the dual vector space, or simply the dual space, of V
and denoted by V ∗. The symbol ∗here denotes the dual and should not be
confused with complex conjugation. As mentioned above, we may identify the
set of all bra vectors with
Cn∗= {⟨α| = (α1, . . . , αn)|αi ∈C} .
(1.7)
The reader is encouranged to verify directly that Cn∗indeed satisﬁes the
axioms of a vector space.
An important linear function is a bra vector obtained from a ket vector.
Given a vector |x⟩= (x1, . . . , xn)t ∈Cn, deﬁne a bra vector ⟨x| associated to
|x⟩by
|x⟩	→⟨x| = (x∗
1, . . . , x∗
n) ∈Cn∗,
(1.8)
Note that each component is complex-conjugated under this correspondence.
When a norm of a vector |x⟩is deﬁned by
∥|x⟩∥=

⟨x|x⟩,
(1.9)
it takes a non-negative real value due to this convention. In fact, observe that

⟨x|x⟩=
 n

i=1
x∗
i xi
1/2
=
 n

i=1
|xi|2
1/2
≥0.
Given vectors |x⟩, |y⟩∈Cn, their inner product is given by
⟨x|y⟩=
n

i=1
x∗
i yi.
(1.10)
In the mathematical literature, complex conjugation is taken rather with re-
spect to the yi. In the present book, however, we stick to physicists' convention
(1.10), which should not be confused with Eq. (1.6).
Note the following sesquilinearity:∗
⟨x|c1y1 + c2y2⟩= c1⟨x|y1⟩+ c2⟨x|y2⟩
(1.11)
⟨c1x1 + c2x2|y⟩= c∗
1⟨x1|y⟩+ c∗
2⟨x2|y⟩,
(1.12)
where |c1y1 + c2y2⟩≡c1|y1⟩+ c2|y2⟩.
∗sesqui = 1.5.

8
QUANTUM COMPUTING
EXERCISE 1.3 Let
|x⟩=
⎛
⎝
1
i
2 + i
⎞
⎠,
|y⟩=
⎛
⎝
2 −i
1
2 + i
⎞
⎠.
Find ∥|x⟩∥, ⟨x|y⟩and ⟨y|x⟩.
EXERCISE 1.4 Prove that
⟨x|y⟩= ⟨y|x⟩∗.
(1.13)
1.4
Basis, Projection Operator and Completeness
Relation
1.4.1
Orthonormal Basis and Completeness Relation
Any set of n linearly independent vectors {|v1⟩, . . . , |vn⟩} in Cn is called the
basis, and an arbitrary vector |x⟩∈Cn is expressed uniquely as a linear com-
bination of these basis vectors as |x⟩= n
i=1 ci|vi⟩. The n complex numbers
ci are called the components of |x⟩with respect to the basis {|vi⟩}.
A basis {|ei⟩} that satisﬁes
⟨ei|ej⟩= δij
(1.14)
is called an orthonormal basis. Clearly the choice of {|ei⟩} which satisﬁes
the above condition is far from unique. It turns out that orthonormal bases
are convenient for many purposes.
Let |x⟩= n
i=1 ci|ei⟩. The inner product of |x⟩and ⟨ej| yields
⟨ej|x⟩=
n

i=1
ci⟨ej|ei⟩=
n

i=1
ciδji = cj →cj = ⟨ej|x⟩.
Substituting this result into the expansion of |x⟩, we obtain
|x⟩=
n

i=1
⟨ei|x⟩|ei⟩=
n

i=1
|ei⟩⟨ei|x⟩=
 n

i=1
|ei⟩⟨ei|

|x⟩.
Since |x⟩is arbitrary, we ﬁnally obtain the completeness relation
n

i=1
|ei⟩⟨ei| = I.
(1.15)
The completeness relation is quite useful and will be frequently made use of
in the following.

Basics of Vectors and Matrices
9
FIGURE 1.1
A vector |v⟩is projected to the direction deﬁned by a unit vector |ek⟩by the
action of Pk = |ek⟩⟨ek|. The diﬀerence |v⟩−Pk|v⟩is orthogonal to |ek⟩.
1.4.2
Projection Operators
The matrix
Pk ≡|ek⟩⟨ek|
(1.16)
introduced above is called a projection operator in the direction deﬁned
by |ek⟩. This projects a vector |v⟩to a vector parallel to |ek⟩in such a way
that |v⟩−Pk|v⟩is orthogonal to |ek⟩(see Fig. 1.1).
The set {Pk = |ek⟩⟨ek|} satisﬁes the conditions
(i)
P 2
k = Pk,
(1.17)
(ii)
PkPj = 0
(k ̸= j),
(1.18)
(iii)

k
Pk = I
(completeness relation).
(1.19)
The conditions (i) and (ii) are obvious from the orthonormality ⟨ej|ek⟩= δjk.
EXAMPLE 1.1 Let
|e1⟩=
1
√
2
 1
1

, |e2⟩=
1
√
2
 1
−1

.
They deﬁne an orthonormal basis as is easily veriﬁed. Projection operators
are
P1 = |e1⟩⟨e1| = 1
2

1 1
1 1

, P2 = |e2⟩⟨e2| = 1
2

1 −1
−1 1

.
They satisfy the completeness relation

k
Pk =
 1 0
0 1

= I
and the orthogonality condition
P1P2 =
0 0
0 0

.
The reader should verify that P 2
k = Pk.

10
QUANTUM COMPUTING
EXERCISE 1.5 Let {|ek⟩} be as in Example 1.1 and let
|v⟩=

3
2

=

ck|ek⟩.
Find the coeﬃcients c1 and c2.
1.4.3
Gram-Schmidt Orthonormalization
Let us construct a set of k orthonormal vectors, given a linearly independent
set of k vectors {|vi⟩} in Cn (k ≤n). The ﬁrst step is to deﬁne a vector
|e1⟩=
|v1⟩
∥|v1⟩∥,
which is clearly normalized; ∥|e1⟩∥= 1. Before we proceed further, let us
recall that the component of a vector |u⟩along |ek⟩is given by ⟨ek|u⟩. Then
we deﬁne, in the next step, a vector
|f2⟩= |v2⟩−|e1⟩⟨e1|v2⟩,
which is clearly orthogonal to |e1⟩; ⟨e1|f2⟩= ⟨e1|v2⟩−⟨e1|e1⟩⟨e1|v2⟩= 0. This
vector must be normalized as
|e2⟩=
|f2⟩
∥|f2⟩∥.
Similarly we ﬁnd, in the jth step, the vector
|ej⟩=
|vj⟩−j−1
i=1 ⟨ei|vj⟩|ei⟩
∥|vj⟩−j−1
i=1 ⟨ei|vj⟩|ei⟩∥
(1 ≤j ≤k).
By construction, {|e1⟩, |e2⟩, . . . , |ek⟩} is an orthonormal set, which spans a k-
dimensional subspace in Cn. This is called the Gram-Schmidt orthonor-
malization. When k = n, it spans the whole vector space Cn.
EXAMPLE 1.2 Let
|v1⟩=

1
i

,
|v2⟩=

2i
4

.
Then we obtain
|e1⟩=
1
√
2

1
i

.
Moreover
|f2⟩=
2i
4

−1
2
1
i

(1, −i)
2i
4

=
 3i
3

,
from which we ﬁnd
|e2⟩=
1
√
2
 i
1

.

Basics of Vectors and Matrices
11
EXERCISE 1.6 (1) Use the Gram-Schmidt orthonormalization to ﬁnd an
orthonormal basis {|ek⟩} from a linearly independent set of vectors
|v1⟩= (−1, 2, 2)t,
|v2⟩= (2, −1, 2)t,
|v3⟩= (3, 0, −3)t.
(2) Let
|u⟩= (1, −2, 7)t =

k
ck|ek⟩.
Find the coeﬃcients ck.
EXERCISE 1.7 Let
|v1⟩= (1, i, 1)t,
|v2⟩= (3, 1, i)t.
Find an orthonormal basis for a two-dimensional subspace spanned by
{|v1⟩, |v2⟩}.
1.5
Linear Operators and Matrices
A map A : Cn →Cn is a linear operator if
A(c1|x⟩+ c2|y⟩) = c1A|x⟩+ c2A|y⟩
(1.20)
is satiﬁed for arbitrary |x⟩, |y⟩∈Cn and ck ∈C. Let us choose an arbitrary
orthonormal basis {|ek⟩}. It is shown below that A is expressed as an n × n
matrix.
Let |v⟩= n
k=1 vk|ek⟩be an arbitrary vector in Cn. Linearity implies that
A|v⟩= 
k vkA|ek⟩. Therefore, the action of A on an arbitrary vector is ﬁxed
provided that its action on the basis vectors is given. Since A|ek⟩∈Cn, it
can be expanded as
A|ek⟩=
n

i=1
|ei⟩Aik.
By taking the inner product between ⟨ej| and the above equation, we obtain
Ajk = ⟨ej|A|ek⟩.
(1.21)
This is the matrix element of A given an orthonormal basis {|ek⟩}.
It is easy then to show that
A =

j,k
Ajk|ej⟩⟨ek|
(1.22)
since by multiplying the completeness relation I = n
i=1 |ei⟩⟨ei| from the left
and the right on A simultaneously, we obtain
A = IAI =

j,k
|ej⟩⟨ej|A|ek⟩⟨ek| =

j,k
Ajk|ej⟩⟨ek|.

12
QUANTUM COMPUTING
1.5.1
Hermitian Conjugate, Hermitian and Unitary Matri-
ces
Hermitian matrices play important role in many areas in mathematics and
physics. To deﬁne a Hermitian matrix, we need to introduce the Hermitian
conjugate operation, denoted †.†
DEFINITION 1.2 (Hermitian conjugate) Given a linear operator A :
Cn →Cn, its Hermitian conjugate A† is deﬁned by
⟨u|A|v⟩≡⟨A†u|v⟩= ⟨v|A†|u⟩∗,
(1.23)
where |u⟩, |v⟩are arbitrary vectors in Cn.
The above deﬁnition shows that ⟨ej|A|ek⟩= ⟨ek|A†|ej⟩∗. Therefore, we ﬁnd
the relation Ajk = (A†)∗
kj, namely
(A†)jk = A∗
kj.
(1.24)
In other words, the matrix elements of A† are obtained by the transpose and
the complex conjugation of A.
This deﬁnition also applies to a ket vector |x⟩. We have
|x⟩† = (x∗
1, . . . , x∗
n) = ⟨x|.
Namely, the procedure to produce a bra vector from a ket vector is regarded
as a Hermitian conjugation of the ket vector.
EXERCISE 1.8 Let A and B be n × n matrices and c ∈C. Show that
(cA)† = c∗A†,
(A + B)† = A† + B†,
(AB)† = B†A†.
(1.25)
DEFINITION 1.3 (Hermitian matrix) A matrix A : Cn →Cn is said to
be a Hermitian matrix if it satisiﬁes A† = A.
Let {|e1⟩, . . . , |en⟩} be an orthonormal basis in Cn. Suppose a matrix U :
Cn →Cn satisifes U †U = I. By operating U on {|ek⟩}, we obtain a vector
|fk⟩= U|ek⟩. These vectors are again orthonormal since
⟨fj|fk⟩= ⟨ej|U †U|ek⟩= ⟨ej|ek⟩= δjk.
(1.26)
Note that | det U| = 1 since det U †U = det U † det U = | det U|2 = 1.
†Mathematicians tend to use ∗to denote Hermitian conjugate. We will follow the physicists'
convention here.

Basics of Vectors and Matrices
13
DEFINITION 1.4 (Unitary matrix) Let U : Cn →Cn be a matrix which
satisﬁes U † = U −1. Then U is called a unitary matrix. Moreover, if U is
unimodular, namely det U = 1, U is said to be a special unitary matrix.
The set of unitary matrices is a group called the unitary group, while
that of the special unitary matrices is a group called the special unitary
group. They are denoted by U(n) and SU(n), respectively.
Remarks: If a real matrix A : Rn →Rn satisﬁes At = A−1, A is called an
orthogonal matrix. From det(AAt) = det A det At = (det A)2 = det I = 1, we
ﬁnd that det A = ±1. If A is unimodular, det A = 1, it is called a special
orthogonal matrix.
The set of orthogonal (special orthogonal) matrices is
a group called the orthogonal group (special orthogonal group) and
denoted by O(n) (SO(n)).
1.6
Eigenvalue Problems
Suppose we operate a matrix A on a vector |v⟩∈Cn, where |v⟩̸= |0⟩. The
result A|v⟩is not proportional to |v⟩in general. If, however, |v⟩is properly
chosen, we may end up with A|v⟩, which is a scalar multiple of |v⟩;
A|v⟩= λ|v⟩,
λ ∈C.
(1.27)
Then λ is called an eigenvalue of A, while |v⟩is called the corresponding
eigenvector. The above equation being a linear equation, the norm of the
eigenvector cannot be ﬁxed.
Of course, it is always possible to normalize
|v⟩such that ∥|v⟩∥= 1.
We often use the symbol |λ⟩for an eigenvector
corresponding to an eigenvalue λ to save symbols.
Let {|ek⟩} be an orthonormal basis in Cn and let ⟨ei|A|ej⟩= Aij and
vi = ⟨ei|v⟩be the components of A and |v⟩with respect to the basis. Then
the component expression for the above equation is obtained from
A|v⟩=

i,j
|ei⟩⟨ei|A|ej⟩⟨ej|v⟩=

i,j
Aijvj|ei⟩
as

j
Aijvj = λvi.
(1.28)
Let us ﬁnd the eigenvalue λ next. Note ﬁrst that the eigenvalue equation is
rewritten as

j
(A −λI)ijvj = 0.

14
QUANTUM COMPUTING
This equation in vj has nontrivial solutions if and only if the matrix A −λI
has no inverse, namely
D(λ) ≡det(A −λI) = 0.
(1.29)
If it had the inverse, then |v⟩= (A −λI)−1|0⟩= 0 would be the unique
solution. This equation (1.29) is called the characteristic equation or the
eigen equation of A.
Let A be an n×n matrix. Then the characteristic equation has n solutions,
including the multiplicity, which we write as {λ1, λ2, . . . , λn}. The function
D(λ) is also written as
D(λ) =
n

i=1
(λi −λ)
= (−λ)n +

i
λi(−λ)(n−1) + . . . +
n

i=1
λi
= (−λ)n + tr A(−λ)(n−1) + . . . + det A,
(1.30)
where use has been made of the facts tr A = 
i λi and det A = 
i λi.
1.6.1
Eigenvalue Problems of Hermitian and Normal
Matrices
The eigenvalue problems of Hermitian matrices and unitary matrices are par-
ticularly important in practical applications.
THEOREM 1.2 All the eigenvalues of a Hermitian matrix are real num-
bers. Moreover, two eigenvectors corresponding to diﬀerent eigenvalues are
orthogonal.
Proof. Let A be a Hermitian matrix and let A|λ⟩= λ|λ⟩. The Hermitian
conjugate of this equation is ⟨λ|A = λ∗⟨λ|. From these equations we obtain
⟨λ|A|λ⟩= λ⟨λ|λ⟩= λ∗⟨λ|λ⟩, which proves λ = λ∗since ⟨λ|λ⟩̸= 0.
Let A|μ⟩= μ|μ⟩(μ ̸= λ), next. Then ⟨μ|A = μ⟨μ| since μ ∈R. From
⟨μ|A|λ⟩= λ⟨μ|λ⟩and ⟨μ|A|λ⟩= μ⟨μ|λ⟩, we obtain 0 = (λ −μ)⟨μ|λ⟩. Since
μ ̸= λ, we must have ⟨μ|λ⟩= 0.
Suppose λ is k-fold degenerate. Then there are k independent eigenvectors
corresponding to λ. We may invoke to the Gram-Schmidt orthonormaliza-
tion, for example, to obtain an orthonormal basis in this k-dimensional space.
Accordingly, the set of eigenvectors of a Hermitian matrix is always chosen
to be orthonormal. Therefore, the set of eigenvectors {|λk⟩} of a Hermitian
matrix A may be made into a complete set
n

k=1
|λk⟩⟨λk| = I

Basics of Vectors and Matrices
15
EXAMPLE 1.3 The Pauli matrix
σy =

0 −i
i 0

is Hermitian. Let us ﬁnd its eigenvalues and corresponding eigenvectors. From
det(σy −λI) = λ2 −1 = 0,
we ﬁnd the eigenvalues λ1 = 1 and λ2 = −1.
Let |λ1⟩= (x, y)t be an
eigenvector corresponding to λ1;
σy|λ1⟩= |λ1⟩→

0 −i
i 0
 
x
y

=

x
y

→

−iy = x
ix = y
.
These relations are satiﬁed with x = 1, y = i. Thus the normalized eigenvector
is
|λ1⟩=
1
√
2
 1
i

.
Similarly we obtain
|λ2⟩=
1
√
2
 i
1

.
It is easy to verify that they are orthogonal
⟨λ1|λ2⟩= 1
2(1, −i)
 i
1

= 0
and satisfy the completeness relation

k
|λk⟩⟨λk| = 1
2
 1 −i
i 1

+ 1
2
 1 i
−i 1

= I.
Finally let us ﬁnd a unitary matrix U which diagonalizes σy as
U †σyU =
λ1 0
0 λ2

.
Let us consider a matrix
U = (|λ1⟩, |λ2⟩) =
1
√
2
 i 1
1 i

.
Then
σyU = (σy|λ1⟩, σy|λ2⟩) = (λ1|λ1⟩, λ2|λ2⟩)
from which we ﬁnd
U †σyU =

⟨λ1|
⟨λ2|

(λ1|λ1⟩, λ2|λ2⟩) =

1 0
0 −1

as promised. Note that the unitarity of U is attributed to the orthonormality
of {|λk⟩}.

16
QUANTUM COMPUTING
EXAMPLE 1.4 (1) The eigenvalues and the corresponding eigenvectors of
σx are found in a similar way as the above example as λ1 = 1, λ2 = −1 and
|λ1⟩=
1
√
2

1
1

,
|λ2⟩=
1
√
2

1
−1

.
(2) Let us consider the eigenvalue problem of a matrix
A =
⎛
⎜
⎜
⎝
1 0 0 0
0 1 0 0
0 0 0 1
0 0 1 0
⎞
⎟
⎟
⎠.
Note that this matrix is block diagonal with diagonal blocks I and σx. It
is found from this observation that the eigenvalues are 1, 1, 1 and −1. The
corresponding eigenvectors are obtained by making use of the result of (1) as
⎛
⎜
⎜
⎝
1
0
0
0
⎞
⎟
⎟
⎠,
⎛
⎜
⎜
⎝
0
1
0
0
⎞
⎟
⎟
⎠,
1
√
2
⎛
⎜
⎜
⎝
0
0
1
1
⎞
⎟
⎟
⎠,
1
√
2
⎛
⎜
⎜
⎝
0
0
1
−1
⎞
⎟
⎟
⎠.
(3) Let us consider the eigenvalue problem of a matrix
B =
⎛
⎜
⎜
⎝
0 0 0 1
0 1 0 0
0 0 1 0
1 0 0 0
⎞
⎟
⎟
⎠.
Although this matrix is not block diagonal, change of the order of basis vectors
from |e1⟩, |e2⟩, |e3⟩, |e4⟩to |e3⟩, |e2⟩, |e1⟩, |e4⟩maps the matrix B to A in (2).
Therefore the eivenvalues of B are the same as those of A. (Note that the
characteristic equation is left unchanged under a permutation of basis vectors.)
By putting back the order of the basis vectors, the eigenvectors of A are
mapped to those of B as
⎛
⎜
⎜
⎝
0
0
1
0
⎞
⎟
⎟
⎠,
⎛
⎜
⎜
⎝
0
1
0
0
⎞
⎟
⎟
⎠,
1
√
2
⎛
⎜
⎜
⎝
1
0
0
1
⎞
⎟
⎟
⎠,
1
√
2
⎛
⎜
⎜
⎝
1
0
0
−1
⎞
⎟
⎟
⎠.
EXERCISE 1.9 Let
A =
1
√
2

0
1 + i
1 −i
0

.
Find the eigenvalues and the corresponding normalized eigenvectors. Show
that the eigenvectors are mutually orthogonal and that they satisfy the com-
pleteness relation. Find a unitary matrix which diagonalizes A.

Basics of Vectors and Matrices
17
It has been shown above that eigenvalues of a Hermitian matrix are real.
Note that converse is not true. For example,
A =

a
b
−b −a

a, b ∈R
has real eigenvalues ±
√
a2 −b2 for |a| ≥|b|. How about the orthonormality
of the eigenvectors?
A matrix A is normal if it satisﬁes
AA† = A†A.
(1.31)
THEOREM 1.3 Let A be a normal matrix. Then its eigenvectors corre-
sponding to diﬀerent eigenvalues are orthogonal.
Proof. Let us write the eigenvalue equation as (A−λj)|λj⟩= 0. Then we ﬁnd,
from the assumed condition [A, A†] = 0, that
⟨λj|(A† −λ∗
j)(A −λj)|λj⟩= ⟨λj|(A −λj)(A† −λ∗
j)|λj⟩= 0,
which implies ⟨λj|A = λj⟨λj|. Then it follows that
⟨λk|A|λj⟩= λk⟨λk|λj⟩= λj⟨λk|λj⟩,
which proves that ⟨λk|λj⟩= 0 for λj ̸= λk.
If some of the eigenvalues are degenerate, we may use the Gram-Schmidt
procedure to make the corresponding eigenvectors orthonormal. Therefore it
is always possible to assume the set of eigenvectors of a normal matrix satisﬁes
the completeness relation.
Important examples of normal matrices are Hermitian matrices, unitary
matrices and skew-Hermitian matrices; see the next exercise.
EXERCISE 1.10
(1) Suppose A is skew-Hermitian, namely A† = −A.
Show that all the eigenvalues are pure imaginary.
(2) Let U be a unitary matrix. Show that all the eigenvalues are unimodular,
namely |λj| = 1.
(3) Let A be a normal matrix. Show that A is Hermitian if and only if all
the eigenvalues of A are real.
EXERCISE 1.11 Let
U =
⎛
⎝
0 0 i
0 i 0
i 0 0
⎞
⎠.
Find the eigenvalues (without calculation if possible) and the corresponding
eigenvectors.

18
QUANTUM COMPUTING
EXERCISE 1.12 Let H be a Hermitian matrix. Show that
U = (I + iH)(I −iH)−1
is unitary. This transformation is called the Cayley transformation.
1.7
Pauli Matrices
Let us consider spin 1/2 particles, such as an electron or a proton. These parti-
cles have an internal degree of freedom: the spin-up and spin-down states. (To
be more precise, these are expressions that are relevant when the z-component
of an angular momentum Sz is diagonalized. If Sx is diagonalized, for example,
these two quantum states can be either "spin-right" or "spin-left.") Since the
spin-up and spin-down states are orthogonal, we can take their components
to be
| ↑⟩=
 1
0

,
| ↓⟩=
 0
1

.
(1.32)
Verify that they are eigenvectors of σz satisfying σz| ↑⟩= | ↑⟩and σz| ↓⟩=
−| ↓⟩. In quantum information, we often use the notations |0⟩= | ↑⟩and |1⟩=
| ↓⟩. Moreover, the states |0⟩and |1⟩are not necessarily associated with spins.
They may represent any two mutually orthogonal states, such as horizontally
and vertically polarized photons. Thus we are free from any physical system,
even though the terminology of spin algebra may be employed.
For electrons and protons, the spin angular momentum operator is conve-
niently expressed in terms of the Pauli matrices σk as Sk = (ℏ/2)σk. We
often employ natural units in which ℏ= 1. Note the tracelessness property
tr σk = 0 and the Hermiticity σ†
k = σk.‡ In addition to the Pauli matrices,
we introduce the unit matrix I in the algebra, which amounts to expanding
the Lie algebra su(2) to u(2). The Pauli matrices satisfy the anticommutation
relations
{σi, σj} = σiσj + σjσi = 2δijI.
(1.33)
Therefore, the eigenvalues of σk are found to be ±1.
The commutation relations between the Pauli matrices are
[σi, σj] = σiσj −σjσi = 2i

k
εijkσk,
(1.34)
‡Mathematically speaking, these two properties imply that iσk are generators of the su(2)
Lie algebra associated with the Lie group SU(2).

Basics of Vectors and Matrices
19
where εijk is the totally antisymmetric tensor of rank 3, also known as the
Levi-Civita symbol,
εijk =
⎧
⎨
⎩
1, (i, j, k) = (1, 2, 3), (2, 3, 1), (3, 1, 2)
−1 (i, j, k) = (2, 1, 3), (1, 3, 2), (3, 2, 1)
0 otherwise.
The commutation relations, together with the anticommutation relations,
yield
σiσj = i
3

k=1
εijkσk + δijI .
(1.35)
The spin-ﬂip ("ladder") operators are deﬁned by
σ+ = 1
2(σx + iσy) =
 0 1
0 0

,
σ−= 1
2(σx −iσy) =
 0 0
1 0

.
(1.36)
Verify that σ+| ↑⟩= σ−| ↓⟩= 0,
σ+| ↓⟩= | ↑⟩,
σ−| ↑⟩= | ↓⟩. The
projection operators to the eigenspaces of σz with the eigenvalues ±1 are
P+ = | ↑⟩⟨↑| = 1
2(I + σz) =

1 0
0 0

,
P−= | ↓⟩⟨↓| = 1
2(I −σz) =

0 0
0 1

.
(1.37)
In fact, it is straightforward to show
P+| ↑⟩= | ↑⟩, P+| ↓⟩= 0, P−| ↑⟩= 0, P−| ↓⟩= | ↓⟩.
Finally, we note the following identities:
σ2
± = 0,
P 2
± = P±,
P+P−= 0.
(1.38)
1.8
Spectral Decomposition
Spectral decomposition of a normal matrix is quite a powerful technique in
several applications.
THEOREM 1.4 Let A be a normal matrix with eigenvalues {λi} and eigen-
vectors {|λi⟩}, which are assumed to be orthonormal. Then A is decomposed
as
A =

i
λi|λi⟩⟨λi|,

20
QUANTUM COMPUTING
which is called the spectral decomposition of A.
Proof. This is a straightforward consequence of the completeness relation
I =
n

i=1
|λi⟩⟨λi|.
If we operate A on the above equation from the left, we obtain
A = AI =
n

i=1
A|λi⟩⟨λi| =
n

i=1
λi|λi⟩⟨λi|,
which proves the theorem.
Let us recall that Pi = |λi⟩⟨λi| is a projection operator onto the direction of
|λi⟩. Then the spectral decomposition claims that the operation of A in the
one-dimensional subspace spanned by |λi⟩is equivalent with a multiplication
by a scalar λi. This observation reveals a neat way to obtain the spectral
decomposition of a normal matrix. Let A be a normal matrix and let {λα} and
{|λα,p⟩(1 ≤p ≤gα)} be the sets of eigenvalues and eigenvectors, respectively.
Here we use subscripts α, β, . . . to denote distinct eigenvalues, while gα denotes
the degeneracy of the eigenvalue λα, namely λα has gα linearly independent
eigenvectors, which are indexed by p. Therefore we have

α
1 ≤n,

α
gα =

i
1 = n.
Now consider the following expression:
Pα =

β̸=α(A −λβI)

γ̸=α(λα −λγ) .
(1.39)
This is a projection operator onto the gα-dimensional space corresponding to
the eigenvalue λα. In fact, it is straightforward to verify that
Pα|λα,p⟩=

β̸=α(λα −λβ)

γ̸=α(λα −λγ)|λα,p⟩= |λα,p⟩
(1 ≤p ≤gα)
and
Pα|λδ,q⟩=

β̸=α(λδ −λβ)

γ̸=α(λα −λγ)|λδ,q⟩= 0
(δ ̸= α, 1 ≤q ≤gδ)
since one of β(̸= α) is equal to δ(̸= α) in the numerator.
Therefore, we
conclude that Pα is a projection operator
Pα =
gα

p=1
|λα,p⟩⟨λα,p|
(1.40)

Basics of Vectors and Matrices
21
onto the gα-dimensional subspace correcponding to the eigenvalue λα.
It
follows from Eq. (1.40) that rank Pα = gα. Note also that
APα = λαPα.
(1.41)
The above method is particularly suitable when the eigenvalues are degener-
ate. It is also useful when eigenvectors are diﬃcult to obtain or unnecessary.
EXAMPLE 1.5 Let us take σy as an example. We found in Example 1.3
that the eigenvalues are λ1 = +1 and λ2 = −1, from which we obtain the
projection operators directly by using Eq. (1.39) as
P1 = (σy −(−I))
(1 −(−1)) = 1
2

1 −i
i 1

,
P2 = (σy −I)
(−1 −1) = 1
2

1 i
−i 1

.
We ﬁnd the spectral decomposition of σy as
σy =

i
λiPi = 1
2
1 −i
i 1

+ (−1)1
2
 1 i
−i 1

.
One of the advantages of the spectral decomposition is that a function of a
matrix is evaluated quite easily. Let us prove the following formula.
PROPOSITION 1.1 Let A be a normal matrix in the above theorem. Then
for an arbitrary n ∈N, we obtain
An =

α
λn
αPα.
(1.42)
If, furthermore, A−1 exists, the above formula may be extended to n ∈Z by
noting that λ−1
α
is an eigenvalue of A−1.
Proof. Let n ∈N. Then
AnPα = λαAn−1Pα = . . . = λn−1
α
APα = λn
αPα,
from which we obtain
An = An 
α
Pα =

α
AnPα =

α
λn
αPα.
To prove the second half of the proposition, we only need to show that A−1
has an eigenvalue λ−1
α , provided that A−1 exists (and hence λα ̸= 0), and the
corresponding projection operator is Pα. We ﬁnd
|λα,p⟩= A−1A|λα,p⟩= λαA−1|λα,p⟩→A−1|λα,p⟩= λ−1
α |λα,p⟩.
Therefore the projection operator corresponding to the eivengalue λ−1
α
is Pα.
The case n = 0, I = 
α Pα, is nothing but the completeness relation. Now
we have proved that Eq. (1.42) applies to an arbitrary n ∈Z.

22
QUANTUM COMPUTING
From the above proposition, we obtain for a normal matrix A and an arbi-
trary analytic function f(x),
f(A) =

α
f(λα)Pα.
(1.43)
Even when f(x) does not admit a series expansion, we may still formally
deﬁne f(A) by Eq. (1.43). Let f(x) = √x and A = σy, for example. Then we
obtain from Example 1.5 that
√σy = (±1)P1 + (±i)P2.
It is easy to show that the RHS squares to σy. However, there are four possible
√σ depending on the choice of ± for each eigenvalue. Therefore the spectral
decomposition is not unique in this case. Of course this ambiguity originates
in the choice of the branch in the deﬁnition of √x.
EXAMPLE 1.6 Let us consider σy again. It follows directly from Example
1.5 that
exp(iασy) ≡
∞

k=0
(iασy)k
k!
= eiαP1 + e−iαP2 =
 cos α sin α
−sin α cos α

.
EXERCISE 1.13 Suppose a 2 × 2 matrix A has eigenvalues −1, 3 and the
corresponding eigenvectors
|e1⟩=
1
√
2
−1
i

, |e2⟩=
1
√
2
 1
i

,
respectively. Find A.
EXERCISE 1.14 Let
A =
2 1
1 2

.
(1) Find the eigenvalues and the corresponding normalized eigenvectors of A.
(2) Write down the spectral decomposition of A.
(3) Find exp(iαA).
EXERCISE 1.15 Let
A =
⎛
⎝
5 −2 −4
−2 2
2
−4 2
5
⎞
⎠.
(1) Find the eigenvalues and the corresponding eigenvectors of A.
(2) Find the spectral decomposition of A.
(3) Find the inverse of A by making use of the spectral decomposition.

Basics of Vectors and Matrices
23
Now we prove a formula which will turn out to be very useful in the follow-
ing. This is a generalization of Example 1.6
PROPOSITION 1.2 Let ˆn ∈R3 be a unit vector and α ∈R. Then
exp (iαˆn · σ) = cos αI + i(ˆn · σ) sin α,
(1.44)
where σ = (σx, σy, σz).
Proof. Let
A = n · σ =

nz
nx −iny
nx + iny
−nz

.
The eigenvalues of A are λ1 = +1 and λ2 = −1. It then follows that
P1 = (A + I)
2
= 1
2
 1 + nz
nx −iny
nx + iny
1 −nz

,
P2 = (A −I)
−2
= 1
2

1 −nz
−nx + iny
−nx −iny
1 + nz

,
from which we readily ﬁnd
eiαA = eiα
2

1 + nz
nx −iny
nx + iny
1 −nz

+ e−iα
2

1 −nz
−nx + iny
−nx −iny
1 + nz

= cos αI + i(n · σ) sin α.
EXERCISE 1.16 Let f : C →C be an analytic function. Let ˆn be a real
three-dimensional unit vector and α be a real number. Show that
f(αˆn · σ) = f(α) + f(−α)
2
I + f(α) −f(−α)
2
ˆn · σ.
(1.45)
(c.f., Proposition 1.2.)
1.9
Singular Value Decomposition (SVD)
A subject somewhat related to the eigenvalue problem is the singular value
decomposition. In a sense, it is a generalization of the eigenvalue problem to
arbitrary matrices.
THEOREM 1.5 Let A be an m × n matrix with complex entries. Then it
is possible to decompose A as
A = UΣV †,
(1.46)

24
QUANTUM COMPUTING
where U ∈U(m), V ∈U(n) and Σ is an m × n matrix whose diagonals
are nonnegative real numbers, called the singular values, while all the oﬀ
diagonal components are zero. The matrix Σ is called the singular value
matrix.
The decompostion (1.46) is called the singular value decomosition and
is often abbreviated as SVD.
We now sketch the proof of the decomposition. Let us assume m > n for
deﬁniteness. Consider the eigenvalue problem of an n × n Hermitian matrix
A†A;
A†A|λi⟩= λi|λi⟩
(1 ≤i ≤n),
where λi is a nonnegative real number, where nonnegativity follows from the
observation λi = ⟨λi|λi|λi⟩= ⟨λi|A†A|λi⟩= ∥A|λi⟩∥2 ≥0. Note that the set
{|λi⟩} satisﬁes the completeness relation
n

i=1
|λi⟩⟨λi| = In
if they are made orthonormal by the Gram-Schmidt orthonormalization. We
assume r of the eigenvalues are strictly positive and n −r are zero.
The
set {λi} is arranged in nonincreasing order λ1 ≥λ2 ≥. . . ≥λr > 0 while
λr+1 = . . . = λn = 0. Now deﬁne
V = (|λ1⟩, |λ2⟩, . . . , |λr⟩, |λr+1⟩, . . . , |λn⟩) ,
Σ =
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
√λ1 √λ2
... √λr
0
0
...
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
,
and
U = (|μ1⟩, |μ2⟩, . . . , |μr⟩, |μr+1⟩, . . . , |μm⟩) ,
where
|μk⟩=
1
√λk
A|λk⟩
(1 ≤k ≤r),
while other orthonormal vectors |μr+1⟩, . . . , |μm⟩are taken to be orthogonal
to |μk⟩(1 ≤k ≤r). Note that V ∈U(n) and U ∈U(m) by construction.
Then we ﬁnd
UΣV †

Basics of Vectors and Matrices
25
=

1
√λ1
A|λ1⟩,
1
√λ2
A|λ2⟩, . . .
1
√λr
A|λr⟩, |μr+1⟩, . . . , |μm⟩

⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
√λ1⟨λ1|
√λ2⟨λ2|
...
√λr⟨λr|
0
...
0
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
= A
r

i=1
|λi⟩⟨λi| = A
n

i=1
|λi⟩⟨λi| = A,
where we noted that A|λi⟩= 0 for r + 1 ≤i ≤n and use has been made of
the completeness relation of {|λi⟩}. The reader should examine the case in
which m ≤n.
EXAMPLE 1.7 Let
A =
⎛
⎝
1 1
0 0
i i
⎞
⎠
for which
A†A =

2 2
2 2

.
The eigenvalues of A†A are λ1 = 4 and λ2 = 0 with the corresponding eigen-
vectors
|λ1⟩=
1
√
2
1
1

,
|λ2⟩=
1
√
2
 −1
1

.
Unitary matrix V and the singular value matrix Σ are found from these data
as
V =
1
√
2
1 −1
1 1

and Σ =
⎛
⎝
2 0
0 0
0 0
⎞
⎠.
To construct U, we need
|μ1⟩= 1
2A|λ1⟩=
1
√
2
(1, 0, i)t
and two other vectors orthogonal to |μ1⟩. By inspection, we ﬁnd
|μ2⟩= (0, 1, 0)t and |μ3⟩=
1
√
2(1, 0, −i)t,
for example. From these vectors we construct U as
U =
1
√
2
⎛
⎝
1 0
1
0
√
2 0
i 0 −i
⎞
⎠.

26
QUANTUM COMPUTING
The reader should verify that UΣV † really reproduces A.
EXERCISE 1.17 Find the SVD of
A =
 1 0 i
i 0 1

.
1.10
Tensor Product (Kronecker Product)
DEFINITION 1.5 Let A be an m × n matrix and let B be a p × q matrix.
Then
A ⊗B =
⎛
⎜
⎜
⎝
a11B, a12B, . . . , a1nB
a21B, a22B, . . . , a2nB
. . .
am1B, am2B, . . . , amnB
⎞
⎟
⎟
⎠
(1.47)
is an (mp) × (nq) matrix called the tensor product (Kronecker product)
of A and B.
It should be noted that not all (mp) × (nq) matrices are tensor products
of an m × n matrix and a p × q matrix. In fact, an (mp) × (np) matrix has
mnpq degrees of freedom, while m × n and p × q matrices have mn + pq in
total. Observe that mnpq ≫mn + pq for large enough m, n, p and q. This
fact is ultimately related to the power of quantum computing compared to its
classical counterpart.
EXAMPLE 1.8
σx ⊗σz =
 0 σz
σz 0

=
⎛
⎜
⎜
⎝
0 0 1 0
0 0 0 −1
1 0 0 0
0 −1 0 0
⎞
⎟
⎟
⎠.
EXAMPLE 1.9 We can also apply the tensor product to vectors as a special
case. Let
|u⟩=

a
b

,
|v⟩=

c
d

.
Then we obtain
|u⟩⊗|v⟩=

a|v⟩
b|v⟩

=
⎛
⎜
⎜
⎝
ac
ad
bc
bd
⎞
⎟
⎟
⎠.
The tensor product |u⟩⊗|v⟩is often abbreviated as |u⟩|v⟩or |uv⟩when it
does not cause confusion.

Basics of Vectors and Matrices
27
EXERCISE 1.18 Let A and B be as above and let C be an n × r matrix
and D be a q × s matrix. Show that
(A ⊗B)(C ⊗D) = (AC) ⊗(BD).
(1.48)
It similarly holds that
(A1 ⊗B1)(A2 ⊗B2)(A3 ⊗B3) = (A1A2A3) ⊗(B1B2B3),
and its generalizations whenever the dimensions of the matrices match so that
the products make sense.
EXERCISE 1.19 Show that
A ⊗(B + C) = A ⊗B + A ⊗C
(1.49)
(A ⊗B)† = A† ⊗B†
(1.50)
(A ⊗B)−1 = A−1 ⊗B−1
(1.51)
whenever the matrix operations are well-deﬁned.
Show, from the above observations, that the tensor product of two unitary
matrices is also unitary and that the tensor product of two Hermitian matrices
is also Hermitian.
EXERCISE 1.20 Let A and B be an m × m matrix and a p × p matrix,
respectively. Show that
tr(A ⊗B) = (trA)(trB),
det(A ⊗B) = (det A)p(det B)m.
EXERCISE 1.21 Let |a⟩, |b⟩, |c⟩, |d⟩∈Cn. Show that
(|a⟩⟨b|) ⊗(|c⟩⟨d|) = (|a⟩⊗|c⟩)(⟨b| ⊗⟨d|) = |ac⟩⟨bd|.
THEOREM 1.6 Let A be an m × m matrix and B be a p × p matrix.
Let A have the eigenvalues λ1, . . . , λm with the corresponding eigenvectors
|u1⟩, . . . , |um⟩and let B have the eigenvalues μ1, . . . , μp with the correspond-
ing eigenvectors |v1⟩, . . . , |vp⟩. Then A ⊗B has mp eigenvalues {λjμk} with
the corresponding eigenvectors {|ujvk⟩}.
Proof. We show that |ujvk⟩is an eigenvector. In fact,
(A ⊗B)(|ujvk⟩) = (A|uj⟩) ⊗(B|vk⟩) = (λj|uj⟩) ⊗(μk|vk⟩)
= λjμk(|ujvk⟩) .
Therefore, the eigenvalue is λjμk with the corresponding eigenvector |ujvk⟩.
Since there are mp eigenvectors, the vectors |ujvk⟩exhaust all of them.
EXERCISE 1.22 Let A and B be as above. Show that A ⊗Ip + Im ⊗B
has the eigenvalues {λj + μk} with the corresponding eigenvectors {|ujvk⟩},
where Ip is the p × p unit matrix.


2
Framework of Quantum Mechanics
Quantum mechanics is founded on several postulates, which cannot be proven
theoretically. They are justiﬁed only through an empirical fact that they are
consistent with all the known experimental results. The choice of the postu-
lates depends heavily on authors' taste. Here we give one that turns out to be
the most convenient in the study of quantum information and computation.
For a general introduction to quantum mechanics, we recommend [1, 2, 3, 4],
for example. [5] and [6] contain more advanced subjects than those treated
in this chapter.
2.1
Fundamental Postulates
Quantum mechanics was discovered roughly a century ago. In spite of its long
history, the interpretation of the wave function remains an open question.
Here we adopt the most popular one, called the Copenhagen interpreta-
tion.
A 1 A pure state in quantum mechanics is represented in terms of a normal-
ized vector |ψ⟩in a Hilbert space H (a complex vector space with an
inner product): ⟨ψ|ψ⟩= 1. Suppose two states |ψ1⟩and |ψ2⟩are physi-
cal states of the system. Then their linear superposition c1|ψ1⟩+ c2|ψ2⟩
(ck ∈C) is also a possible state of the same system. This is called the
superposition principle.
A 2 For any physical quantity (i.e., observable) a, there exists a corre-
sponding Hermitian operator A acting on the Hilbert space H. When
we make a measurement of a, we obtain one of the eigenvalues λj of
the operator A. Let λ1 and λ2 be two eigenvalues of A: A|λi⟩= λi|λi⟩.
Suppose the system is in a superposition state c1|λ1⟩+ c2|λ2⟩. If we
measure a in this state, then the state undergoes an abrupt change to
one of the eigenstates corresponding to the observed eigenvalue: If the
observed eigenvalue is λ1 (λ2), the system undergoes a wave function
collapse as follows: c1|λ1⟩+ c2|λ2⟩→|λ1⟩(|λ2⟩), and the state imme-
diately after the measurement is |λ1⟩(|λ2⟩). Suppose we prepare many
29

30
QUANTUM COMPUTING
copies of the state c1|λ1⟩+ c2|λ2⟩. The probability of collapsing to the
state |λk⟩is given by |ck|2 (k = 1, 2). In this sense, the complex coeﬃ-
cient ci is called the probability amplitude. It should be noted that a
measurement produces one outcome λi and the probability of obtaining
it is experimentally evaluated only after repeating measurements with
many copies of the same state. These statements are easily generalized
to states in a superposition of more than two states.
A 3 The time dependence of a state is governed by the Schr¨odinger equa-
tion
iℏ∂|ψ⟩
∂t
= H|ψ⟩,
(2.1)
where ℏis a physical constant known as the Planck constant and H
is a Hermitian operator (matrix) corresponding to the energy of the
system and is called the Hamiltonian.
Several comments are in order.
• In Axiom A 1, the phase of the vector may be chosen arbitrarily; |ψ⟩
in fact represents the "ray" {eiα|ψ⟩|α ∈R}. This is called the ray
representation. In other words, we can totally igonore the phase of a
vector since it has no observable consequence. Note, however, that the
relative phase of two diﬀerent states is meaningful. Although |⟨φ|eiαψ⟩|2
is independent of α, |⟨φ|ψ1 + eiαψ2⟩|2 does depend on α.
• Axiom A 2 may be formulated in a diﬀerent but equivalent way as
follows.
Suppose we would like to measure an observable a.
Let
A = 
i λi|λi⟩⟨λi| be the corresponding operator, where A|λi⟩= λi|λi⟩.
Then the expectation value ⟨A⟩of a after measurements with respect to
many copies of a state |ψ⟩is
⟨A⟩= ⟨ψ|A|ψ⟩.
(2.2)
Let us expand |ψ⟩in terms of |λi⟩as |ψ⟩= 
i ci|λi⟩to show the equiv-
alence between two formalisms. According to A 2, the probability of
observing λi upon measurement of a is |ci|2, and therefore the expec-
tation value after many measurements is 
i λi|ci|2. If, conversely, Eq.
(2.2) is employed, we will obtain the same result since
⟨ψ|A|ψ⟩=

i,j
c∗
jci⟨λj|A|λi⟩=

i,j
c∗
jciλiδij =

i
λi|ci|2.
This measurement is called the projective measurement. Any par-
ticular outcome λi will be found with the probability
|ci|2 = ⟨ψ|Pi|ψ⟩,
(2.3)

Framework of Quantum Mechanics
31
where Pi = |λi⟩⟨λi| is the projection operator, and the state immediately
after the measurement is |λi⟩or equivalently
Pi|ψ⟩

⟨ψ|Pi|ψ⟩
,
(2.4)
where the overall phase has been ignored.
• The Schr¨odinger equation (2.1) in Axiom A 3 is formally solved to yield
|ψ(t)⟩= e−iHt/ℏ|ψ(0)⟩,
(2.5)
if the Hamiltonian H is time-independent, while
|ψ(t)⟩= T exp

−i
ℏ
 t
0
H(t)dt

|ψ(0)⟩
(2.6)
if H depends on t, where T is the time-ordering operator deﬁned by
T [A(t1)B(t2)] =

A(t1)B(t2),
t1 > t2
B(t2)A(t1),
t2 ≥t1 ,
for a product of two operators.
Generalization to products of more
than two operators should be obvious. We write Eqs. (2.5) and (2.6) as
|ψ(t)⟩= U(t)|ψ(0)⟩. The operator U(t) : |ψ(0)⟩	→|ψ(t)⟩, which we call
the time-evolution operator, is unitary. Unitarity of U(t) guarantees
that the norm of |ψ(t)⟩is conserved:
⟨ψ(0)|U †(t)U(t)|ψ(0)⟩= ⟨ψ(0)|ψ(0)⟩= 1.
EXERCISE 2.1 (Uncertainty Principle)
(1) Let A and B be Hermitian operators and |ψ⟩be some quantum state on
which A and B operate. Show that
|⟨ψ|[A, B]|ψ⟩|2 + |⟨ψ|{A, B}|ψ⟩|2 = 4|⟨ψ|AB|ψ⟩|2.
(2) Prove the Cauchy-Schwarz inequality
|⟨ψ|AB|ψ⟩|2 ≤⟨ψ|A2|ψ⟩⟨ψ|B2|ψ⟩.
(3) Show that
|⟨ψ|[A, B]|ψ⟩|2 ≤4⟨ψ|A2|ψ⟩⟨ψ|B2|ψ⟩.
(4) Show that
Δ(A)Δ(B) ≥1
2|⟨ψ|[A, B]|ψ⟩|,
(2.7)
where Δ(A) ≡

⟨ψ|A2|ψ⟩−⟨ψ|A|ψ⟩2.
(5) Suppose A = Q and B = P ≡ℏ
i
d
dQ. Deduce from the above arguments
that
Δ(Q)Δ(P) ≥ℏ
2.
The uncertaintly principle in terms of standard deviation has been formu-
lated ﬁrst in [7] and [8].

32
QUANTUM COMPUTING
2.2
Some Examples
We now give some examples to clarify the axioms introduced in the previous
section. They turn out to have relevance to certain physical realizations of a
quantum computer.
EXAMPLE 2.1 Let us consider a time-independent Hamiltonian
H = −ℏ
2ωσx.
(2.8)
Suppose the system is in the eigenstate of σz with the eigenvalue +1 at time
t = 0;
|ψ(0)⟩=
1
0

.
The wave function |ψ(t)⟩(t > 0) is then found from Eq. (2.5) to be
|ψ(t)⟩= exp

iω
2 σxt

|ψ(0)⟩.
(2.9)
The matrix exponential function in this equation is evaluated with the help
of Eq. (1.44) and we ﬁnd
|ψ(t)⟩=
 cos ωt/2 i sin ωt/2
i sin ωt/2 cos ωt/2
 
1
0

=
 cos ωt/2
i sin ωt/2

.
(2.10)
Suppose we measure the observable σz. Note that |ψ(t)⟩is expanded in terms
of the eigenvectors of σz as
|ψ(t)⟩= cos ω
2 t|σz = +1⟩+ i sin ω
2 t|σz = −1⟩.
Therefore we ﬁnd the spin is in the spin-up state with the probability P↑(t) =
cos2(ωt/2) and in the spin-down state with the probability P↓(t) = sin2(ωt/2)
as depicted in Fig. 2.1. Of course, the total probability is independent of time
since cos2(ωt/2) + sin2(ωt/2) = 1.
This result is consistent with classical
spin dynamics. The Hamiltonian (2.8) depicts a spin under a magnetic ﬁeld
along the x-axis. Our initial condition signiﬁes that the spin points the z-
direction at t = 0. Then the spin starts precession around the x-axis, and the
z-component of the spin oscillates sinusoidally as is shown above.
Next let us take the initial state
|ψ(0)⟩=
1
√
2

1
1

,

Framework of Quantum Mechanics
33
FIGURE 2.1
Probability P↑(t) with which a spin is observed in the ↑-state and P↓(t) ob-
served in the ↓-state.
which is an eigenvector of σx (and hence the Hamiltonian) with the eigenvalue
+1. We ﬁnd |ψ(t)⟩in this case as
|ψ(t)⟩=
 cos ωt/2 i sin ωt/2
i sin ωt/2 cos ωt/2
 1
√
2
 1
1

= eiωt/2
√
2
1
1

.
(2.11)
Therefore the state remains in its initial state at an arbitrary t > 0. This is an
expected result since the system at t = 0 is an eigenstate of the Hamiltonian.
EXERCISE 2.2 Let us consider a Hamiltonian
H = −ℏ
2ωσy.
(2.12)
Suppose the initial state of the system is
|ψ(0)⟩=

0
1

.
(2.13)
(1) Find the wave function |ψ(t)⟩at later time t > 0.
(2) Find the probability for the system to have the outcome +1 upon mea-
surement of σz at t > 0.
(3) Find the probability for the system to have the outcome +1 upon mea-
surement of σx at t > 0.
Now let us formulate Example 2.1 and Exercise 2.2 in the most general
form. Consider a Hamiltonian
H = −ℏ
2ωˆn · σ,
(2.14)
where ˆn is a unit vector in R3. The time-evolution operator is readily ob-
tained, by making use of the result of Proposition 1.2, as
U(t) = exp(−iHt/ℏ) = cos ω
2 t I + i(ˆn · σ) sin ω
2 t.
(2.15)

34
QUANTUM COMPUTING
Suppose the initial state is
|ψ(0)⟩=
1
0

,
for example. Then we ﬁnd
|ψ(t)⟩= U(t)|ψ(0)⟩=

cos(ωt/2) + inz sin(ωt/2)
i(nx + iny) sin(ωt/2)

.
(2.16)
The reader should verify that |ψ(t)⟩is normalized at any instant of time t > 0.
EXAMPLE 2.2 (Rabi oscillation) This example is often employed for a
quantum gate implementation as will be shown later. We will take the natural
unit ℏ= 1 to simplify our notation throughout this example. Let us consider
a spin-1/2 particle in a magnetic ﬁeld along the z-axis, whose Hamiltonian is
given by
H0 = −ω0
2 σz.
(2.17)
Suppose the particle is irradiated by an oscillating magnetic ﬁeld of angular
frequency ω, which introduces transitions between two energy eigenstates of
H0. Then the perturbed Hamiltonian is modelled as
H = −ω0
2 σz + ω1
2

0
eiωt
e−iωt
0

= 1
2

−ω0
ω1eiωt
ω1e−iωt
ω0

,
(2.18)
where ω1 > 0 is a parameter proportional to the amplitude of the oscillating
ﬁeld. Let us evaluate the wave function |ψ(t)⟩at time t > 0 assuming that
the system is in the ground state of the unperturbed Hamiltonian
|ψ(0)⟩=
 1
0

(2.19)
at t = 0. Note that we cannot simply exponentiate the Hamiltonian since it
is time-dependent. Surprisingly, however, the following trick makes it time-
independent. Let us consider the following "gauge transformation":
|φ(t)⟩= e−iωσzt/2|ψ(t)⟩.
(2.20)
A straightforward calculation shows that |φ(t)⟩satisﬁes
i d
dt|φ(t)⟩= ˜H|φ(t)⟩,
(2.21)
where
˜H = e−iωσzt/2Heiωσzt/2 −ie−iωσzt/2 d
dteiωσzt/2 = 1
2
 −ω0 + ω
ω1
ω1
ω0 −ω

= −δ
2σz + ω1
2 σx
(2.22)

Framework of Quantum Mechanics
35
is, in fact, time-independent.
Here δ = ω0 −ω stands for the "detuning"
between ω and ω0. Note that the Hamiltonian ˜H can be put into the form
(2.14) as
˜H = Δ
2
ω1
Δ σx −δ
Δσz

,
Δ ≡

δ2 + ω2
1.
(2.23)
Now it is easy to solve Eq. (2.21). The time evolution operator is obtained
using Eq. (2.15) as
˜U(t) = cos Δt
2 I −i
ω1
Δ σx −δ
Δσz

sin Δt
2
=
⎛
⎜
⎜
⎝
cos Δt
2 + i δ
Δ sin Δt
2
−iω1
Δ sin Δt
2
−iω1
Δ sin Δt
2
cos Δt
2 −i δ
Δ sin Δt
2
⎞
⎟
⎟
⎠.
(2.24)
The wave function |φ(t)⟩with the initial condtion |φ(0)⟩= (1, 0)t is
|φ(t)⟩= ˜U(t)|φ(0)⟩=
⎛
⎜
⎜
⎝
cos Δt
2 + i δ
Δ sin Δt
2
−iω1
Δ sin Δt
2
⎞
⎟
⎟
⎠.
(2.25)
We ﬁnd |ψ(t)⟩from Eq. (2.20) as
|ψ(t)⟩= eiωσzt/2|φ(t)⟩=
⎛
⎜
⎜
⎝
eiωt/2

cos Δt
2 + i δ
Δ sin Δt
2

−ie−iωt/2 ω1
Δ sin Δt
2
⎞
⎟
⎟
⎠.
(2.26)
Suppose the applied ﬁeld is in resonance with the energy diﬀerence of two
levels, namely ω = ω0. We obtain δ = 0 and Δ = ω1 in this case. The wave
function |ψ(t)⟩at later time t > 0 is
|ψ(t)⟩= eiωσzt/2|φ(t)⟩=
⎛
⎜
⎜
⎝
eiω0t/2 cos ω1t
2
−ie−iω0t/2 sin ω1t
2
⎞
⎟
⎟
⎠.
(2.27)
The probability with which the system is found in the ground (excited) state
of H0 is given by
P0 = cos2 ω1t/2
(P1 = sin2 ω1t/2).
(2.28)
This oscillatory behavior is called the Rabi oscillation. The frequency ω1 is
called the Rabi frequency, while Δ in Eq. (2.23) is called the generalized
Rabi frequency

36
QUANTUM COMPUTING
2.3
Multipartite System, Tensor Product and Entangled
State
So far, we have assumed implictly that the system is made of a single com-
ponent. Suppose a system is made of two components; one lives in a Hilbert
space H1 and the other in another Hilbert space H2. A system composed of
two separate components is called bipartite. Then the system as a whole
lives in a Hilbert space H = H1 ⊗H2, whose general vector is written as
|ψ⟩=

i,j
cij|e1,i⟩⊗|e2,j⟩,
(2.29)
where {|ea,i⟩} (a = 1, 2) is an orthonormal basis in Ha and 
i,j |cij|2 = 1.
A state |ψ⟩∈H written as a tensor product of two vectors as |ψ⟩=
|ψ1⟩⊗|ψ2⟩, (|ψa⟩∈Ha) is called a separable state or a tensor prod-
uct state. A separable state admits a classical interpretation such as "The
ﬁrst system is in the state |ψ1⟩, while the second system is in |ψ2⟩." It is
clear that the set of separable states has dimension dimH1 + dimH2. Note
however that the total space H has diﬀerent dimensions since we ﬁnd, by
counting the number of coeﬃcients in (2.29), that dimH = dimH1dimH2.
This number is considerably larger than the dimension of the sparable states
when dimHa (a = 1, 2) are large. What are the missing states then? Let us
consider a spin state
|ψ⟩=
1
√
2 (| ↑⟩⊗| ↑⟩+ | ↓⟩⊗| ↓⟩)
(2.30)
of two separated electrons. Suppose |ψ⟩may be decomposed as
|ψ⟩= (c1| ↑⟩+ c2| ↓⟩) ⊗(d1| ↑⟩+ d2| ↓⟩)
= c1d1| ↑⟩⊗| ↑⟩+ c1d2| ↑⟩⊗| ↓⟩+ c2d1| ↓⟩⊗| ↑⟩+ c2d2| ↓⟩⊗| ↓⟩.
However this decomposition is not possible since we must have
c1d2 = c2d1 = 0, c1d1 = c2d2 =
1
√
2
simultaneously, and it is clear that the above equations have no common
solution. Therefore the state |ψ⟩is not separable.
Such non-separable states are called entangled in quantum theory [9]. The
fact
dimH1dimH2 ≫dimH1 + dimH2
tells us that most states in a Hilbert space of a bipartite system are entangled
when the constituent Hilbert spaces are higher dimensional. These entangled

Framework of Quantum Mechanics
37
states refuse classical descriptions. Entanglement will be used extensively as
a powerful computational resource in quantum information processing and
quantum computation.
Suppose a bipartite state (2.29) is given. We are interested in when the
state is separable and when entangled. The criterion is given by the Schmidt
decomposition of |ψ⟩.
PROPOSITION 2.1 Let H = H1 ⊗H2 be the Hilbert space of a bipartite
system. Then a vector |ψ⟩∈H admits the Schmidt decomposition
|ψ⟩=
r

i=1
√si|f1,i⟩⊗|f2,i⟩with

i
si = 1,
(2.31)
where si > 0 are called the Schmidt coeﬃcients and {|fa,i⟩} is an orthonor-
mal set of Ha. The number r ∈N is called the Schmidt number of |ψ⟩.
Proof. This is a direct consequence of SVD introduced in §1.9. Let |ψ⟩be ex-
panded as in Eq. (2.29). Note that the coeﬃcients cij form a dimH1 ×dimH2
matrix C. We apply the SVD to obtain C = UΣV †, where U and V are
unitary matrices and Σ is a matrix whose diagonal elements are nonnegative
real numbers while all the oﬀ-diagonal elements vanish. Now |ψ⟩of Eq. (2.29)
is put in the form
|ψ⟩=

i,j,k
UikΣklV ∗
jl|e1,i⟩⊗|e2,j⟩.
Now deﬁne |f1,k⟩= 
i Uik|e1,i⟩and |f2,k⟩= 
j V ∗
jk|e2,j⟩. Unitarity of U and
V guarantees that they are orthonormal bases of H1 and H2, respectively. By
noting that Σkl = dkδkl, we obtain
|ψ⟩=
r

i=1
di|f1,i⟩⊗|f2,i⟩,
where r is the number of nonvanishing diagonal elements in Σ. The wave
function (2.31) is obtained by replacing the positive number di by di = √si.
Moreover, the normalization condition implies ⟨ψ|ψ⟩= 
i si = 1.
It follows from the above proposition that a bipartite state |ψ⟩is separable
if and only if its Schmidt number r is 1.
EXAMPLE 2.3 Consider a bipartite state
|ψ⟩= 1
2(|e1,1⟩|e2,1⟩+ |e1,1⟩|e2,2⟩+ i|e1,3⟩|e2,1⟩+ i|e1,3⟩|e2,2⟩),
whose coeﬃcients form a matrix
C = 1
2
⎛
⎝
1 1
0 0
i i
⎞
⎠.

38
QUANTUM COMPUTING
Note that this is essentially the same matrix whose SVD was analyzed in
Example 1.7. By making use of the result obtained there, we ﬁnd
|ψ⟩= |f1,1⟩|f2,1⟩,
where
|f1,1⟩=
3

i=1
Ui1|e1,i⟩=
1
√
2(|e1,1⟩+ i|e1,3⟩)
and
|f2,1⟩=
2

j=1
V ∗
j1|e2,j⟩=
1
√
2(|e2,1⟩+ |e2,2⟩).
Therefore the Schmidt number is 1 and the state is separable.
Generalization to a system with more components, i.e., a multipartite
system,
should be obvious. A system composed of N components has a
Hilbert space
H = H1 ⊗H2 ⊗. . . ⊗HN,
(2.32)
where Ha is the Hilbert space to which the ath component belongs. Classiﬁ-
cation of entanglement in a multipartite system is far from obvious, and an
analogue of the Schmidt decompostion is not known to date for N ≥3.∗
2.4
Mixed States and Density Matrices
It might happen in some cases that a quantum system under considertation is
in the state |ψi⟩with a probability pi. In other words, we cannot say deﬁnitely
which state the system is in. Therefore some random nature comes into the
description of the system. This random nature should not be confused with a
probabilistic behavior of a quantum system. Such a system is said to be in a
mixed state, while a system whose vector is uniquely speciﬁed is in a pure
state. A pure state is a special case of a mixed state in which pi = 1 for some
i and pj = 0 (j ̸= i).
Mixed states may happen in the following cases, for example.
• Suppose we observe a beam of totally unpolarized light and measure
whether photons are polarized vertically or horizontally. The measure-
ment outcome of a particular photon is either horizontal or vertical.
Therefore when the beam passes through a linear polarizer, the inten-
sity is halved. The beam is a mixture of horizontally polarized photons
and vertically polarized photons.
∗See, however, [10, 11].

Framework of Quantum Mechanics
39
• A particle source emits a particle in a state |ψi⟩with a probability
pi (1 ≤i ≤N).
• Let us consider a canonical ensemble. If we pick up one of the members
in the ensemble, it is in a state |ψi⟩with energy Ei with a probability
pi = e−Ei/kBT /Z(T ), where Z(T ) = Tre−H/kBT is the partition func-
tion.
In each of these examples, a particular state |ψi⟩∈H appears with proba-
bility pi, in which case the expectation value of the observable a is ⟨ψi|A|ψi⟩,
where we assume |ψi⟩is normalized; ⟨ψi|ψi⟩= 1. The mean value of a is then
given by
⟨A⟩=
N

i=1
pi⟨ψi|A|ψi⟩,
(2.33)
where N is the number of available states.
Let us introduce the density
matrix by
ρ =
N

i=1
pi|ψi⟩⟨ψi|.
(2.34)
Then Eq. (2.33) is rewritten in a compact form as
⟨A⟩= Tr(ρA).
(2.35)
EXERCISE 2.3 Let A be a Hermitian matrix.
A is called positive-
semideﬁnite if ⟨ψ|A|ψ⟩≥0 for any |ψ⟩in the relevant Hilbert space H. Show
that all the eigenvalues of a positive-semideﬁnite Hermitian matrix are non-
negative.
Conversely, show that a Hermitian matrix A, whose eigenvalues are all non-
negative, satisﬁes ⟨ψ|A|ψ⟩≥0 for any |ψ⟩∈H.
Properties which a density matrix ρ satisﬁes are very much like axioms for
pure states.
A 1′ A physical state of a system, whose Hilbert space is H, is completely
speciﬁed by its associated density matrix ρ : H →H. A density matrix
is a positive semi-deﬁnite Hermitian operator with tr ρ = 1 (see remarks
below).
A 2′ The mean value of an observable a is given by
⟨A⟩= tr (ρA).
(2.36)
A 3′ The temporal evolution of the density matrix is given by the Liouville-
von Neumann equation,
iℏd
dtρ = [H, ρ],
(2.37)
where H is the system Hamiltonian (see remarks below).

40
QUANTUM COMPUTING
Several remarks are in order.
• We assume {|ψi⟩} is not necessarily an orthogonal basis of H, although
it is assumed ⟨ψi|ψi⟩= 1. The density matrix (2.34) is Hermitian since
pi ∈R. It is positive semi-deﬁnite since
⟨φ|ρ|φ⟩=

i
pi⟨φ|ψi⟩⟨ψi|φ⟩=

i
pi|⟨ψi|φ⟩|2 ≥0,
where |φ⟩is an arbitrary vector. We also ﬁnd
tr ρ =

k
⟨ek|ρ|ek⟩=

i,k
⟨ek|pi|ψi⟩⟨ψi|ek⟩
=

i
pi⟨ψi|

k
|ek⟩⟨ek|

|ψi⟩=

i
pi⟨ψi|ψi⟩= 1,
where {|ek⟩} is an orthonormal basis of H.
• Each |ψi⟩follows the Schr¨odinger equation
iℏd
dt|ψi⟩= H|ψi⟩
in a closed quantum system. Its Hermitian conjugate is
−iℏd
dt⟨ψi| = ⟨ψi|H.
We prove the Liouville-von Neumann equation from these equations as
iℏd
dtρ = iℏd
dt

i
pi|ψi⟩⟨ψi| =

i
piH|ψi⟩⟨ψi| −

i
pi|ψi⟩⟨ψi|H
= [H, ρ].
We denote the set of all possible density matrices as S(H), where H is the
Hilbert space associated with a system under consideration. It is easy to verify
that tρ1 + (1 −t)ρ2 for ρ1,2 ∈S(H) is also a density matrix, which shows that
S(H) is a convex set.
EXAMPLE 2.4 A pure state |ψ⟩is a special case in which the corresponding
density matrix is
ρ = |ψ⟩⟨ψ|.
(2.38)
Therefore ρ in this case is nothing but the projection operator onto the state
|ψ⟩. Observe that
⟨A⟩= tr ρA =

i
⟨ψi|ψ⟩⟨ψ|A|ψi⟩=

i
⟨ψ|A|ψi⟩⟨ψi|ψ⟩= ⟨ψ|A|ψ⟩.

Framework of Quantum Mechanics
41
A general density matrix is a convex combination of pure states.
Let us consider a beam of photons. We take a horizontally polarized state
|e1⟩= | ↔⟩and a vertically polarized state |e2⟩= | ↕⟩as orthonormal basis
vectors. If the photons are a totally uniform mixture of two polarized states,
the density matrix is given by
ρ = 1
2|e1⟩⟨e1| + 1
2|e2⟩⟨e2| = 1
2
1 0
0 1

= 1
2I.
This state is a uniform mixture of | ↕⟩and | ↔⟩and called a maximally
mixed state.
If photons are in a pure state |ψ⟩= (|e1 ⟩+ |e2⟩)/
√
2, the density matrix,
with {|ei⟩} as basis, is
ρ = |ψ⟩⟨ψ| = 1
2
 1 1
1 1

.
If |ψ⟩itself is used as a basis vector, the other vector being |φ⟩= (|e1 ⟩−
|e2⟩)/
√
2, the density matrix with respect to the basis {|ψ⟩, |φ⟩} has a com-
ponent expression
ρ =

1 0
0 0

.
Verify that they all satisfy Hermiticity, positive semi-deﬁnitness and tr ρ = 1.
Let A = 
a λa|λa⟩⟨λa| be the spectral decomposition of an observable
A and let ρ = 
i pi|ψi⟩⟨ψi| be an arbitrary state. Then the measurement
outcome of A is λa with the probability
p(a) =

i
pi|⟨λa|ψi⟩|2 = ⟨λa|ρ|λa⟩= tr (Paρ),
(2.39)
where Pa = |λa⟩⟨λa| is the projection operator. The state changes to a pure
state |λa⟩⟨λa| immediately after the measurement with the outcome λa. This
change is written as ρ 	→PaρPa/p(a).
Now, we are interested in when ρ represents a pure state or a mixed state.
THEOREM 2.1 A state ρ is pure if and only if ρ2 = ρ.
Proof. Since ρ is Hermitian, all its eigenvalues λi (1 ≤i ≤dimH) are
real and the corresponding eigenvectors {|λi⟩} are made orthonormal. Let
ρ = 
i λi|λi⟩⟨λi| be the spectral decomposition of ρ.
Suppose ρ2 =

i λ2
i |λi⟩⟨λi| = ρ. Then the eigenvalue λi satisﬁes λ2
i = λi for any i. There-
fore λi is either 0 or 1. It follows from tr ρ = 
i λi = 1 that λp = 1 for some
p and λi = 0 for i ̸= p, namely, ρ is a pure state |λp⟩⟨λp|.
The converse is trivial.
EXERCISE 2.4 Show that a state ρ is pure if and only if tr ρ2 = 1.

42
QUANTUM COMPUTING
We classify mixed states into three classes, similar to the classiﬁcation of
pure states into separable states and entangled states. We use a bipartite
system in the deﬁnition, but generalization to multipartitle systems should
be obvious.
DEFINITION 2.1 A state ρ is called uncorrelated if it is written as
ρ = ρ1 ⊗ρ2.
(2.40)
It is called separable if it is written in the form
ρ =

i
piρ1,i ⊗ρ2,i,
(2.41)
where 0 ≤pi ≤1 and 
i pi = 1. It is called inseparable if ρ does not admit
the decompostion (2.41),
It is important to realize that only inseparable states have quantum cor-
relations analogous to that of an entangled pure state. However, it does not
necessarily imply separable states have no non-classical correlation. It was
pointed out that useful non-classical correlation exists in the subset of sepa-
rable states [12].
In the next subsection, we discuss how to ﬁnd whether a given bipartite
density matrix is separable or inseparable.
2.4.1
Negativity
Let ρ be a bipartite state and deﬁne the partial transpose ρpt of ρ with
respect to the second Hilbert space as
ρij,kl →ρil,kj,
(2.42)
where
ρij,kl = (⟨e1,i| ⊗⟨e2,j|) ρ (|e1,k⟩⊗|e2,l⟩).
Here {|e1,k⟩} is the basis of the ﬁrst system, while {|e2,k⟩} is the basis of the
second system. Suppose ρ takes a separable form (2.41). Then the partial
transpose yields
ρpt =

i
piρ1,i ⊗ρt
2,i.
(2.43)
Note here that ρt for any density matrix ρ is again a density matrix since
it is still a positive semi-deﬁnite Hermitian with unit trace. Therefore the
partial transposed density matrix (2.43) is another density matrix. It was
conjectured by Peres [6] and subsequently proved by the Hordecki family [14]
that positivity of the partially transposed density matrix is a necessary and
suﬃcient condition for ρ to be separable in the cases of C2 ⊗C2 systems and
C2 ⊗C3 systems. Conversely, if the partial transpose of ρ of these systems is
not a density matrix, then ρ is inseparable. Instead of giving the proof, we
look at the following example.

Framework of Quantum Mechanics
43
EXAMPLE 2.5 Let us consider the Werner state
ρ =
⎛
⎜
⎜
⎝
1−p
4
0
0
0
0
1+p
4
−p
2
0
0
−p
2
1+p
4
0
0
0
0
1−p
4
⎞
⎟
⎟
⎠,
(2.44)
where 0 ≤p ≤1. Here the basis vectors are arranged in the order
|e1,1⟩|e2,1⟩, |e1,1⟩|e2,2⟩, |e1,2⟩|e2,1⟩, |e1,2⟩|e2,2⟩.
Partial transpose of ρ yields
ρpt =
⎛
⎜
⎜
⎝
1−p
4
0
0
−p
2
0
1+p
4
0
0
0
0
1+p
4
0
−p
2
0
0
1−p
4
⎞
⎟
⎟
⎠.
Note that we need to consider oﬀ-diagonal matrix elements only when we
partically transpose the elements. We have, for example,
ρ12,21 = (⟨e1,1| ⊗⟨e2,2|) ρ (|e1,2⟩⊗|e2,1⟩)
→(⟨e1,1| ⊗⟨e2,1|) ρ (|e1,2⟩⊗|e2,2⟩) = ρpt
11,22.
For ρpt to be a physically acceptable state, it must have non-negative eigen-
values. The characteristic equation of ρpt is
D(λ) = det(ρpt −λI) =

λ −p + 1
4
3 
λ −1 −3p
4

= 0.
There are threefold degenerate eigenvalues λ = (1+p)/4 and a nondegenerate
eigenvalue λ = (1 −3p)/4. This shows that ρpt is an unphysical state for
1/3 < p ≤1. If this is the case, ρ is inseparable.
From the above observation, inseparable states are characterized by non-
vanishing negativity deﬁned as
N(ρ) ≡

i |λi| −1
2
.
(2.45)
Note that negativity vanishes if and only if all the eigenvalues of ρpt are
nonnegative.
Negativity is one of the so-called entanglement monotones [15], which also
include concurrence, entanglement of formation and entropy of entanglement.
EXAMPLE 2.6 It was mentioned above that vanishing negativity is equiv-
alent with separability only for C2 ⊗C2 systems and C2 ⊗C3 systems. A

44
QUANTUM COMPUTING
counter example in a C2 ⊗C4 system has been given in Horodecki [16]. Let
us consider
ρ =
1
7b + 1
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
b 0 0 0
0
b 0
0
0 b 0 0
0
0 b
0
0 0 b 0
0
0 0
b
0 0 0 b
0
0 0
0
0 0 0 0
1+b
2
0 0
√
1−b2
2
b 0 0 0
0
b 0
0
0 b 0 0
0
0 b
0
0 0 b 0
√
1−b2
2
0 0
1+b
2
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
(0 ≤b ≤1),
(2.46)
which is known to be inseparable. The partial transposed matrix with respect
to the second system is
ρpt =
1
7b + 1
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
b 0 0 0
0
0 0
0
0 b 0 0
b
0 0
0
0 0 b 0
0
b 0
0
0 0 0 b
0
0 b
0
0 b 0 0
1+b
2
0 0
√
1−b2
2
0 0 b 0
0
b 0
0
0 0 0 b
0
0 b
0
0 0 0 0
√
1−b2
2
0 0
1+b
2
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
.
(2.47)
The eigenvalues of ρpt are
0, 0, 0,
b
7b + 1,
2b
7b + 1,
2b
7b + 1
1 + 14b2 + 9b −
√
98b4 −70b3 + 23b2 + 12b + 1
2 (49b2 + 14b + 1)
,
1 + 14b2 + 9b +
√
98b4 −70b3 + 23b2 + 12b + 1
2 (49b2 + 14b + 1)
.
It can be shown that the seventh eigenvalue takes the maximum value (25 −
2
√
10)/130 at b = (47 −10
√
10)/31 and the minimum value 0 at b = 0,
and hence all the eigenvalues are non-negative for 0 ≤b ≤1 in spite of
inseparability of ρ.
EXERCISE 2.5 Verify that
ρ1 =
⎛
⎜
⎜
⎝
1+p
4
0
0
p
2
0
1−p
4
0
0
0
0
1−p
4
0
p
2
0
0
1+p
4
⎞
⎟
⎟
⎠
(0 ≤p ≤1)
(2.48)
is a density matrix. Show that the negativity does not vanish for p > 1/3.

Framework of Quantum Mechanics
45
EXERCISE 2.6 Verify that
ρ2 =
⎛
⎜
⎜
⎝
p
2
0
0
p
2
0 1−p
2
1−p
2
0
0 1−p
2
1−p
2
0
p
2
0
0
p
2
⎞
⎟
⎟
⎠
(0 ≤p ≤1)
(2.49)
is a density matrix. Show that the negativity vanishes only for p = 1/2.
2.4.2
Partial Trace and Puriﬁcation
Let H = H1⊗H2 be a Hilbert space of a bipartite system made of components
1 and 2 and let A be an arbitrary operator acting on H. The partial trace
of A over H2 is an operator acting on H1 deﬁned as
A1 = tr 2A ≡

k
(I ⊗⟨k|)A(I ⊗|k⟩).
(2.50)
Let ρ = |ψ⟩⟨ψ| ∈S(H) be a density matrix of a pure state |ψ⟩. Suppose
we are interested only in the ﬁrst system and have no access to the second
system. Then the partial trace allows us to "forget" about the second system.
In other words, the partial trace quantiﬁes our ignorance of the second sytem.
To be more concrete, let us consider a pure state of a two-dimensional
system
|ψ⟩=
1
√
2(|e1⟩|e1⟩+ |e2⟩|e2⟩),
where {|ei⟩} is an orthonormal basis. The corresponding density matrix is
ρ = 1
2
⎛
⎜
⎜
⎝
1 0 0 1
0 0 0 0
0 0 0 0
1 0 0 1
⎞
⎟
⎟
⎠,
where the basis vectors are ordered as {|e1⟩|e1⟩, |e1⟩|e2⟩, |e2⟩|e1⟩, |e2⟩|e2⟩}. The
partial trace of ρ is
ρ1 = tr 2ρ =

i=1,2
(I ⊗⟨ei|)ρ(I ⊗|ei⟩) = 1
2
1 0
0 1

.
(2.51)
Note that a pure state |ψ⟩is mapped to a maximally mixed state ρ1.
Observe that
tr (ρ1A) = tr (ρ(A ⊗I))
(2.52)
for an observable A acting on the ﬁrst Hilbert space. The expectation value
of A under that state ρ is equally obtained by using ρ1.

46
QUANTUM COMPUTING
EXERCISE 2.7 Let
|ψ′⟩=
1
√
2(|e1⟩|e2⟩−|e2⟩|e1⟩).
Find the corresponding density matrix. Then partial-trace it over the ﬁrst
Hilbert space to ﬁnd a density matrix of the second system.
We have seen above that the partial trace of a pure state density matrix of
a bipartite system over one of the constituent Hilbert spaces yields a mixed
state.
How about the converse?
Given a mixed state density matrix, is
it always possible to ﬁnd a pure state density matrix whose partial trace
over the extra Hilbert space yields the given density matrix?
The answer
is yes and the process to ﬁnd the pure state is called the puriﬁcation. Let
ρ1 = 
k pk|ψk⟩⟨ψk| be a general density matrix of a system 1 with the Hilbert
space H1. Now let us introduce the second Hilbert space H2 whose dimension
is the same as that of H1. Then formally introduce a normalized vector
|Ψ⟩=

k
√pk|ψk⟩⊗|φk⟩,
(2.53)
where {|φk⟩} is an orthonormal basis of H2. We ﬁnd
tr 2|Ψ⟩⟨Ψ| =

i,j,k
(I ⊗⟨φi|)
√pjpk|ψj⟩|φj⟩⟨ψk|⟨φk|

(I ⊗|φi⟩)
=

k
pk|ψk⟩⟨ψk| = ρ1.
(2.54)
Thus it is always possible to purify a mixed state by tensoring an extra Hilbert
space of the same dimension as that of the original Hilbert space. It is easy
to see, by construction, that puriﬁcation is far from unique. In fact, there are
an inﬁnite number of puriﬁcations of a given mixed state density matrix; see
Exercise 2.9.
EXERCISE 2.8 Let
ρ1 = 1
4
1 0
0 3

be a density matrix with a basis {|ψi⟩}. Find a puriﬁcation of ρ1.
EXERCISE 2.9 Let
|Ψ⟩=

k
√pk|ψk⟩⊗|φk⟩
be a puriﬁcation of ρ1 = 
k pk|ψk⟩⟨ψk| ∈S(H). Show that
|Ψ′⟩=

k
√pk|ψk⟩⊗U|φk⟩
is another puriﬁcation of ρ1, where U is an arbitrary unitary matrix in
U(dimH).

Framework of Quantum Mechanics
47
2.4.3
Fidelity
It often happens that one has to compare two density matrices and tell how
much they are close to each other. An experimentalist, for example, conducts
an experiment and then wants to compare the resulting quantum state with
the theoretical prediction. A good measure for this purpose is ﬁdelity, which
we now deﬁne [17].
DEFINITION 2.2 Let ρ1 and ρ2 be two density matrices belonging to the
same state space S(H). Then the ﬁdelity is deﬁned by
F(ρ1, ρ2) = tr
√ρ1ρ2
√ρ1

,
(2.55)
where √ρ1 is chosen such that all the squre-roots of the eivenvalues are
positive-semideﬁnite.
A few comments are in order.
• Let ρ1 = 
i pi|pi⟩⟨pi| be the spectral decomposition of ρ1. Then the
requirement in the deﬁnition claims that √ρ1 = 
i
√pi|pi⟩⟨pi|.
• F(ρ, ρ) = 1 since
F(ρ, ρ) = tr
√ρρ√ρ

= tr ρ = 1.
• F is non-negative by deﬁnition and F(ρ1, ρ2) < 1 for ρ1 ̸= ρ2. See [17]
for the proof.
EXAMPLE 2.7 Let ρ1 = |ψ1⟩⟨ψ1| and ρ2 = |ψ2⟩⟨ψ2|.
We note √ρi =
|ψi⟩⟨ψi| = ρi by deﬁnition. Then the ﬁdelity for them is
F(ρ1, ρ2) = tr

|ψ1⟩⟨ψ1||ψ2⟩⟨ψ2||ψ1⟩⟨ψ1|
= |⟨ψ1|ψ2⟩|tr |ψ1⟩⟨ψ1| = |⟨ψ1|ψ2⟩|.
Let [ρ1, ρ2] = 0. Then they are simultaneously diagonalizable. Let ρi =

i pi|i⟩⟨i| and ρ2 = 
i qi|i⟩⟨i| be their spectral decompositions, where {|i⟩}
is the set of simultaneous eigenvectors, which is assumed to be an orthnormal
set. Then the ﬁdelity is
F(ρ1, ρ2) = tr

ijk
√pipkqj|i⟩⟨i|j⟩⟨j|k⟩⟨k| =

j
√pjqj.
EXERCISE 2.10 Let U be a unitary operator acting on ρ1 and ρ2. Show
that
F(Uρ1U †, Uρ2U †) = F(ρ1, ρ2).
(2.56)

48
QUANTUM COMPUTING
EXERCISE 2.11 Let
ρ1 = 1
2
⎛
⎜
⎜
⎝
1 0 0 0
0 0 0 0
0 0 0 0
0 0 0 1
⎞
⎟
⎟
⎠, ρ2 = 1
2
⎛
⎜
⎜
⎝
1 0 0 1
0 0 0 0
0 0 0 0
1 0 0 1
⎞
⎟
⎟
⎠.
Find the ﬁdelity F(ρ1, ρ2).
Now we are ready to proceed to the world of quantum information and
quantum computation. Variations on the themes introduced here and in the
previous chapter will appear repeatedly in the following chapters.
References
[1] P. A. M. Dirac, Principles of Quantum Mechanics (4th ed.), Clarendon
Press (1981).
[2] L. I. Shiﬀ, Quantum Mechanics (3rd ed.), McGraw-Hill (1968).
[3] A. Messiah, Quantum Mechanics, Dover (2000).
[4] J. J. Sakurai, Modern Quantum Mechanics (2nd Edition), Addison Wes-
ley, Boston (1994).
[5] L. E. Ballentine, Quantum Mechanics, World Scientiﬁc, Singapore
(1998).
[6] A. Peres, Quantum Theory: Concepts and Methods, Springer (2006).
[7] E. H. Kennard, Z. Phys. 44, 326 (1927).
[8] H. P. Robertson, Phys. Rev. 34 163, (1929).
[9] R. Horodecki et al., eprint, quant-ph/0702225 (2007).
[10] A. Ac´ın et al., Phys. Rev. Lett. 85, 1560 (2000).
[11] A. Ac´ın et al., Phys. Rev. Lett. 87, 040401 (2001).
[12] C. H. Bennett et al., Phys. Rev. A 59, 1070 (1999) and D. P. DiVincenzo,
D. W. Leung and B. M. Terhal, IEEE Trans. Info. Theory 48, 580
(2002). See also A. SaiToh, R. Rahimi and M. Nakahara, e-print quant-
ph/0703133.
[13] A. Peres, Phys. Rev. Lett. 77, 1413 (1996).
[14] M. Horodecki et al., Phys. Lett. A 223, 1 (1996).
[15] G. Vidal, J. Mod. Opt. 47, 355 (2000).

Framework of Quantum Mechanics
49
[16] P. Horodecki, Phys. Lett. A 232, 333 (1997).
[17] R. Jozsa, J. Mod. Opt. 41, 2315 (1994).


3
Qubits and Quantum Key Distribution
3.1
Qubits
A (Boolean) bit assumes two distinct values, 0 and 1. Bits constitute the
building blocks of the classical information theory founded by C. Shannon.
Quantum information theory, on the other hand, is based on qubits.
General references for this chapter are [1] and [2].
3.1.1
One Qubit
A qubit is a (unit) vector in the vector space C2, whose basis vectors are
denoted as
|0⟩=
1
0

and |1⟩=
 0
1

.
(3.1)
What these vectors physically mean depends on the physical realization em-
ployed for quantum-information processing.
• In some cases, |0⟩stands for a vertically polarized photon | ↕⟩, while
|1⟩represents a horizontally polarized photon | ↔⟩. Alternatively they
might correspond to photons polarized in diﬀerent directions. For ex-
ample, |0⟩may represent a polarization state
|
↔
⟩=
1
√
2
(| ↕⟩+ | ↔⟩),
while |1⟩represents a state
|
↔
⟩=
1
√
2(| ↕⟩−| ↔⟩).
Note that if | ↕⟩(| ↔⟩) corresponds to an eigenstate of σz with the eigen-
value +1 (−1), respectively, then |
↔
⟩(|
↔
⟩) corresponds to an eigenstate
of σx with the eigenvalue +1 (−1), respectively.
Similarly, the states
|σ+⟩=
1
√
2(| ↕⟩+ i| ↔⟩),
|σ−⟩=
1
√
2(| ↕⟩−i| ↔⟩)
51

52
QUANTUM COMPUTING
correspond to the eigenstates of σy with the eigenvalues ±1 and repre-
sent circularly polarized photons.
• They may represent spin states of an electron, |0⟩= | ↑⟩and |1⟩=
| ↓⟩. Electrons are replaced by nuclei with spin 1/2 in NMR quantum
computing.
• Truncated two states from many levels may also be employed as a qubit.
Take the ground state and the ﬁrst excited state of ionic energy levels
or atomic energy levels, for example. We may assign |0⟩to the ground
state and |1⟩to the ﬁrst excited state.
In any case, we have to ﬁx a set of basis vectors when we carry out quantum
information processing. All the physics should be described with respect to
this basis. In the following, the basis is written in an abstract form as {|0⟩, |1⟩},
unless otherwise stated.
A remark is in order. The third example of a qubit above suggests that a
quantum system with more than two states may be employed for information
storage and information processing. If a quantum system admits three diﬀer-
ent states, it is called a qutrit, while if it takes d diﬀerent states, it is called a
qudit. A spin S particle, for example, takes d = 2S +1 spin states and works
as a qudit. The signiﬁcance of qutrits and qudits in information processing is
still to be explored.
It is convenient to assume the vector |0⟩corresponds to the classical value
0, while |1⟩to 1 in quantum computation. Moreover it is possible for a qubit
to be in a superposition state:
|ψ⟩= a|0⟩+ b|1⟩with a, b ∈C, |a|2 + |b|2 = 1.
(3.2)
The fundamental requirement of quantum mechanics is that if we make mea-
surement on |ψ⟩to see whether it is in |0⟩or |1⟩, the outcome will be 0 (1) with
the probability |a|2 (|b|2), and the state immediately after the measurement
is |0⟩(|1⟩).
Although a qubit may take inﬁnitely many diﬀerent states, it should be kept
in mind that we can extract from it as the same amount of information as that
of a classical bit. Information can be extracted only through measurements.
When we make measurement on a qubit, the state vector "collapses" to the
eigenvector that corresponds to the eigenvalue observed. Suppose that a spin
is in the state a|0⟩+ b|1⟩. If we observe that the z-component of the spin
is +1/2, the system immediately after the measurement is deﬁnitely in the
state |0⟩.
This happens with probability ⟨ψ|0⟩⟨0|ψ⟩= |a|2.
The outcome
of a measurement on a qubit is always one of the eigenvalues, which we call
abstractly 0 and 1, just like for a classical bit.
We are tempted to think
that by making measurements of a large number of copies of this system, we
may be able to determine the coeﬃcients a and b (or, at least, |a| and |b|) of
the wavefunction. But this is not the case due to the "no-cloning theorem"

Qubits and Quantum Key Distribution
53
proved later. It is impossible to duplicate an unknown quantum system with
a unitary transformation.
3.1.2
Bloch Sphere
It is useful, for many purposes, to express a state of a single qubit graphically.
Let us parameterize a one-qubit state |ψ⟩with θ and φ as
|ψ(θ, φ)⟩= cos θ
2|0⟩+ eiφ sin θ
2|1⟩.
(3.3)
We are not interested in the overall phase, and the phase of |ψ⟩is ﬁxed in
such a way that the coeﬃcient of |0⟩is real. Now we show that |ψ(θ, φ)⟩is
an eigenstate of ˆn(θ, φ) · σ with the eigenvalue +1. Here σ = (σx, σy, σz) and
ˆn(θ, φ) is a real unit vector called the Bloch vector with components
ˆn(θ, φ) = (sin θ cos φ, sin θ sin φ, cos θ)t.
In fact, a straightforward calculation shows that
ˆn(θ, φ) · σ|ψ(θ, φ)⟩=
 cos θ
sin θe−iφ
sin θeiφ −cosθ
 
cos θ
2
eiφ sin θ
2

=

cos θ
2 cos θ + sin θ
2 sin θ
eiφ  
cos θ
2 sin θ −cos θ sin θ
2
!

=

cos θ
2
eiφ sin θ
2

= |ψ(θ, φ)⟩.
It is therefore natural to assign a unit vector ˆn(θ, φ) to a state vector |ψ(θ, φ)⟩.
Namely, a state |ψ(θ, φ)⟩is expressed as a unit vector ˆn(θ, φ) on the surface of
the unit sphere, called the Bloch sphere. This correspondence is one-to-one
if the ranges of θ and φ are restricted to 0 ≤θ ≤π and 0 ≤φ < 2π.
EXERCISE 3.1 Let |ψ(θ, φ)⟩be the state given by Eq. (3.3). Show that
⟨ψ(θ, φ)|σ|ψ(θ, φ)⟩= ˆn(θ, φ),
(3.4)
where ˆn is the unit vector deﬁned above.
It is possible to express a density matrix ρ of a qubit using a unit ball this
time. Since ρ is a positive semi-deﬁnite Hermitian matrix with unit trace, its
most general form is
ρ = 1
2
⎛
⎝I +

i=x,y,z
uiσi
⎞
⎠,
(3.5)
where ui are components of a real vector u with |u| ≤1. The reality fol-
lows from the Hermiticity requirement, and Tr ρ = 1 is easy to check. The

54
QUANTUM COMPUTING
eigenvalues of ρ are
λ+ = 1
2

1 +

|u|

, λ−= 1
2

1 −

|u|

(3.6)
and therefore non-negative. In case |u| = 1, the eigenvalue λ−vanishes and
rank ρ = 1. Therefore the surface of the unit ball corresponds to pure states.
The converse is also shown easily. In contrast, all the points u inside a unit
ball correspond to mixed states. The ball is called the Bloch ball, also called
the Bloch sphere in a mathematically less strict sense, and the vector u is
also called the Bloch vector. The normalized vector n of the Bloch sphere is
a special case of u restricted in pure states.
EXERCISE 3.2 Find the density matrix of a pure state (3.3) and write it
in the form of Eq. (3.5).
EXERCISE 3.3 Let ρ be given by Eq. (3.5). Show that
⟨σ⟩= tr (ρσ) = u.
(3.7)
3.1.3
Multi-Qubit Systems and Entangled States
Let us consider a group of many (n) qubits next. Such a system behaves
quite diﬀerently from a classical one, and this diﬀerence gives a distinguishing
aspect to quantum information theory. An n-qubit system is often called a
(quantum) register in the context of quantum computing.
Consider a classical system made of several components. The state of this
system is completely determined by specifying the state of each component.
This is not the case for a quantum system.
A quantum system made of
many components is not necessarily described by specifying the state of each
component as we have learned in §2.3.
As an example, let us consider an n-qubit register. Suppose we specify
the state of each qubit separately in analogy with a classical case. Each of
the qubits is then described by a two-dimensional complex vector of the form
ai|0⟩+ bi|1⟩, and we need 2n complex numbers {ai, bi}1≤i≤n to specify the
state. This corresponds the the tensor product state
(a1|0⟩+ b1|1⟩) ⊗(a2|0⟩+ b2|1⟩) ⊗. . . ⊗(an|0⟩+ bn|1⟩)
introduced in §2.3. If the system is treated in a fully quantum-mechanical
way, however, we have to include superposition of such tensor product states,
which is not necessarily decomposable into a tensor product form. Such a state
is entangled (see §2.3). A general state vector of the register is represented
as
|ψ⟩=

ik=0,1
ai1i2...in|i1⟩⊗|i2⟩⊗. . . ⊗|in⟩

Qubits and Quantum Key Distribution
55
and lives in a 2n-dimensional complex vector space.
Note that 2n ≫2n
for a large number n.
The ratio 2n/2n is ∼6.3 × 1027 for n = 100 and
∼5.4 × 10297 for n = 1000. These astronomical numbers tell us that most
quantum states in a Hilbert space with large n are entangled, i.e., they do not
have classical analogy which tensor product states have. Entangled states that
have no classical counterparts are extremely powerful resources for quantum
computation and quantum communication as we will show later.
Let us consider a system of two qubits for deﬁniteness.
The combined
system has a basis {|00⟩, |01⟩, |10⟩, |11⟩}. More generally, a basis for a system
of n qubits may be taken to be {|bn−1bn−2 . . . b0⟩}, where bn−1, bn−2, . . . , b0 ∈
{0, 1}. It is also possible to express the basis in terms of the decimal system.
We write |x⟩, instead of |bn−1bn−2 . . . b0⟩, where x = bn−12n−1 + bn−22n−2 +
. . . + b0 is the decimal expression of the binary number bn−1bn−2 . . . b0. Thus
the basis for a two-qubit system may be written also as {|0⟩, |1⟩, |2⟩, |3⟩} with
this decimal notation. Whether the binary system or the decimal system is
employed should be clear from the context.
An n-qubit system has 2n =
exp(n ln 2) basis vectors.
The set
{|Φ+⟩=
1
√
2
(|00⟩+ |11⟩),
|Φ−⟩=
1
√
2
(|00⟩−|11⟩),
|Ψ+⟩=
1
√
2(|01⟩+ |10⟩),
|Ψ−⟩=
1
√
2(|01⟩−|10⟩)}
(3.8)
is an orthonormal basis of a two-qubit system and is called the Bell basis.
Each vector is called the Bell state or the Bell vector. Note that all the
Bell states are entangled.
EXERCISE 3.4 The Bell basis is obtained from the binary basis {|00⟩, |01⟩,
|10⟩, |11⟩} by a unitary transformation. Write down the unitary transforma-
tion explicitly.
Among three-qubit entangled states, the following two states are important
for various reasons and hence deserve special names. The state
|GHZ⟩=
1
√
2(|000⟩+ |111⟩)
(3.9)
is called the Greenberger-Horne-Zeilinger state and is often abbreviated
as the GHZ state[3].
Another important three-qubit state is the W state
[4],
|W⟩=
1
√
3(|100⟩+ |010⟩+ |001⟩).
(3.10)
EXERCISE 3.5 Find the expectation value of σx ⊗σz measured in each of
the Bell states.

56
QUANTUM COMPUTING
3.1.4
Measurements
Classical information theory is formulated independently of measurements of
the system under consideration. This is because the readout of the result is al-
ways the same for anyone and at any time, provided that the system processes
the same information. This is completely diﬀerent in quantum information
processing. Measurement is an essential part of the theory as we see below.
By making a measurement on a system, we project the state vector to one
of the basis vectors that the measurement equipment deﬁnes.∗
Suppse we
have a state vector |ψ⟩= a|0⟩+ b|1⟩and measure it to see if it is in the state
|0⟩or |1⟩. Depending on the system, this means if a spin points up or down
or a photon is polarized horizontally or vertically, for example. The result is
either 0 or 1. In the ﬁrst case, the state "collapses" to |0⟩while in the second
case, to |1⟩. We ﬁnd, after many measurements, the probability of obtaining
outcome 0 (1) is |a|2 (|b|2).
To be more formal, we construct a measurement operator Mm such that
the probability of obtaining the outcome m in the state |ψ⟩is
p(m) = ⟨ψ|M †
mMm|ψ⟩,
(3.11)
and the state immediately after the measurement is
|m⟩= Mm|ψ⟩

p(m)
.
(3.12)
In the above example, the measurement operators are nothing but projection
operators; M0 = |0⟩⟨0| and M1 = |1⟩⟨1|. In fact, we have
p(0) = ⟨ψ|M †
0M0|ψ⟩= ⟨ψ|0⟩⟨0|ψ⟩= |a|2,
and
M0|ψ⟩

p(0)
= a
|a||0⟩≃|0⟩,
and similarly for the other case M1. It should be noted that a quantum state
is deﬁned up to a phase and hence a/|a| does not play any role. [Remark: See
[2] for the diﬀerence between a general measurement operator and a projective
measurement operator.]
Suppose we are given many copies of a particular state |ψ⟩. If we measure
an observable M in each of the copies, the expectation value of M is given,
in terms of the projection operators, by
E(M) =

m
m p(m) =

m
m⟨ψ|Pm|ψ⟩
= ⟨ψ|

m
mPm|ψ⟩= ⟨ψ|M|ψ⟩,
(3.13)
∗This is called a projective measurement as was noted in Chapter 2. We will be concerned
only with projective measurements, unless stated otherwise.

Qubits and Quantum Key Distribution
57
where use has been made of the spectral decomposition M =  mPm. The
standard deviation is given by
Δ(M) =

⟨(M −⟨M⟩)2⟩=

⟨M 2⟩−⟨M⟩2.
(3.14)
Let us analyze measurements in a two-qubit system in some detail. An
arbitrary state is written as
|ψ⟩= a|00⟩+ b|01⟩+ c|10⟩+ d|11⟩,
|a|2 + |b|2 + |c|2 + |d|2 = 1,
where a, b, c, d ∈C. We make a measurement of the ﬁrst qubit with respect
to the basis {|0⟩, |1⟩}. To this end, we rewrite the state as
a|00⟩+ b|01⟩+ c|10⟩+ d|11⟩
= |0⟩⊗(a|0⟩+ b|1⟩) + |1⟩⊗(c|0⟩+ d|1⟩)
= u|0⟩⊗
a
u|0⟩+ b
u|1⟩

+ v|1⟩⊗
 c
v |0⟩+ d
v |1⟩

,
where u =

|a|2 + |b|2 and v =

|c|2 + |d|2. The measurement operators
acting on the ﬁrst qubit are
M0 = |0⟩⟨0| ⊗I,
M1 = |1⟩⟨1| ⊗I.
(3.15)
Note that we need to specify ⊗I explicitly since we are working in a two-qubit
Hilbert space C4. Upon a measurement of the ﬁrst qubit, we obtain 0 with
the probability
⟨ψ|M0|ψ⟩= u2 = |a|2 + |b|2,
projecting the state to
M0|ψ⟩

p(0)
= |0⟩⊗
a
u|0⟩+ b
u|1⟩

,
while we obtain |1⟩with the probability v2 = |c|2 + |d|2, projecting the state
to |1⟩⊗
 c
v |0⟩+ d
v |1⟩

. Note that the state after the measurement has unit
norm in both cases. The measurement of the second qubit can be carried out
similarly. Measurements on an n-qubit system can be carried out by repeating
one-qubit measurement n times.
In the two-qubit example above, the Hilbert space for the system is sepa-
rated into a direct sum of H0, where the ﬁrst qubit is in the state |0⟩, and H1,
where it is in |1⟩: H = H0 ⊕H1. An arbitrary two-qubit state |ψ⟩is uniquely
decomposed into two vectors, each of which belongs to H0 or H1 as
(|0⟩⟨0| ⊗I)|ψ⟩∈H0,
(|1⟩⟨1| ⊗I)|ψ⟩∈H1,
where normalization has been ignored. More generally, an observation of k
qubits in an n-qubit system yields 2k possible outcomes mi (1 ≤i ≤2k).

58
QUANTUM COMPUTING
Accordingly, the 2n-dimensional Hilbert space of the system is separated into
the direct sum of mutually orthogonal subspaces Hm1, Hm2, . . . , Hm2k as H =
Hm1 ⊕Hm2 ⊕. . .⊕Hm2k . When the result of the observation of the k qubits is
mi, the state after the observation is projected to the subspace Hmi. It should
be clear from the construction that each subspace Hmi has dimension 2n/2k =
2n−k. The measurement device projects the state before the observation
|ψ⟩= cm1|ψm1⟩+ cm2|ψm2⟩+ . . . + cm2k |ψm2k ⟩,
(|ψmi⟩∈Hmi)
into one of the subspaces Hmi randomly with the probability |cmi|2.
Measurement gives an alternative viewpoint to entangled states. A state
is not entangled if a measurement of a qubit does not aﬀect the state of the
other qubits. Suppose the ﬁrst qubit of the state
1
√
2(|00⟩+ |11⟩)
was measured to be 0 (1).
Then the outcome of the measurement of the
second qubit is deﬁnitely 0 (1). Therefore the measurement of the ﬁrst qubit
aﬀects the outcome of the measurement on the second qubit, which shows
that the initial state is an entangled state. In other words, there exists a
strong correlation between the two qubits. This correlation may be used for
information processing as will be shown later. In contrast with this, the state
1
√
2
(|00⟩+ |01⟩) is not entangled since it can be written as
1
√
2
(|00⟩+ |01⟩) = |0⟩⊗1
√
2
(|0⟩+ |1⟩).
Irrespectively of the measurement of the second qubit, the measurement of
the ﬁrst qubit deﬁnitely yields 0. Moreover, the second qubit is measured to
be 0 (1) with the probability 1/2, independently of whether the ﬁrst qubit is
measured or not.
EXERCISE 3.6 In many quantum algorithms, the result of an action of a
function f on x is encoded into the form
Uf : N

x
|x⟩|0⟩→N

x
|x⟩|f(x)⟩,
where |x⟩stands for the tensor product state |bn−1bn−2 . . . b0⟩with x =
bn−12n−1 + bn−22n−2 + . . . b0 and N is the normalization constant. The ﬁrst
register is for the input x, while the second one is for the corresponding output
f(x). Note that Uf acts on all possible states simultaneously.
Let f(x) = ax mod N, where a and N are coprime, and consider the state
Uf

1
√
512
511

x=0
|x⟩|0⟩

=
1
√
512
511

x=0
|x⟩|ax mod N⟩

Qubits and Quantum Key Distribution
59
FIGURE 3.1
EPR pair produced by a source in the middle. One particle is sent to Alice
and the other to Bob.
with a = 6 and N = 91. Suppose the measurement of the ﬁrst register results
in (1) x = 11, (2) x = 23 and (3) x = 35. What is the state immediately after
each measurement?
3.1.5
Einstein-Podolsky-Rosen (EPR) Paradox
Einstein, Podolsky and Rosen (EPR) proposed a Gedanken experiment which,
at ﬁrst glance, shows that an entangled state violates an axiom of the special
theory of relativity [5]. Suppose a particle source produces the so-called EPR
pair in the state
|Ψ−⟩=
1
√
2
(|01⟩−|10⟩)
and it sends one particle to Alice and the other to Bob, who may be separated
far away (see Fig. 3.1).† Alice measures her particle and obtains her reading
|0⟩or |1⟩. Depending on her reading, the EPR state is projected to |01⟩(|10⟩),
and Bob will deﬁnitely observe |1⟩(|0⟩) in his measurement. The change of
the state
1
√
2(|01⟩−|10⟩) →|01⟩
or
|10⟩
(3.16)
takes place instantaneously even when they are separated by a large distance.
It seems that Alice's measurement propageted to Bob's qubit instantaneously,
and it violates the special theory of relativity. This is the very point EPR
proposed to defeat quantum mechanics.
Note, however, that nothing has propagated from Alice to Bob and vice
versa, upon Alice's measurement. Clearly no energy has propagated. What
about information? It is impossible for Alice to control her and hence Bob's
readings.
Therefore it is impossible to use EPR pairs to send a sensible
message from Alice to Bob. If they could, the message would be sent in-
stantaneously, which certainly violates the special theory of relativity. If a
large number of EPR pairs are sent to Alice and Bob and they independently
†Alice and Bob are names frequently used in information theory.

60
QUANTUM COMPUTING
measure their qubits, they will observe random sequences of 0 and 1. They
notice that their readings are strongly correlated only after they exchange
their sequences by means of classical communication, which can be done at
most with the speed of light.
3.2
Quantum Key Distribution (BB84 Protocol)
A large number of qubits and gate operations on them are involved in most
practical applications of quantum computing. We will postpone these appli-
cations in the subsequent chapters. Is there any practical use of single qubits
then? There is a suprisingly secure way of distributing a cryptographic key
using a sequence of individual qubits [6] called BB84 protocol, which is al-
ready available commercially [7]. Quantum key distribution (QKD) is a
secure way of distributing an encryption and decryption key by making use of
qubits. The sender and the receiver can detect a possible third party eaves-
dropping their communication by comparing the sequence sent with that of
the received one.
One-time pad is an absolutely secure cryptosystem if and only if the key
for encoding and decoding is shared only between the sender and the receiver
and used once for all. Suppose we want to send a message 1100101001 in a
binary form using a key 1001010011, for example. The message is encrypted
by adding the message to the key bitwise modulo 2, which we denote by i⊕j.
We have explicitly 0⊕0 = 0, 0⊕1 = 1, 1⊕0 = 1, 1⊕1 = 0. For the above case,
we have the encrypted message 0101111010. For decryption, the receiver is
required only to add the same key bitwise again since (i⊕j)⊕j = i. Decryption
of an encrypted message is impossible without the key since there are 2n
possible keys for an n-bit string and many of them yield sensible messages.
This cryptosystem is not secure any more if the same key is used many times.
A key must be sent from the sender to the receiver, or in the opposite
direction, each time this cryptosystem is used. If the key is sent through a
classical communication channel, there always exists a possibility of eaves-
dropping. However, this problem is completely solved if a quantum channel is
employed as we show now. Suppose Alice wants to send Bob a one-time pad
key to encode and decode her secret message. They can communicate with
each other using a bidirectional classical channel. There also exists a quan-
tum channel that is unidirectional from Alice to Bob. See Fig. 3.2. There
is a possibility that their communication is being eavesdropped by a third
party, which we call Eve. Alice sends Bob many qubits, one by one, and Bob
measures the states of each of the qubits he receives. To make our discussion
concrete, we assume qubits are made of polarized photons.
Alice employs two coding systems when she sends photons to Bob. The

Qubits and Quantum Key Distribution
61
FIGURE 3.2
Quantum key distribution protocol BB84.
coding systems are
coding system (1)
0 	→| ↕⟩,
1 	→| ↔⟩,
coding system (2)
0 	→|
↔
⟩,
1 	→|
↔
⟩.
They are chosen at random for each photon. Bob also chooses coding systems
(1) and (2) randomly, independently of Alice, to measure the polarization of
each photon Alice sends. Suppose 4N photons are sent from Alice to Bob.
After all the photons have been sent, Alice and Bob exchange the sequence of
the coding systems they employed using the classical communication channel
(so this is not 100 % secure), without disclosing the bits (0 or 1) Alice sent and
Bob received. They will know, as a result, for which photons they employed
the same coding systems. They discard all the cases for which they employed
diﬀerent coding systems since the sent bits and the received bits agree only
with probability 1/2 in these cases. Now ∼2N photons, on average, should
be correctly transmitted and they share ∼2N bits of binary numbers in their
hands. To make sure that no one eavesdrops their quantum channel, they
choose N cases randomly out of 2N cases with the same coding systems
employed and exchange N bits (0 or 1) associated with these N cases over
the classical channel. If there are no eavesdroppers operating, they should
have the same bits for all the N cases. After verifying that they are free from
eavesdroppers, they discard these N cases (since the classical channel may be
eavesdropped) and use the remaining N bits to generate a one-time pad key.
Suppose Eve is in action. After eavesdropping the photons, she immedi-
ately sends Bob her results in order to hide her presence. Note that Bob
will immediately notice the presence of an eavesdropper from missing pho-
tons unless Eve sends some photons to Bob. Eve's coding system is diﬀerent
from Alice's also with probability 1/2, and she sends Bob the results of her

62
QUANTUM COMPUTING
measurement with the same coding system as she used to eavesdrop. Then
there exist cases in which the photon Alice sends disagrees with the one Bob
receives, even when Alice and Bob employ the same coding system.
This
happens with probability 1/4 as is shown now. Suppose both Alice and Bob
happen to employ the coding system (1) and Alice sends Bob 0. Eve will use
the coding system (1) with probability 1/2, in which case Eve measures 0 and
sends Bob | ↕⟩. Bob, also employing the coding system (1), will obtain 0 with
probability 1. If, in contrast, Eve employs coding system (2), which happens
with probability 1/2, then Eve measures 0 or 1 with probability 1/2 for each
photon and sends Bob her result with coding system (2). Then Bob, with
coding system (1), will obtain 0 or 1 both with probability 1/2. In the end of
the day, Bob obtains 0 with probability 3/4 and 1 with probability 1/4, even
though Alice and Bob employ the same coding system. Suppose 4N photons
are sent from Alice to Bob, as before. They ﬁnd their codings agree in 2N
cases and discard the remaining cases. Comparing N cases to check if Eve is
in action, they ﬁnd approximately N/4 bits disagree, from which they detect
there is an eavesdropper in the quantum channel. They may try diﬀerent
quantum channels until they ﬁnd one whose security is veriﬁed.
EXAMPLE 3.1 Suppose the sent and received sequences are
Alice sends
0
1
0
0
1
1
0
1
0
0
1
0 . . .
Alice's code (1) (2) (1) (2) (2) (1) (2) (1) (2) (2) (1) (1) . . .
Bob's code (1) (2) (2) (1) (2) (2) (1) (2) (1) (2) (2) (1) . . .
Bob reads
0
1
?
?
1
?
?
?
?
0
?
0 . . .
(3.17)
where ? stands for 0 or 1. Alice and Bob keep the sequence 0, 1, 1, 0, 0, . . . to
check the security of the channel and to generate a key.
Suppose Eve eavesdrops their communication. Then their readings may, for
example, be
Alice sends
0
1
0
0
1
1
0
1
0
0
1
0 . . .
Alice's code (1) (2) (1) (2) (2) (1) (2) (1) (2) (2) (1) (1) . . .
Eve's code (1) (2) (1) (2) (1) (2) (1) (2) (1) (2) (1) (2) . . .
Eve reads
0
1
0
0
?
?
?
?
?
0
1
? . . .
Bob's code (1) (2) (2) (1) (2) (2) (1) (2) (1) (2) (2) (1) . . .
Bob reads
0
1
?
?
?
?
?
?
?
0
?
? . . .
(3.18)
The 5th and 12th bits Bob obtains may not be the correct ones, even though
Alice and Bob employ the same coding system.
Other QKD protols are E91 protocol [8] and B92 protocol [9].

Qubits and Quantum Key Distribution
63
References
[1] E. Riefell and W. Polak, ACM Computing Surveys (CSUR) 32, 300
(2000).
[2] M. A. Neilsen and I. L. Chuang, Quantum Computation and Quantum
Information, Cambridge University Press (2000).
[3] D. M. Greenberger, M. A. Horne and A. Zeilinger, in 'Bell's Theorem,
Quantum Theory, and Conceptions of the Universe, ed. M. Kafatos,
Kluwer, Dordrecht (1989). Also avilable as arXiv:0712.0921 [quant-ph].
[4] W. D¨ur, G. Vidal and J. I. Cirac, Phys. Rev. A 62, 062314 (2000).
[5] A. Einstein, B. Podolsky, N. Rosen, Phys. Rev. 41, 777 (1935).
[6] C. H. Bennett and G. Brassard, in Proc. IEEE Int. Conf. Comp., Systems
and Signal Processing 175 (1984).
[7] http://www.magiqtech.com/
[8] A. Ekert, Phys. Rev. Lett. 67, 661 (1991).
[9] C. H. Bennett, Phys. Rev. Lett. 68, 3121 (1992).


4
Quantum Gates, Quantum Circuit and
Quantum Computation
4.1
Introduction
Now that we have introduced qubits to store information, it is time to consider
operations acting on them. If they are simple, these operations are called
gates, or more precisely quantum gates, in analogy with those in classical
logic circuits. More complicated quantum circuits are composed of these
simple gates. A collection of quantum circuits for executing a complicated
algorithm, a quantum algorithm, is a part of a quantum computation.
DEFINITION 4.1 (Quantum Computation) A quantum computation
is a collection of the following three elements:
(1) A register or a set of registers,
(2) A unitary matrix U, which is taylored to execute a given quantum al-
gorithm, and
(3) Measurements to extract information we need.
More formally, we say a quantum computation is the set {H, U, {Mm}},
where H = C2n is the Hilbert space of an n-qubit register, U ∈U(2n) repre-
sents the quantum algorithm and {Mm} is the set of measurement operators.
The hardware (1) along with equipment to control the qubits is called a
quantum computer.
Suppose the register is set to a ﬁducial initial state, |ψin⟩= |00 . . .0⟩, for
example. A unitary matrix Ualg is designed to represent an algorithm which
we want to execute. Operation of Ualg on |ψin⟩yields the output state |ψout⟩=
Ualg|ψin⟩. Information is extracted from |ψout⟩by appropriate measurements.
Actual quantum computation processes are very diﬀerent from those of a
classical counterpart. In a classical computer, we input the data from a key-
board or other input devices and the signal is sent to the I/O port of the
computer, which is then stored in the memory, then fed into the micropro-
cessor, and the result is stored in the memory before it is printed or it is
65

66
QUANTUM COMPUTING
displayed on the screen. Thus information travels around the circuit. In con-
trast, information in quantum computation is stored in a register, ﬁrst of all,
and then external ﬁelds, such as oscillating magnetic ﬁelds, electric ﬁelds or
laser beams are applied to produce gate operations on the register. These
external ﬁelds are designed so that they produce desired gate operation, i.e.,
unitary matrix acting on a particular set of qubits. Therefore the information
sits in the register and they are updated each time the gate operation acts on
the register.
One of the other distinctions between classical computation and quantum
computation is that the former is based upon digital processing and the latter
upon hybrid (digital + analogue) processing. A qubit may take an arbitrary
superposition of |0⟩and |1⟩, and hence their coeﬃcients are continuous com-
plex numbers. A gate is also an element of a relevant unitary group, which
contains continuous parameters.
An operation such as "rotate a speciﬁed
spin around the x-axis by an angle π" is implemented by applying a partic-
ular pulse of speciﬁed amplitude, angle and duration. These parameters are
continuous numbers and always contain errors. These aspects might cause
challenging diﬃculties in a physical realization of a quantum computer.
Parts of this chapter depend on [1, 2] and [3].
4.2
Quantum Gates
We have so far studied the change of a state upon measurements.
When
measurements are not made, the time evolution of a state is described by
the Schr¨odinger equation. The system preserves the norm of the state vector
during time evolution.
Thus the time development is unitary.
Let U be
such a time-evolution operator; UU † = U †U = I. We will be free from the
Schr¨odinger equation in the following and assume there exist unitary matrices
which we need. Physical implementation of these unitary matrices is another
important area of quantum information processing and is a subject of the
second part of this book.
One of the important conclusions derived from the unitarity of gates is that
the computational process is reversible.
4.2.1
Simple Quantum Gates
Examples of quantum gates which transform a one-qubit state are given below.
We call them one-qubit gates in the following. Linearity guarantees that the
action of a gate is completely speciﬁed as soon as its action on the basis
{|0⟩, |1⟩} is given.
Let us consider the gate I whose action on the basis
vectors are deﬁned by I : |0⟩→|0⟩, |1⟩→|1⟩. The matrix expression of this

Quantum Gates, Quantum Circuit and Quantum Computation
67
gate is easily found as
I = |0⟩⟨0| + |1⟩⟨1| =
1 0
0 1

.
(4.1)
Similarly we introduce X : |0⟩→|1⟩, |1⟩→|0⟩, Y : |0⟩→−|1⟩, |1⟩→|0⟩,
and Z : |0⟩→|0⟩, |1⟩→−|1⟩, whose matrix representations are
X = |1⟩⟨0| + |0⟩⟨1| =

0 1
1 0

= σx,
(4.2)
Y = |0⟩⟨1| −|1⟩⟨0| =
0 −1
1 0

= −iσy,
(4.3)
Z = |0⟩⟨0| −|1⟩⟨1| =

1 0
0 −1

= σz.
(4.4)
The transformation I is the trivial (identity) transformation, while X is the
negation (NOT), Z the phase shift and Y = XZ the combination of them. It
is easily veriﬁed that these gates are unitary.
The CNOT (controlled-NOT) gate is a two-qubit gate, which plays
quite an important role in quantum computation.
The gate ﬂips the sec-
ond qubit (the target qubit) when the ﬁrst qubit (the control qubit) is
|1⟩, while leaving the second bit unchanged when the ﬁrst qubit state is |0⟩.
Let {|00⟩, |01⟩, |10⟩, |11⟩} be a basis for the two-qubit system. In the following,
we use the standard basis vectors with components
|00⟩= (1, 0, 0, 0)t , |01⟩= (0, 1, 0, 0)t , |10⟩= (0, 0, 1, 0)t , |11⟩= (0, 0, 0, 1)t .
The action of the CNOT gate, whose matrix expression will be written as
UCNOT, is
UCNOT : |00⟩	→|00⟩, |01⟩	→|01⟩, |10⟩	→|11⟩, |11⟩	→|10⟩.
It has two equivalent expressions
UCNOT = |00⟩⟨00| + |01⟩⟨01| + |11⟩⟨10| + |10⟩⟨11|
= |0⟩⟨0| ⊗I + |1⟩⟨1| ⊗X,
(4.5)
having a matrix form
UCNOT =
⎛
⎜
⎜
⎝
1 0 0 0
0 1 0 0
0 0 0 1
0 0 1 0
⎞
⎟
⎟
⎠.
(4.6)
The second expression of the RHS in Eq. (4.5) shows that the action of UCNOT
on the target qubit is I when the control qubit is in the state |0⟩, while it is σx
when the control qubit is in |1⟩. Verify that UCNOT is unitary and, moreover,
idempotent, i.e., U 2
CNOT = I.

68
QUANTUM COMPUTING
Let {|i⟩} be the basis vectors, where i ∈{0, 1}. The action of CNOT on
the input state |i⟩|j⟩is written as |i⟩|i ⊕j⟩, where i ⊕j is an addition mod 2,
that is, 0 ⊕0 = 0, 0 ⊕1 = 1, 1 ⊕0 = 1 and 1 ⊕1 = 0.
EXERCISE 4.1 Show that the UCNOT cannot be written as a tensor prod-
uct of two one-qubit gates.
EXERCISE 4.2 Let (a|0⟩+ b|1⟩) ⊗|0⟩be an input state to a CNOT gate.
What is the output state?
It is convenient to introduce graphical representations of quantum gates. A
one-qubit gate whose unitary matrix representation is U is depicted as
The left horizontal line is the input qubit state, while the right horizontal line
is the output qubit state. Therefore the time ﬂows from the left to the right.
A CNOT gate is expressed as
where • denotes the control bit, while " denotes the conditional negation.
There may be many control bits (see CCNOT gate below).
More generally, we consider a controlled-U gate,
V = |0⟩⟨0| ⊗I + |1⟩⟨1| ⊗U,
(4.7)
in which the target bit is acted on by a unitary transformation U only when
the control bit is |1⟩. This gate is denoted graphically as
EXERCISE 4.3 (1) Find the matrix representation of the "upside down"
CNOT gate (a) in the basis {|00⟩, |01⟩, |10⟩, |11⟩}.

Quantum Gates, Quantum Circuit and Quantum Computation
69
(2) Find the matrix representation of the circuit (b).
(3) Find the matrix representation of the circuit (c). Find the action of the
circuit on a tensor product state |ψ1⟩⊗|ψ2⟩.
The CCNOT (Controlled-Controlled-NOT) gate has three inputs, and
the third qubit ﬂips when and only when the ﬁrst two qubits are both in the
state |1⟩. The explicit form of the CCNOT gate is
UCCNOT = (|00⟩⟨00| + |01⟩⟨01| + |10⟩⟨10|) ⊗I + |11⟩⟨11| ⊗X.
(4.8)
This gate is graphically expressed as
The CCNOT gate is also known as the Toﬀoli gate.
4.2.2
Walsh-Hadamard Transformation
The Hadamard gate or the Hadamard transformation H is an important
unitary transformation deﬁned by
UH : |0⟩→
1
√
2(|0⟩+ |1⟩)
|1⟩→
1
√
2(|0⟩−|1⟩).
(4.9)
It is used to generate a superposition state from |0⟩or |1⟩. The matrix repre-
sentation of H is
UH =
1
√
2(|0⟩+ |1⟩)⟨0| + 1
√
2(|0⟩−|1⟩)⟨1| =
1
√
2
 1 1
1 −1

.
(4.10)
A Hadamard gate is depicted as
There are numerous important applications of the Hadamard transforma-
tion. All possible 2n states are generated, when UH is applied on each qubit

70
QUANTUM COMPUTING
of the state |00 . . . 0⟩:
(H ⊗H ⊗. . . ⊗H)|00 . . .0⟩
=
1
√
2(|0⟩+ |1⟩) ⊗1
√
2(|0⟩+ |1⟩) ⊗. . . 1
√
2(|0⟩+ |1⟩)
=
1
√
2n
2n−1

x=0
|x⟩.
(4.11)
Therefore, we produce a superposition of all the states |x⟩with 0 ≤x ≤2n−1
simultaneously. This action of H on an n-qubit system is called the Walsh
transformation, or Walsh-Hadamard transformation, and denoted as
Wn. Note that
W1 = UH,
Wn+1 = UH ⊗Wn.
(4.12)
EXERCISE 4.4 Show that Wn is unitary.
EXERCISE 4.5 Show that the two circuits below are equivalent:
This exercise shows that the control bit and the target bit in a CNOT gate
are interchangeable by introducing four Hadamard gates.
EXERCISE 4.6 Let us consider the following quantum circuit
(4.13)
where q1 denotes the ﬁrst qubit, while q2 denotes the second. What are the
outputs for the inputs |00⟩, |01⟩, |10⟩and |11⟩?
4.2.3
SWAP Gate and Fredkin Gate
The SWAP gate acts on a tensor product state as
USWAP|ψ1, ψ2⟩= |ψ2, ψ1⟩.
(4.14)

Quantum Gates, Quantum Circuit and Quantum Computation
71
The explict form of USWAP is given by
USWAP = |00⟩⟨00| + |01⟩⟨10| + |10⟩⟨01| + |11⟩⟨11|
=
⎛
⎜
⎜
⎝
1 0 0 0
0 0 1 0
0 1 0 0
0 0 0 1
⎞
⎟
⎟
⎠.
(4.15)
Needless to say, it works as a linear operator on a superposition of states. The
SWAP gate is expressed as
Note that the SWAP gate is a special gate which maps an arbitrary tensor
product state to a tensor product state. In contrast, most two-qubit gates
map a tensor product state to an entangled state.
EXERCISE 4.7 Show that the above USWAP is written as
USWAP = (|0⟩⟨0| ⊗I + |1⟩⟨1| ⊗X)(I ⊗|0⟩⟨0| + X ⊗|1⟩⟨1|)
(|0⟩⟨0| ⊗I + |1⟩⟨1| ⊗X).
(4.16)
This shows that the SWAP gate is implemented with three CNOT gates as
given in Exercise 4.3 (3).
The controlled-SWAP gate
is also called the Fredkin gate. It ﬂips the second (middle) and the third
(bottom) qubits when and only when the ﬁrst (top) qubit is in the state |1⟩.
Its explicit form is
UFredkin = |0⟩⟨0| ⊗I4 + |1⟩⟨1| ⊗USWAP.
(4.17)
4.3
Correspondence with Classical Logic Gates
Before we proceed further, it is instructive to show that all the elementary
logic gates, NOT, AND, XOR, OR and NAND, in classical logic circuits can

72
QUANTUM COMPUTING
be implemented with quantum gates.
In this sense, quantum information
processing contains the classical one.
4.3.1
NOT Gate
Let us consider the NOT gate ﬁrst.
It is deﬁned by the following logic
function,
NOT(x) = ¬x =

0
x = 1
1
x = 0
(4.18)
where ¬x stands for the negation of x.
Under the correspondence 0 ↔
|0⟩, 1 ↔|1⟩, we have already seen in Eq. (4.2) that the gate X negates the
basis vectors as
X|x⟩= |¬x⟩= |NOT(x)⟩, (x = 0, 1).
(4.19)
Now let us measure the output state. We employ the following measurement
operator:
M1 = |1⟩⟨1|.
(4.20)
M1 has eigenvalues 0 and 1 with the eigenvectors |0⟩and |1⟩, respectively.
When the input is |0⟩, the output is |1⟩and the measurement gives the value
1 with the probability 1. If, on the other hand, the input is |1⟩, the output
is |0⟩and the measurement yields 1 with probability 0, or in other words, it
yields 0 with probability 1. It should be kept in mind that the operator X
acts on an arbitrary linear combination |ψ⟩= a|0⟩+ b|1⟩, which is classically
impossible. The output state is then X|ψ⟩= a|1⟩+ b|0⟩.
We show in the following that the CCNOT gate implements all classical
logic gates. The ﬁrst and the second input qubits are set to |1⟩to obtain the
NOT gate as
UCCNOT|1, 1, x⟩= |1, 1, ¬x⟩.
(4.21)
4.3.2
XOR Gate
Since a quantum gate has to be reversible, we cannot construct a unitary gate
corresponding to the classcial XOR gate whose function is x, y 	→x⊕y (x, y ∈
{0, 1}), where x⊕y is an addition mod 2; 0⊕0 = 0, 0⊕1 = 1⊕0 = 1, 1⊕1 = 0.
Clearly this operation has no inverse. This operation may be made reversible
if we keep the ﬁrst bit x during the gate operation, namely, if we deﬁne
f(x, y) = (x, x ⊕y),
x, y ∈{0, 1}.
(4.22)
We call this function f, also the XOR gate. The quantum gate that does this
operation is nothing but the CNOT gate deﬁned by Eq. (4.5),
UXOR = UCNOT = |0⟩⟨0| ⊗I + |1⟩⟨1| ⊗X.
(4.23)

Quantum Gates, Quantum Circuit and Quantum Computation
73
Note that the XOR gate may be also obtained from the CCNOT gate.
Suppose the ﬁrst qubit of the CCNOT gate is ﬁxed to |1⟩. Then it is easy to
verify that
UCCNOT|1, x, y⟩= |1, x, x ⊕y⟩.
(4.24)
Thus the CCNOT gate can be used to construct the XOR gate.
4.3.3
AND Gate
The logical AND gate is deﬁned by
AND(x, y) ≡x ∧y ≡

1
x = y = 1
0
otherwise
x, y ∈{0, 1}.
(4.25)
Clearly this operation is not reversible and we have to introduce the same sort
of prescription which we employed in the XOR gate.
Let us deﬁne the logic function
f(x, y, 0) ≡(x, y, x ∧y),
(4.26)
which we also call AND. Note that we have to keep both x and y for f to be
reversible since x = x ∧y = 0 implies both x = y = 0 and x = 0, y = 1. The
unitary matrix that computes f is
UAND = (|00⟩⟨00| + |01⟩⟨01| + |10⟩⟨10|) ⊗I
+|11⟩⟨11| ⊗X.
(4.27)
It is readily veriﬁed that
UAND|x, y, 0⟩= |x, y, x ∧y⟩,
x, y ∈{0, 1}.
(4.28)
Observe that the third qubit in the RHS is 1 if and only if x = y = 1 and 0
otherwise. Thus the CCNOT gate may be employed to implement the AND
gate. It follows from Eq. (4.28) that the AND gate is denoted graphically as
4.3.4
OR Gate
The OR gate represents the logical function
OR(x, y) = x ∨y =

0
x = y = 0
1
otherwise
x, y ∈{0, 1}.
(4.29)

74
QUANTUM COMPUTING
This function OR is not reversible either and special care must be taken.
Let us deﬁne
f(x, y, 0) ≡(¬x, ¬y, x ∨y),
x, y ∈{0, 1},
(4.30)
which we also call OR. Although the ﬁrst and the second bits are negated, it
is not essential in the construction of the OR gate. These negations appear
due to our construction of the OR gate based on the de Morgan theorem
x ∨y = ¬(¬x ∧¬y).
(4.31)
They may be removed by adding extra NOT gates if necessary.
Let |x, y, 0⟩be the input state. The unitary matrix that represents f is
UOR = |00⟩⟨11| ⊗X + |01⟩⟨10| ⊗X + |10⟩⟨01| ⊗X + |11⟩⟨00| ⊗I.
(4.32)
EXERCISE 4.8 Verify that the above matrix UOR indeed satisﬁes
UOR|x, y, 0⟩= |¬x, ¬y, x ∨y⟩,
x, y ∈{0, 1}.
(4.33)
Now it is obvious why negations in the ﬁrst and the second qubits appear in
the OR gate. Since we have already constructed the NOT gate and AND gate,
we take advantage of this in the construction of the OR gate. The equality
(4.31) leads us to the following diagram:
Accordingly, the ﬁrst and the second qubits are negated. The unitary matrix
obtained from this diagram is
UOR = (I ⊗I ⊗X)
·(|00⟩⟨00| ⊗I + |01⟩⟨01| ⊗I + |10⟩⟨10| ⊗I + |11⟩⟨11| ⊗X)
·(X ⊗X ⊗I).
(4.34)
The matrix products are readily evaluated to yield
UOR = (|00⟩⟨00| ⊗X + |01⟩⟨01| ⊗X + |10⟩⟨10| ⊗X + |11⟩⟨11| ⊗I)
·(X ⊗X ⊗I)
= |00⟩⟨11| ⊗X + |01⟩⟨10| ⊗X + |10⟩⟨01| ⊗X + |11⟩⟨00| ⊗I,
which veriﬁes Eq. (4.32).

Quantum Gates, Quantum Circuit and Quantum Computation
75
Observe that the OR gate is implemented with the X and the CCNOT gates
and, moreover, the X gate is obtained from the CCNOT gate by putting the
ﬁrst and the second bits to |1⟩.
If we want to have a gate VOR|x, y, 0⟩= |x, y, x ∨y⟩, we may multiply
X ⊗X ⊗I to UOR from the left so that VOR = (X ⊗X ⊗I)UOR.
EXERCISE 4.9 Show that the NAND gate can be obtained from the CC-
NOT gate. Here NAND is deﬁned by the function
NAND(x, y) = ¬(x ∧y) =
 0
x = y = 1
1
otherwise
x, y ∈{0, 1}.
(4.35)
In summary, we have shown that all the classical logic gates, NOT, AND,
OR, XOR and NAND gates, may be obtained from the CCNOT gate. Thus
all the classical computation may be carried out with a quantum computor.
Note, however, that these gates belong to a tiny subset of the set of unitary
matrices.
In the next section, we show that copying unknown information is impos-
sible in quantum computing. However, it is also shown that this does not
restrict the superiority of quantum computing over the classical counterpart.
4.4
No-Cloning Theorem
We copy classical data almost every day. In fact, this is amongst the most
common functions with digital media. (Of course we should not copy media
that are copyright protected.) This cannot be done in quantum information
theory! We cannot clone an unknown quantum state with unitary operations.
THEOREM 4.1 (Wootters and Zurek [4], Dieks [5]) An unknown quantum
system cannot be cloned by unitary transformations.
Proof. Suppose there would exist a unitary transformation U that makes a
clone of a quantum system. Namely, suppose U acts, for any state |ϕ⟩, as
U : |ϕ0⟩→|ϕϕ⟩.
(4.36)
Let |ϕ⟩and |φ⟩be two states that are linearly independent. Then we should
have U|ϕ0⟩= |ϕϕ⟩and U|φ0⟩= |φφ⟩by deﬁnition. Then the action of U on
|ψ⟩=
1
√
2
(|ϕ⟩+ |φ⟩) yields
U|ψ0⟩=
1
√
2(U|ϕ0⟩+ U|φ0⟩) =
1
√
2(|ϕϕ⟩+ |φφ⟩).

76
QUANTUM COMPUTING
If U were a cloning transformation, we must also have
U|ψ0⟩= |ψψ⟩= 1
2(|ϕϕ⟩+ |ϕφ⟩+ |φϕ⟩+ |φφ⟩),
which contradicts the previous result. Therefore, there does not exist a unitary
cloning transformation.
Clearly, there is no way to clone a state by measurements. A measurement
is probabilistic and non-unitary, and it gets rid of the component of the state
which is in the orthogonal complement of the observed subspace.
EXERCISE 4.10 Suppose U is a cloning unitary transformation, such that
|Ψ⟩≡U|ψ⟩|0⟩= |ψ⟩|ψ⟩
|Φ⟩≡U|φ⟩|0⟩= |φ⟩|φ⟩
for arbitrary |ψ⟩and |φ⟩.
(1) Write down ⟨Ψ|Φ⟩in all possible ways.
(2) Show, by inspecting the result of (1), that such U does not exist.
It was mentioned in the end of the previous section that a quantum com-
puter can simulate arbitrary classical logic circuits. Then how about copying
data? It should be kept in mind that the no-cloning theorem states that we
cannot copy an arbitrary state |ψ⟩= a|0⟩+ b|1⟩. The loophole is that the
theorem does not apply if the states to be cloned are limited to |0⟩and |1⟩.
For these cases, the copying operator U should work as
U : |00⟩	→|00⟩,
: |10⟩	→|11⟩.
We can assign arbitrary action of U on a state whose second input is |1⟩since
this case does not happen. What we have to keep in our mind is only that U
be unitary. An example of such U is
U = (|00⟩⟨00| + |11⟩⟨10|) + (|01⟩⟨01| + |10⟩⟨11|),
(4.37)
where the ﬁrst set of operators renders U the cloning operator and the second
set is added just to make U unitary. We immediately notice that U is nothing
but the CNOT gate introduced in §4.2.
Therefore, if the data under consideration are limited within |0⟩and |1⟩,
we can copy the qubit states even in a quantum computer. This fact is used
to construct quantum error correcting codes.
4.5
Dense Coding and Quantum Teleportation
Now we are ready to introduce two simple applications of qubits and quantum
gates: dense coding and quantum teleportation.
The Bell state has

Quantum Gates, Quantum Circuit and Quantum Computation
77
been delivered beforehand, and one of the qubits carries two classical bits of
information in the dense coding system. In the quantum teleportation, on
the other hand, two classical bits are used to transmit a single qubit. At ﬁrst
glance, the quantum teleportation may seem to be in contradiction with the
no-cloning theorem. However, this is not the case since the original state is
destroyed.
Entanglement is the keyword in both applications. The setting is common
for both cases. Suppose Alice wants to send Bob information. Each of them
has been sent each of the qubits of the Bell state
|Φ+⟩=
1
√
2(|00⟩+ |11⟩)
(4.38)
in advance. Suppose Alice has the ﬁrst qubit and Bob has the second.
4.5.1
Dense Coding
FIGURE 4.1
Communication from Alice to Bob using dense coding. Each qubit of the Bell
state |Φ+⟩has been distributed to each of them beforehand. Then two bits
of classical information can be transmitted by sending a single qubit through
the quantum channel.
Alice: Alice wants to send Bob a binary number x ∈{00, 01, 10, 11}. She
picks up one of {I, X, Y, Z} according to x she has chosen and applies the
transformation on her qubit (the ﬁrst qubit of the Bell state). Applying the
transformation to only her qubit means she applies an identity transformation

78
QUANTUM COMPUTING
to the second qubit which Bob keeps with him. This results in
x
transformation U
state after transformation
0 = 00
I ⊗I
|ψ0⟩=
1
√
2
(|00⟩+ |11⟩)
1 = 01
X ⊗I
|ψ1⟩=
1
√
2(|10⟩+ |01⟩)
2 = 10
Y ⊗I
|ψ2⟩=
1
√
2
(|10⟩−|01⟩)
3 = 11
Z ⊗I
|ψ3⟩=
1
√
2(|00⟩−|11⟩).
(4.39)
Alice sends Bob her qubit after the transformation given above is applied.
Note that the set of four states in the rightmost column is nothing but the
four Bell basis vectors.
Bob: Bob applies CNOT to the entangled pair in which the ﬁrst qubit, the
received qubit, is the control bit, while the second one, which Bob keeps, is
the target bit. This results in a tensor-product state:
Received state
Output of CNOT
1st qubit
2nd qubit
|ψ0⟩
1
√
2
(|00⟩+ |10⟩)
1
√
2
(|0⟩+ |1⟩)
|0⟩
|ψ1⟩
1
√
2(|11⟩+ |01⟩)
1
√
2(|1⟩+ |0⟩)
|1⟩
|ψ2⟩
1
√
2
(|11⟩−|01⟩)
1
√
2
(|1⟩−|0⟩)
|1⟩
|ψ3⟩
1
√
2(|00⟩−|10⟩)
1
√
2(|0⟩−|1⟩)
|0⟩
(4.40)
Note that Bob can measure the ﬁrst and second qubits independently since
the output is a tensor-product state. The number x is either 00 or 11 if the
measurement outcome of the second qubit is |0⟩, while it is either 01 or 10 if
the meansurement outcome is |1⟩.
Finally, a Hadamard transformation H is applied on the ﬁrst qubit. Bob
obtains
Received state
1st qubit
UH|1st qubit⟩
|ψ0⟩
1
√
2(|0⟩+ |1⟩)
|0⟩
|ψ1⟩
1
√
2(|1⟩+ |0⟩)
|0⟩
|ψ2⟩
1
√
2(|1⟩−|0⟩)
−|1⟩
|ψ3⟩
1
√
2(|0⟩−|1⟩)
|1⟩
(4.41)

Quantum Gates, Quantum Circuit and Quantum Computation
79
FIGURE 4.2
Quantum circuit implementation of the dense coding system. The leftmost
Hadamard gate and the next CNOT gate generate the Bell state. Then a
unitary gate U, depending on the bits Alice wants to send, is applied to the
ﬁrst qubit. Bob applies the rightmost CNOT gate and the Hadamard gate to
decode Alice's message.
The number x is either 00 or 01 if the measurement of the ﬁrst qubit results
in |0⟩, while it is either 10 or 11 if it is |1⟩. Therefore, Bob can tell what x is
in every case.
Quantum circuit implementation for the dense coding is given in Fig. 4.2
4.5.2
Quantum Teleportation
The purpose of quantum teleportation is to transmit an unknown quan-
tum state of a qubit using two classical bits such that the recipient reproduces
exactly the same state as the original qubit state. Note that the qubit itself is
not transported but the information required to reproduce the quantum state
is transmitted. The original state is destroyed such that quantum teleporta-
tion should not be in contradiction with the no-cloning theorem. Quantum
teleportation has already been realized under laboratory conditions using pho-
tons [6, 7, 8, 9], coherent light ﬁeld [10], NMR [11], and trapped ions [12, 13].
The teleportation scheme introduced in this section is due to [11]. Figure
4.3 shows the schematic diagram of quantum teleportation, which will be
described in detail below.
Alice: Alice has a qubit, whose state she does not know. She wishes to
send Bob the quantum state of this qubit through a classical communication
channel. Let
|φ⟩= a|0⟩+ b|1⟩
(4.42)
be the state of the qubit. Both of them have been given one of the qubits of
the entangled pair
|Φ+⟩=
1
√
2(|00⟩+ |11⟩)
as in the case of the dense coding.

80
QUANTUM COMPUTING
FIGURE 4.3
In quantum teleportation, Alice sends Bob two classical bits so that Bob
reproduces a qubit state Alice used to have.
Alice applies the decoding step in the dense coding to the qubit |φ⟩=
a|0⟩+b|1⟩to be sent and her qubit of the entangled pair. They start with the
state
|φ⟩⊗|Φ+⟩=
1
√
2

a|0⟩⊗(|00⟩+ |11⟩) + b|1⟩⊗(|00⟩+ |11⟩)

=
1
√
2 (a|000⟩+ a|011⟩+ b|100⟩+ b|111⟩) ,
(4.43)
where Alice has the ﬁrst two qubits while Bob has the third. Alice applies
UCNOT ⊗I followed by UH ⊗I ⊗I to this state, which results in
(UH ⊗I ⊗I)(UCNOT ⊗I)(|φ⟩⊗|Φ+⟩)
= (UH ⊗I ⊗I)(UCNOT ⊗I) 1
√
2 (a|000⟩+ a|011⟩+ b|100⟩+ b|111⟩)
= 1
2 [a(|000⟩+ |011⟩+ |100⟩+ |111⟩) + b(|010⟩+ |001⟩−|110⟩−|101⟩)]
= 1
2[|00⟩(a|0⟩+ b|1⟩) + |01⟩(a|1⟩+ b|0⟩)
+|10⟩(a|0⟩−b|1⟩) + |11⟩(a|1⟩−b|0⟩)].
(4.44)
If Alice measures the two qubits in her hand, she will obtain one of the states
|00⟩, |01⟩, |10⟩or |11⟩with equal probability 1/4. Bob's qubit (a qubit from the
Bell state initially) collapses to a|0⟩+b|1⟩, a|1⟩+b|0⟩, a|0⟩−b|1⟩or a|1⟩−b|0⟩,
respectively, depending on the result of Alice's measurement. Alice then sends
Bob her result of the measurement using two classical bits.
Notice that Alice has totally destroyed the initial qubit |φ⟩upon her mea-
surement. This makes quantum teleportation consistent with the no-cloning
theorem.
Bob: After receiving two classical bits, Bob knows the state of the qubit in

Quantum Gates, Quantum Circuit and Quantum Computation
81
his hand;
Received bits
Bob's state
Decoding
00
a|0⟩+ b|1⟩
I
01
a|1⟩+ b|0⟩
X
10
a|0⟩−b|1⟩
Z
11
a|1⟩−b|0⟩
Y
(4.45)
Bob reconstructs the intial state |φ⟩by applying the decoding process shown
above. Suppose Alice sends Bob the classical bits 10, for example. Then Bob
applies Z to his state to reconstruct |φ⟩as follows:
Z : (a|0⟩−b|1⟩) 	→(a|0⟩+ b|1⟩) = |φ⟩.
Figure 4.4 shows the actual quantum circuit for quantum teleportation.
FIGURE 4.4
Quantum circuit implementation of quantum teleportation. Alice operates
gates in the left side. The ﬁrst Hadamard gate and the next CNOT gates
generate the Bell state |Φ+⟩from |00⟩.
The bottom qubit is sent to Bob
through a quantum channel while the ﬁrst and the second qubits are measured
after applying the second set of the CNOT gate and the Hadamard gate on
them. The measurement outcome x is sent to Bob through a classical channel.
Bob operates a unitary operation Ux, which depends on the received message
x, on his qubit.
EXERCISE 4.11 Let |ψ⟩= a|00⟩+ b|11⟩be a two-qubit state. Apply a
Hadamard gate to the ﬁrst qubit and then measure the ﬁrst qubit. Find the
second qubit state after the measurement corresponding to the outcome of
the ﬁrst qubit measurement.

82
QUANTUM COMPUTING
4.6
Universal Quantum Gates
It can be shown that any classical logic gate can be constructed by using a
small set of gates, AND, NOT and XOR, for example. Such a set of gates
is called the universal set of classical gates.
Since the CCNOT gate can
simulate these classical gates, quantum circuits simulate any classical circuits.
It should be noted that the set of quantum gates is much larger than those
classical gates which can be simulated by quantum gates. Thus we want to
ﬁnd a universal set of quantum gates from which any quantum circuits, i.e.,
any unitary matrix, can be constructed.
In the following, it will be shown that
(1) the set of single qubit gates and
(2) CNOT gate
form a universal set of quantum circuits (universality theorem).
We will prove the following Lemma before stating the main theorem. Let
us start with a deﬁnition. A two-level unitary matrix is a unitary matrix
which acts non-trivially only on two vector components. Suppose V is a two-
level unitary matrix. Then V has the same matrix elements as those of the
unit matrix except for certain four elements Vaa, Vab, Vba and Vbb. An example
of a two-level unitary matrix is
V =
⎛
⎜
⎜
⎝
α∗0 0 β∗
0 1 0 0
0 0 1 0
−β 0 0 α
⎞
⎟
⎟
⎠,
(|α|2 + |β|2 = 1),
where a = 1 and b = 4.
LEMMA 4.1 Let U be a unitary matrix acting on Cd.
Then there are
N ≤d(d −1)/2 two-level unitary matrices U1, U2, . . . , UN such that
U = U1U2 . . . UN.
(4.46)
Proof. The proof requires several steps. It is instructive to start with the case
d = 3. Let
U =
⎛
⎝
a d g
b e h
c f j
⎞
⎠
be a unitary matrix. We want to ﬁnd two-level unitary matrices U1, U2, U3
such that
U3U2U1U = I.
Then it follows that
U = U †
1U †
2U †
3.

Quantum Gates, Quantum Circuit and Quantum Computation
83
(Never mind the daggers!
If Uk is two-level unitary, U †
k is also two-level
unitary.) We prove the above decomposition by constructing Uk explicitly.
(i) Let
U1 =
⎛
⎝
a∗
u
b∗
u 0
−b
u
a
u 0
0
0 1
⎞
⎠,
where u =

|a|2 + |b|2. Verify that U1 is unitary. Then we obtain
U1U =
⎛
⎝
a′ d′ g′
0 e′ h′
c′ f ′ j′
⎞
⎠,
where a′, . . . , j′ are some complex numbers, whose details are not necessary.
Observe that, with this choice of U1, the ﬁrst component of the second row
vanishes.
(ii) Let
U2 =
⎛
⎝
a′∗
u′
0 c′∗
u′
0
1 0
−c′
u′ 0
a′
u′
⎞
⎠=
⎛
⎝
a′∗0 c′∗
0
1 0
−c′ 0 a′
⎞
⎠,
where u′ =

|a′|2 + |c′|2 = 1. Then
U2U1U =
⎛
⎝
1 d′′ g′′
0 e′′ h′′
0 f ′′ j′′
⎞
⎠=
⎛
⎝
1 0
0
0 e′′ h′′
0 f ′′ j′′
⎞
⎠,
where the equality d′′ = g′′ = 0 follows from the fact that U2U1U is unitary,
and hence the ﬁrst row must be normalized.
(iii) Finally let
U3 = (U2U1U)† =
⎛
⎝
1
0
0
0 e′′∗f ′′∗
0 h′′∗j′′∗
⎞
⎠.
Then, by deﬁnition, U3U2U1U = I is obvious. This completes the proof for
d = 3.
Suppose U is a unitary matrix acting on Cd with a general dimension d.
Then by repeating the above arguments, we ﬁnd two-level unitary matrices
U1, U2, . . . , Ud−1 such that
Ud−1 . . . U2U1U =
⎛
⎜
⎜
⎜
⎜
⎝
1 0 0 . . . 0
0 ∗∗. . . ∗
0 ∗∗. . . ∗
. . . . . .
0 ∗∗. . . ∗
⎞
⎟
⎟
⎟
⎟
⎠
,

84
QUANTUM COMPUTING
namely the (1, 1) component is unity and other components of the ﬁrst row
and the ﬁrst column vanish. The number of matrices {Uk} to achieve this
form is the same as the number of zeros in the ﬁrst column, hence (d −1).
We then repeat the same procedure to the (d −1) × (d −1) block unitary
matrix using (d−2) two-level unitary matrices. After repeating this, we ﬁnally
decompose U into a product of two-level unitary matrices
U = V1V2 . . . VN,
where N ≤(d −1) + (d −2) + . . . + 1 = d(d −1)/2.
EXERCISE 4.12 Let U be a general 4 × 4 unitary matrix. Find two-level
unitary matrices U1, U2 and U3 such that
U3U2U1U =
⎛
⎜
⎜
⎝
1 0 0 0
0 ∗∗∗
0 ∗∗∗
0 ∗∗∗
⎞
⎟
⎟
⎠.
EXERCISE 4.13 Let
U = 1
2
⎛
⎜
⎜
⎝
1 1
1
1
1 i −1 −i
1 −1 1 −1
1 −i −1 i
⎞
⎟
⎟
⎠.
(4.47)
Decompose U into a product of two-level unitary matrices.
Let us consider a unitary matrix acting on an n-qubit system. Then this
unitary matrix is decomposed into a product of at most 2n(2n −1)/2 =
2n−1(2n −1) two-level unitary matrices. Now we are in a position to state
the main theorem.
THEOREM 4.2 (Barenco et al.)[14] The set of single qubit gates and
CNOT gate are universal. Namely, any unitary gate acting on an n-qubit
register can be implemented with single qubit gates and CNOT gates.
Proof. We closely follow [1] for the proof here.
Thanks to the previous
Lemma, it suﬃces to prove the theorem for a two-level unitary matrix. Let
U be a two-level unitary matrix acting nontrivially only on |s⟩and |t⟩ba-
sis vectors of an n-qubit system, where s = sn−12n−1 + . . . + s12 + s0 and
t = tn−12n−1 +. . .+t12+t0 are binary expressions for decimal numbers s and
t. This means that matrix elements Uss, Ust, Uts and Utt are diﬀerent from
those of the unit matrix, while all the others are the same, where |s⟩stands for
|sn−1⟩|sn−2⟩. . . |s0⟩, for example. We can construct ˜U, the non-trivial 2 × 2
unitary submatrix of U. ˜U may be thought of as a unitary matrix acting on
a single qubit, whose basis is {|s⟩, |t⟩}.

Quantum Gates, Quantum Circuit and Quantum Computation
85
STEP 1: U is reduced to ˜U ∈U(2).
The basis vectors |s⟩and |t⟩may be put together to form a basis for a
single qubit using the following trick.
This is done by introducing Gray
codes. For two binary numbers s = sn−1 . . . s1s0 and t = tn−1 . . . t1t0, a
Gray code connecting s and t is a sequence of binary numbers {g1, . . . , gm}
where the adjacent numbers, gk and gk+1, diﬀer in exactly one bit. Moreover,
the sequence satisﬁes the boundary conditions g1 = s and gm = t.
Suppose s = 100101 and t = 110110, for example. An example of a Gray
code connecting s and t is
s = g1 = 100101
g2 = 1ˆ10101
g3 = 1101ˆ11
g4 = 11011ˆ0 = t,
where the digit with ˆ has been renewed. It is clear from this construction
that if s and t diﬀer in p bits, the shortest Gray code is made of p+1 elements.
It should be also clear that if s and t are of n digits, then m ≤(n + 1) since
s and t diﬀer at most in n bits.
With these preparations, we consider the implementation of U. The strat-
egy is to ﬁnd gates providing the sequence of state changes
|s⟩= |g1⟩→|g2⟩→. . . →|gm−1⟩.
(4.48)
Then gm−1 and gm diﬀer only in one bit, which is identiﬁed with the single
qubit on which ˜U acts. In the example above, we have |g3⟩= |11011⟩⊗|1⟩
and |t⟩= |g4⟩= |11011⟩⊗|0⟩. Now the operator ˜U may be introduced so that
it acts on a two-dimensional subspace of the total Hilbert space, in which the
ﬁrst ﬁve qubits are in the state |11011⟩. Then we undo the sequence (4.48)
so that |gm−1⟩→|gm−2⟩→. . . →|g1⟩= |s⟩. Each of these steps can be
easily implemented using simple gates that have been introduced previously
(see below).
Let us consider the following example of a three-qubit system, whose basis
is {|000⟩, |001⟩, . . ., |111⟩}. Let
U =
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
a 0 0 0 0 0 0 c
0 1 0 0 0 0 0 0
0 0 1 0 0 0 0 0
0 0 0 1 0 0 0 0
0 0 0 0 1 0 0 0
0 0 0 0 0 1 0 0
0 0 0 0 0 0 1 0
b 0 0 0 0 0 0 d
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
,
(a, b, c, d ∈C)
(4.49)
be a two-level unitary matrix which we wish to implement. Note that U acts
non-trivially only in the subspace spanned by |000⟩and |111⟩. The unitarity

86
QUANTUM COMPUTING
FIGURE 4.5
Example of circuit implementing the gate U.
of U ensures that the matrix
˜U =
a c
b d

(4.50)
is also unitary. An example of a Gray code connecting 000 and 111 is
q1 q2 q3
g1 = 0 0 0
g2 = 1 0 0
g3 = 1 1 0
g4 = 1 1 1
(4.51)
Since g3 and g4 diﬀer only in the third qubit, which we call q3, we have to
bring g1 to g3 and then operate ˜U on the qubit q3 provided that the ﬁrst and
the second qubits are in the state |11⟩. (Namely we have a controlled- ˜U gate
with the target bit q3 and the control bits q1 and q2.) After this controlled
operation is done, we have to put |g3⟩= |110⟩back to the state |000⟩as
|110⟩→|100⟩→|000⟩.
This operation is graphically shown in Fig. 4.5. Here ◦denotes the negated
control node. This means that the unitary gate acts on the target bit only
when the control bit is in the state |0⟩. This is easily implemented by adding
two X gates as
It is easy to see that this gate indeed implements U. Suppose the input is
|101⟩, for example. Figure 4.6 shows that the gate has no eﬀect on this basis
vector since U should act as a unit matrix on this vector. The operation of U

Quantum Gates, Quantum Circuit and Quantum Computation
87
FIGURE 4.6
U-gate has no eﬀect on the vector |101⟩.
on the input α|000⟩+ β|111⟩is
U(α|000⟩+ β|111⟩) =
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
a 0 0 0 0 0 0 c
0 1 0 0 0 0 0 0
0 0 1 0 0 0 0 0
0 0 0 1 0 0 0 0
0 0 0 0 1 0 0 0
0 0 0 0 0 1 0 0
0 0 0 0 0 0 1 0
b 0 0 0 0 0 0 d
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
α
0
0
0
0
0
0
β
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
=
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
αa + βc
0
0
0
0
0
0
αb + βd
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
.
(4.52)
If we use the circuit shown in Fig. 4.5, we produce the same result as shown
in Fig. 4.7
FIGURE 4.7
U-gate acting on α|000⟩+ β|111⟩yields the desired output (aα + cβ)|000⟩+
(bα + dβ)|111⟩.
This construction is easily generalized to any two-level unitary matrix U ∈
U(2n).
It will be shown below that all the gates in the above circuit can

88
QUANTUM COMPUTING
be implemented with single-qubit gates and CNOT gates, which proves the
universality of these gates.
EXERCISE 4.14 (1) Find the shortest Gray code which connects 000 with
110.
(2) Use this result to ﬁnd a quantum circuit, such as Fig. 4.5, implementing
a two-level unitary gate
U =
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
a 0 0 0 0 0 c 0
0 1 0 0 0 0 0 0
0 0 1 0 0 0 0 0
0 0 0 1 0 0 0 0
0 0 0 0 1 0 0 0
0 0 0 0 0 1 0 0
b 0 0 0 0 0 d 0
0 0 0 0 0 0 0 1
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
,
˜U ≡

a c
b d

∈U(2).
You may use various controlled-NOT gates and controlled- ˜U gates.
STEP 2: Two-level unitary gates are decomposed into single-qubit gates and
CNOT gates.
A controlled-U gate can be constructed from at most four single-qubit gates
and two CNOT gates for any single-qubit unitary U ∈U(2). Let us prove
several Lemmas before we prove this statement.
LEMMA 4.2 Let U ∈SU(2). Then there exist α, β, γ ∈R such that U =
Rz(α)Ry(β)Rz(γ), where
Rz(α) = exp(iασz/2) =
 eiα/2
0
0
e−iα/2

,
Ry(β) = exp(iβσy/2) =

cos(β/2) sin(β/2)
−sin(β/2) cos(β/2)

.
Proof. After some calculation, we obtain
Rz(α)Ry(β)Rz(γ) =
 ei(α+γ)/2 cos(β/2)
ei(α−γ)/2 sin(β/2)
−ei(−α+γ)/2 sin(β/2) e−i(α+γ)/2 cos(β/2)

.
(4.53)
Any U ∈SU(2) may be written in the form
U =
 a
b
−b∗a∗

=

cos θeiλ
sin θeiμ
−sin θe−iμ cos θe−iλ

,
(4.54)
where we used the fact that det U = |a|2 + |b|2 = 1. Now we obtain U =
Rz(α)Ry(β)Rz(γ) by making identiﬁcations
θ = β
2 , λ = α + γ
2
, μ = α −γ
2
.
(4.55)

Quantum Gates, Quantum Circuit and Quantum Computation
89
LEMMA 4.3 Let U ∈SU(2). Then there exist A, B, C ∈SU(2) such that
U = AXBXC and ABC = I, where X = σx.
Proof. Lemma 4.2 states that U = Rz(α)Ry(β)Rz(γ) for some α, β, γ ∈R.
Let
A = Rz(α)Ry
β
2

, B = Ry

−β
2

Rz

−α + γ
2

, C = Rz

−α −γ
2

.
Then
AXBXC = Rz(α)Ry
β
2

XRy

−β
2

Rz

−α + γ
2

XRz

−α −γ
2

= Rz(α)Ry
β
2
 
XRy

−β
2

X
 
XRz

−α + γ
2

X

Rz

−α −γ
2

= Rz(α)Ry
β
2

Ry
β
2

Rz
α + γ
2

Rz

−α −γ
2

= Rz(α)Ry(β)Rz(γ) = U,
where use has been made of the identities X2 = I and Xσy,zX = −σy,z.
It is also veriﬁed that
ABC = Rz(α)Ry
β
2

Ry

−β
2

Rz

−α + γ
2

Rz

−α −γ
2

= Rz(α)Ry(0)Rz(−α) = I.
This proves the Lemma.
FIGURE 4.8
Controlled-U gate is made of at most three single-qubit gates and two CNOT
gates for any U ∈SU(2).
LEMMA 4.4 Let U ∈SU(2) be factorized as U = AXBXC as in the
previous Lemma. Then the controlled-U gate can be implemented with at
most three single-qubit gates and two CNOT gates (see Fig. 4.8).

90
QUANTUM COMPUTING
Proof. The proof is almost obvious. When the control bit is 0, the target bit
|ψ⟩is operated by C, B and A in this order so that
|ψ⟩	→ABC|ψ⟩= |ψ⟩,
while when the control bit is 1, we have
|ψ⟩	→AXBXC|ψ⟩= U|ψ⟩.
So far, we have worked with U ∈SU(2). To implement a general U-gate
with U ∈U(2), we have to deal with the phase. Let us ﬁrst recall that any
U ∈U(2) is decomposed as U = eiαV, V ∈SU(2), α ∈R.
LEMMA 4.5 Let
Φ(φ) = eiφI =

eiφ 0
0 eiφ

and
D = Rz(−φ)Φ
φ
2

=
e−iφ/2
0
0
eiφ/2
  eiφ/2
0
0
eiφ/2

=
 1 0
0 eiφ

.
Then the controlled-Φ(φ) gate is expressed as a tensor product of single qubit
gates as
UCΦ(φ) = D ⊗I.
(4.56)
.
Proof. The LHS is
UCΦ(φ) = |0⟩⟨0| ⊗I + |1⟩⟨1| ⊗Φ(φ) = |0⟩⟨0| ⊗I + |1⟩⟨1| ⊗eiφI
= |0⟩⟨0| ⊗I + eiφ|1⟩⟨1| ⊗I,
while the RHS is
D ⊗I =
 1 0
0 eiφ

⊗I
=

|0⟩⟨0| + eiφ|1⟩⟨1|

⊗I = UCΦ(φ),
which proves the lemma.
Figure 4.9 shows the statement of the above lemma.
EXERCISE 4.15 Let us consider the controlled-V1 gate UCV1 and the
controlled-V2 gate UCV2. Show that the controlled-V1 gate followed by the
controlled-V2 gate is the controlled-V2V1 gate UC(V2V1) as shown in Fig. 4.10.

Quantum Gates, Quantum Circuit and Quantum Computation
91
FIGURE 4.9
Equality UCΦ(φ) = D ⊗I.
FIGURE 4.10
Equality UCV2UCV1 = UC(V2V1).
Now we are ready to prove the main proposition.
PROPOSITION 4.1 Let U ∈U(2). Then the controlled-U gate UCU can
be constructed by at most four single-qubit gates and two CNOT gates.
Proof. Let U
= Φ(φ)AXBXC.
According to the exercise above, the
controlled-U gate is written as a product of the controlled-Φ(φ) gate and the
controlled-AXBXC gate. Moreover, Lemma 4.5 states that the controlled-
Φ(φ) gate may be replaced by a single-qubit phase gate acting on the ﬁrst
qubit. The rest of the gate, the controlled-AXBXC gate is implemented with
three SU(2) gates and two CNOT gates as proved in Lemma 4.3. Therefore
we have the following decomposition:
UCU = (D ⊗A)UCNOT(I ⊗B)UCNOT(I ⊗C),
(4.57)
where
D = Rz(−φ)Φ(φ/2)
and use has been made of the identity (D ⊗I)(I ⊗A) = D ⊗A.
Figure 4.11 shows the statement of the proposition.
STEP 3: CCNOT gate and its variants are implemented with CNOT gates
and their variants.
Now our ﬁnal task is to prove that controlled-U gates with n −1 control
bits are also constructed using single-qubit gates and CNOT gates. Let us
start with the simplest case, in which n = 3.

92
QUANTUM COMPUTING
FIGURE 4.11
Controlled-U gate is implemented with at most four single-qubit gates and
two CNOT gates.
FIGURE 4.12
Controlled-controlled-U gate is equivalent to the gate made of controlled-V
gates with U = V 2 and CNOT gates.
LEMMA 4.6 The two quantum circuits in Fig. 4.12 are equivalent, where
U = V 2.
Proof. If both the ﬁrst and the second qubits are 0 in the RHS, all the gates
are ineﬀective and the third qubit is unchanged; the gate in this subspace
acts as |00⟩⟨00| ⊗I.
In case the ﬁrst qubit is 0 and the second is 1, the
third qubit is mapped as |ψ⟩	→V †V |ψ⟩= |ψ⟩; the gate is then |01⟩⟨01| ⊗I.
When the ﬁrst qubit is 1 and the second is 0, the third qubit is mapped as
|ψ⟩	→V V †|ψ⟩= |ψ⟩; hence the gate in this subspace is |10⟩⟨10| ⊗I. Finally
let both the ﬁrst and the second qubits be 1. Then the action of the gate on
the third qubit is |ψ⟩	→V V |ψ⟩= U|ψ⟩; namely the gate in this subspace is
|11⟩⟨11| ⊗U. Thus it has been proved that the RHS of Fig. 4.12 is
(|00⟩⟨00| + |01⟩⟨01| + |10⟩⟨10|) ⊗I + |11⟩⟨11| ⊗U,
(4.58)
namely the controlled-controlled-U gate.
This decomposition is explained intuitively as follows. The ﬁrst V operates
on the third qubit |ψ⟩if and only if the second qubit is 1. V † is in action
if and only if x1 ⊕x2 = 1, where xk is the input bit of the kth qubit. The
second V operation is applied if and only if the ﬁrst qubit is 1. Thus the
action of this gate on the third qubit is V 2 = U only when x1 ∧x2 = 1 and

Quantum Gates, Quantum Circuit and Quantum Computation
93
FIGURE 4.13
Decomposition of the C3U gate.
I otherwise. This intuitive picture is of help when we implement the U gate
with more control qubits.
EXERCISE 4.16 Prove Lemma 4.6 by writing down the action of each gate
in the RHS of Fig. 4.12 explicitly using bras, kets and I, U, V, V †. (For exam-
ple, UCNOT = |0⟩⟨0| ⊗I + |1⟩⟨1| ⊗X for a two-qubit system.)
A simple generalization of the above construction is applied to a controlled-
U gate with three control bits as the following exercise shows.
EXERCISE 4.17 Show that the circuit in Fig. 4.13 is a controlled-U gate
with three control bits, where U = V 2.
Now it should be clear how these examples are generalized to gates with
more control bits.
PROPOSITION 4.2 The quantum circuit in Fig. 4.14 with U = V 2 is a
decomposition of the controlled-U gate with n −1 control bits.
The proof of the above proposition is very similar to that of Lemma 4.6
and Exercise 4.17 and is left as an exercise to the readers.
Theorem 4.2 has been now proved.
Other types of gates are also implemented with single-qubit gates and the
CNOT gates. See Barenco et al. [14] for further details. A few remarks are in
order. The above controlled-U gate with (n −1) control bits requires Θ(n2)
elementary gates.∗† Let us write the number of the elementary gates required
∗We call single-qubit gates and the CNOT gates elementary gates from now on.
†We will be less strict in the deﬁnition of "the order of." In the theory of computational
complexity, people use three types of "order of magnitude." One writes "f(n) is O(g(n))"
if there exist n0 ∈N and c ∈R such that f(n) ≤cg(n) for n ≥n0. In other words, O sets
the asymptotic upper bound of f(n). A function f(n) is said to be Ω(g(n)) if there exist

94
QUANTUM COMPUTING
FIGURE 4.14
Decomposition of the C(n−1)U gate. The number on the top denotes the layer
refered to in the text.
to construct the gate in Fig. 4.14 by C(n). Construction of layers I and III
requires elementary gates whose number is independent of n. It can be shown
that the number of the elementary gates required to construct the controlled
NOT gate with (n −2) control bits is Θ(n) [14]. Therefore layers II and IV
require Θ(n) elementary gates. Finally the layer V, a controlled-V gate with
(n −2) control bits, requires C(n −1) basic gates by deﬁnition. Thus we
obtain a recursion relation
C(n) −C(n −1) = Θ(n).
(4.59)
The solution to this recursion relation is
C(n) = Θ(n2).
(4.60)
Therefore, implementation of a controlled-U gate with U ∈U(2) and (n −1)
control bits requires Θ(n2) elementary gates.
n0 ∈N and c ∈R such that f(n) ≥cg(n) for n ≥n0. In other words, Ω sets the asymptotic
lower bound of f(n). Finally f(n) is said to be Θ(f(n)) if f(n) behaves asymptotically as
g(n), namely if f(n) is both O(g(n)) and Ω(g(n)).

Quantum Gates, Quantum Circuit and Quantum Computation
95
4.7
Quantum Parallelism and Entanglement
Given an input x, a typical quantum computer computes f(x) in such a way
as
Uf : |x⟩|0⟩	→|x⟩|f(x)⟩,
(4.61)
where Uf is a unitary matrix that implements the function f.
Suppose Uf acts on the input which is a superposition of many states. Since
Uf is a linear operator, it acts simultaneously on all the vectors that constitute
the superposition. Thus the output is also a superposition of all the results;
Uf :

x
|x⟩|0⟩	→

x
|x⟩|f(x)⟩.
(4.62)
Namely, when the input is a superposition of n states, Uf computes n values
f(xk) (1 ≤k ≤n) simultaneously. This feature, called the quantum paral-
lelism, gives a quantum computer an enormous power. A quantum computer
is advantageous compared to a classical counterpart in that it makes use of
this quantum parallelism and also entanglement.
A unitary transformation acts on a superposition of all possible states in
most quantum algorithms.
This superposition is prepared by the action
of the Walsh-Hadamard transformation on an n-qubit register in the state
|00 . . . 0⟩= |0⟩⊗|0⟩⊗. . . ⊗|0⟩resulting in
1
√
2n (|00 . . . 0⟩+ |00 . . .1⟩+ . . . |11 . . . 1⟩) =
1
√
2n
2n−1

x=0
|x⟩.
(4.63)
This state is a superposition of vectors encoding all the integers between 0
and 2n −1. Then the linearity of Uf leads to
Uf

1
√
2n
2n−1

x=0
|x⟩|0⟩

=
1
√
2n
2n−1

x=0
Uf|x⟩|0⟩=
1
√
2n
2n−1

x=0
|x⟩|f(x)⟩.
(4.64)
Note that the superposition is made of 2n = en ln 2 states, which makes quan-
tum computation exponentially faster than the classical counterpart in a cer-
tain kind of computation.
What about the limitation of a quantum computer? Let us consider the
CCNOT gate, for example. This gate ﬂips the third qubit if and only if the
ﬁrst and the second qubits are both in the state |1⟩, while it leaves the third
qubit unchanged otherwise. Let us ﬁx the third input qubit to |0⟩. It was
shown in §4.3.3 that the third output is |x ∧y⟩, where |x⟩and |y⟩are the ﬁrst
and the second input qubit states, respectively. Suppose the input state is a
superposition of all possible states while the third qubit is ﬁxed to |0⟩. This

96
QUANTUM COMPUTING
can be achieved by the Walsh-Hadamard transformation as
UH|0⟩⊗UH|0⟩⊗|0⟩=
1
√
2(|0⟩+ |1⟩) ⊗1
√
2(|0⟩+ |1⟩) ⊗|0⟩
= 1
2(|000⟩+ |010⟩+ |100⟩+ |110⟩).
(4.65)
By operating CCNOT on this state, we obtain
UCCNOT(UH|0⟩⊗UH|0⟩⊗|0⟩) = 1
2(|000⟩+ |010⟩+ |100⟩+ |111⟩).
(4.66)
This output may be thought of as the truth table of AND: |x, y, x ∧y⟩. It
is extremely important to note that the output is an entangled state and the
measurement projects the state to one line of the truth table, i.e., a single
term in the RHS of Eq. (4.66). The order of the measurements of the three
qubits does not matter at all. The measurement of the third qubit projects
the state to the superposition of the states with the given value of the third
qubit. Repeating the measurements on the rest of the qubits leads to the
collapse of the output state to one of |x, y, x ∧y⟩.
There is no advantage of quantum computation over classical at this stage.
This is because only one result may be obtained by a single set of measure-
ments. What is worse, we cannot choose a speciﬁc vector |x, y, x ∧y⟩at our
will! Thus any quantum algorithm should be programmed so that the partic-
ular vector we want to observe should have larger probability to be measured
compared to other vectors. This step has no classical analogy and is very
special in quantum computation. The programming strategies to deal with
this feature are [2]
1. to amplify the amplitude, and hence the probability, of the vector that
we want to observe. This strategy is employed in the Grover's database
search algorithm.
2. to ﬁnd a common property of all the f(x). This idea was employed
in the quantum Fourier transform to ﬁnd the order‡ of f in the Shor's
factoring algorithm.
Now we consider the power of entanglement. Suppose we have an n-qubit
register, whose Hilbert space is 2n-dimensional. Since each qubit has two basis
vectors |0⟩and |1⟩, there are 2n basis vectors (n |0⟩'s and n |1⟩'s) involved to
span this 2n-dimensional Hilbert space. Imagine that we have a single quan-
tum system, instead, which has the same Hilbert space. One might think
that the system may do the same quantum computation as the n-qubit reg-
ister does. One possible problem is that one cannot measure the "kth digit"
‡Let m, N ∈N (m < N) be numbers coprime to each other. Then there exists P ∈N such
that mP ≡1
(mod N). The smallest such number P is called the period or the order.
It is easily seen that mx+P ≡mx
(mod N), ∀x ∈N.

Quantum Gates, Quantum Circuit and Quantum Computation
97
leaving other digits unaﬀected. Even worse, consider how many diﬀerent basis
vectors are required for this system. This single system must have an enor-
mous number, 2n, of basis vectors! Let us consider 20 spin-1/2 particles in
a magnetic ﬁeld. We can employ the spin-up and spin-down energy eigen-
states of each particle as the qubit basis vectors. Then there are merely 40
energy eigenvectors involved. Suppose we use energy eigenstates of a certain
molecule to replace this register. Then we have to use 220 ∼106 eigenstates.
Separation and control of so many eigenstates are certainly beyond current
technology. These simple consideration shows that multipartite implemen-
tation of a quantum algorithm requires an exponentially smaller number of
basis vectors than monopartite implementation since the former makes use of
entanglement as a computational resource.
References
[1] M. A. Neilsen and I. L. Chuang, Quantum Computation and Quantum
Information, Cambridge University Press (2000).
[2] E. Riefell and W. Polak, ACM Computing Surveys (CSUR) 32, 300
(2000).
[3] Y. Uesaka, Mathematical Principle of Quantum Computation, Corona
Publishing, Tokyo, in Japanese (2000).
[4] W. K. Wootters and W. H. Zurek, Nature 299, 802 (1982).
[5] D. Dieks, Phys. Lett. A 92, 271 (1982).
[6] D. Bouwmeester et al., Nature 390, 575 (1997).
[7] D. Boschi et al., Phys. Rev. Lett. 80, 1121 (1998).
[8] I. Marcikic et al., Nature 421, 509 (2003).
[9] R. Ursin et al., Nature 430, 849 (2004).
[10] A. Furusawa et al., Science 282, 706 (1998).
[11] M. A. Nielsen et al., Nature 396, 52 (1998).
[12] M. Riebe et al., Nature 429, 734 (2004).
[13] M. D. Barret et al., Nature 429, 737 (2004).
[14] A. Barenco et al., Phys. Rev. A 52, 3457 (1995).


5
Simple Quantum Algorithms
Before we start presenting "useful" but rather complicated quantum algo-
rithms, we introduce a few simple quantum algorithms which will be of help
for readers to understand how quantum algorithms are diﬀerent from and
superior to classical algorithms. We follow closely Meglicki [1].
5.1
Deutsch Algorithm
The Deutsch algorithm is one of the ﬁrst quantum algorithms which showed
quantum algorithms may be more eﬃcient than their classical counterparts.
In spite of its simplicty, full use of the superposition principle has been made
here.
Let f : {0, 1} →{0, 1} be a binary function. Note that there are only four
possible f, namely
f1 : 0 	→0, 1 	→0,
f2 : 0 	→1, 1 	→1,
f3 : 0 	→0, 1 	→1,
f4 : 0 	→1, 1 	→0.
The ﬁrst two cases, f1 and f2, are called constant, while the rest, f3 and f4,
are balanced. If we only have classical resources, we need to evaluate f twice
to tell if f is constant or balanced. There is a quantum algorithm, however,
with which it is possible to tell if f is constant or balanced with a single
evaluation of f, as was shown by Deutsch [2].
Let |0⟩and |1⟩correspond to classical bits 0 and 1, respectively, and consider
the state |ψ0⟩= 1
2(|00⟩−|01⟩+|10⟩−|11⟩). We apply f on this state in terms
of the unitary operator Uf : |x, y⟩	→|x, y ⊕f(x)⟩, where ⊕is an addition
mod 2. To be explicit, we obtain
|ψ1⟩= Uf|ψ0⟩
= 1
2(|0, f(0)⟩−|0, 1 ⊕f(0)⟩+ |1, f(1)⟩−|1, 1 ⊕f(1)⟩)
= 1
2(|0, f(0)⟩−|0, ¬f(0)⟩+ |1, f(1)⟩−|1, ¬f(1)⟩),
where ¬ stands for negation.
Therefore this operation is nothing but the
CNOT gate with the control bit f(x); the target bit y is ﬂipped if and only if
99

100
QUANTUM COMPUTING
f(x) = 1 and left unchanged otherwise. Subsequently we apply a Hadamard
gate on the ﬁrst qubit to obtain
|ψ2⟩= (UH ⊗I)|ψ1⟩
=
1
2
√
2 [(|0⟩+ |1⟩)(|f(0)⟩−|¬f(0)⟩) + (|0⟩−|1⟩)(|f(1)⟩−|¬f(1)⟩)] .
The wave function reduces to
|ψ2⟩=
1
√
2|0⟩(|f(0)⟩−|¬f(0)⟩)
(5.1)
in case f is constant, for which |f(0)⟩= |f(1)⟩, and
|ψ2⟩=
1
√
2|1⟩(|f(0)⟩−|¬f(0)⟩)
(5.2)
if f is balanced, for which |¬f(0)⟩= |f(1)⟩. Therefore the measurement of
the ﬁrst qubit tells us whether f is constant or balanced.
Let us consider a quantum circuit which implements the Deutsch algorithm.
We ﬁrst apply Walsh-Hadamard transformation W2 = UH ⊗UH on |01⟩to
obtain |ψ0⟩. We need to introduce a conditional gate Uf, i.e., the controlled-
NOT gate with the control bit f(x), whose action is Uf : |x, y⟩→|x, y⊕f(x)⟩.
Then a Hadamard gate is applied on the ﬁrst qubit before it is measured.
Figure 5.1 depicts this implementation.
FIGURE 5.1
Implementation of the Deutsch algorithm.
In the quauntum circuit, we assume the gate Uf is a black box for which
we do not ask the explicit implementation. We might think it is a kind of
subroutine. Such a black box is often called an oracle. The gate Uf is called
the Deutsch oracle. Its implementation is given only after f is speciﬁed.
Then what is the merit of the Deutsch algorithm? Suppose your friend
gives you a unitary matrix Uf and asks you to tell if f is constant or balanced.
Instead of applying |0⟩and |1⟩separately, you may construct the circuit in
Fig. 5.1 with the given matrix Uf and apply the circuit on the input state
|01⟩. Then you can tell your friend whether f is constant or balanced with a
single use of Uf.

Simple Quantum Algorithms
101
5.2
Deutsch-Jozsa Algorithm and Bernstein-Vazirani
Algorithm
The Deutsch algorithm introduced in the previous section may be generalized
to the Deutsch-Jozsa algorithm [3].
Let us ﬁrst deﬁne the Deutsch-Jozsa problem. Suppose there is a binary
function
f : Sn ≡{0, 1, . . ., 2n −1} →{0, 1}.
(5.3)
We require that f be either constant or balanced as before. When f is constant,
it takes a constant value 0 or 1 irrespetive of the input value x. When it is
balanaced the value f(x) for the half of x ∈Sn is 0, while it is 1 for the rest of
x. In other words, |f −1(0)| = |f −1(1)| = 2n−1, where |A| denotes the number
of elements in a set A, known as the cardinality of A. Although there are
functions which are neither constant nor balanced, we will not consider such
cases here. Our task is to ﬁnd an algorithm which tells if f is constant or
balanced with the least possible number of evaluations of f.
It is clear that we need at least 2n−1 + 1 steps, in the worst case with
classical manipulations, to make sure if f(x) is constant or balanced with
100% conﬁdence. It will be shown below that the number of steps reduces to
a single step if we are allowed to use a quantum algorithm.
The algorithm is divided into the following steps:
1. Prepare an (n + 1)-qubit register in the state |ψ0⟩= |0⟩⊗n ⊗|1⟩. First
n qubits work as input qubits, while the (n + 1)st qubit serves as a
"scratch pad." Such qubits, which are neither input qubits nor output
qubits, but work as a scratch pad to store temporary information are
called ancillas or ancillary qubits.
2. Apply the Walsh-Hadamard transforamtion to the register. Then we
have the state
|ψ1⟩= U ⊗n+1
H
|ψ0⟩=
1
√
2n (|0⟩+ |1⟩)⊗n ⊗1
√
2
(|0⟩−|1⟩)
=
1
√
2n
2n−1

x=0
|x⟩⊗1
√
2(|0⟩−|1⟩).
(5.4)
3. Apply the f(x)-controlled-NOT gate on the register, which ﬂips the
(n + 1)st qubit if and only if f(x) = 1 for the input x.
Therefore
we need a Uf gate which evaluates f(x) and acts on the register as
Uf|x⟩|c⟩= |x⟩|c⊕f(x)⟩, where |c⟩is the one-qubit state of the (n+1)st
qubit.
Observe that |c⟩is ﬂipped if and only if f(x) = 1 and left

102
QUANTUM COMPUTING
unchanged otherwise. We then obtain a state
|ψ2⟩= Uf|ψ1⟩
=
1
√
2n
2n−1

x=0
|x⟩1
√
2
(|f(x)⟩−|¬f(x)⟩)
=
1
√
2n

x
(−1)f(x)|x⟩1
√
2
(|0⟩−|1⟩).
(5.5)
Although the gate Uf is applied once for all, it is applied to all the
n-qubit states |x⟩simultaneously.
4. The Walsh-Hadamard transformation (4.11) is applied on the ﬁrst n
qubits next. We obtain
|ψ3⟩= (Wn ⊗I)|ψ2⟩=
1
√
2n
2n−1

x=0
(−1)f(x)U ⊗n
H |x⟩1
√
2(|0⟩−|1⟩).
(5.6)
It is instructive to write the action of the one-qubit Hadamard gate in
the following form,
UH|x⟩=
1
√
2(|0⟩+ (−1)x|1⟩) =
1
√
2

y∈{0,1}
(−1)xy|y⟩,
where x ∈{0, 1}, to ﬁnd the resulting state. The action of the Walsh-
Hadamard transformation on |x⟩= |xn−1 . . . x1x0⟩yields
Wn|x⟩= (UH|xn−1⟩)(UH|xn−2⟩) . . . (UH|x0⟩)
=
1
√
2n

yn−1,yn−2,...,y0∈{0,1}
(−1)xn−1yn−1+xn−2yn−2+...+x0y0
×|yn−1yn−2 . . . y0⟩
=
1
√
2n
2n−1

y=0
(−1)x·y|y⟩,
(5.7)
where x·y = xn−1yn−1 ⊕xn−2yn−2 ⊕. . .⊕x0y0. Substituting this result
into Eq. (5.6), we obtain
|ψ3⟩= 1
2n
 2n−1

x,y=0
(−1)f(x)(−1)x·y|y⟩

1
√
2(|0⟩−|1⟩).
(5.8)
5. The ﬁrst n qubits are measured. Suppose f(x) is constant. Then |ψ3⟩
is put in the form
|ψ3⟩= 1
2n

x,y
(−1)x·y|y⟩1
√
2
(|0⟩−|1⟩)

Simple Quantum Algorithms
103
up to an overall phase. Now let us consider the summation
1
2n
2n−1

x=0
(−1)x·y
with a ﬁxed y ∈Sn. Clearly it vanishes since x · y is 0 for half of x and
1 for the other half of x unless y = 0. Therefore the summation yields
δy0. Now the state reduces to
|ψ3⟩= |0⟩⊗n 1
√
2(|0⟩−|1⟩),
and the measurement outcome of the ﬁrst n qubits is always 00 . . .0.
Suppose f(x) is balanced next. The probability amplitude of |y = 0⟩in
|ψ3⟩is proportional to
2n−1

x=0
(−1)f(x)(−1)x·0 =
2n−1

x=0
(−1)f(x) = 0.
Therefore the probability of obtaining measurement outcome 00 . . .0 for
the ﬁrst n qubits vanishes. In conclusion, the function f is constant if
we obtain 00 . . .0 upon the meaurement of the ﬁrst n qubits in the state
|ψ3⟩, and it is balanced otherwise.
EXERCISE 5.1 Let us take n = 2 for deﬁniteness. Consider the following
cases and ﬁnd the ﬁnal wave function |ψ3⟩and evaluate the measurement
outcomes and their probabilities for each case.
(1) f(x) = 1 ∀x ∈S2.
(2) f(00) = f(01) = 1, f(10) = f(11) = 0.
(3) f(00) = 0, f(01) = f(10) = f(11) = 1. (This function is neither constant
nor balanced.)
The above exercise shows that the measurement gives |00⟩with probability
1 if f is constant and with probability 0 if balanced. If f is neither constant
nor balanced |ψ3⟩is a superposition of several states including |00⟩, which is
attributed to "incomplete" interference.
A quantum circuit which implements the Deutsch-Jozsa algorithm is given
in Fig. 5.2. The gate Uf is called the Deutsch-Jozsa oracle.
The Bernstein-Vazirani algorithm is a special case of the Deutsch-Jozsa
algorithm, in which f(x) is given by f(x) = c · x, where c = cn−1cn−2 . . . c0
is an n-bit binary number [4]. Our aim is to ﬁnd c with the smallest number
of evaluations of f. If we apply the Deutsch-Jozsa algorithm with this f, we
obtain
|ψ3⟩= 1
2n
2n−1

x,y=0
(−1)c·x(−1)x·y|y⟩

1
√
2(|0⟩−|1⟩).

104
QUANTUM COMPUTING
FIGURE 5.2
Quantum circuit implementing the Deutsch-Jozsa algorithm. The gate Uf is
the Deutsch-Jozsa oracle.
Let us ﬁx y ﬁrst. If we take y = c, we obtain

x
(−1)c·x(−1)x·c =

x
(−1)2c·x = 2n.
If y ̸= c, on the other hand, there will be the same number of x such that
c · x = 0 and x such that c · x = 1 in the summation over x and, as a result,
the probability amplitude of |y ̸= c⟩vanishes. By using these results, we end
up with
|ψ3⟩= |c⟩1
√
2(|0⟩−|1⟩).
(5.9)
We are able to tell what c is by measuring the ﬁrst n qubits. Note that this
is done by a single application of the circuit in Fig. 5.2.
EXERCISE 5.2 Consider the Bernstein-Vazirani algorithm with n = 3 and
c = 101. Work out the quantum circuit depicted in Fig. 5.2 to show that the
measurement outcome of the ﬁrst three qubits is c = 101.

Simple Quantum Algorithms
105
5.3
Simon's Algorithm
The ﬁnal example of simple quantum algorithms is Simon's algorithm. Let
us consider a function (oracle) f : {0, 1}n →{0, 1}n such that
1. f is 2 to 1; namely, for any x1, there is one and only one x2 ̸= x1 such
that f(x1) = f(x2).
2. f is periodic; namely, there exists p ∈{0, 1}n such that f(x ⊕p) =
f(x), ∀x ∈{0, 1}n, where ⊕is a bitwise addition mod 2.
The function f is made of n component functions fk : {0, 1}n →{0, 1} as
f = (f1, f2, . . . , fn).
Suppose we want to ﬁnd the period p, given an unknown oracle f. Since p
can be any number between 00 . . .0 and 11 . . . 1, we have to try ∼2n possi-
bilities classically before we hit the right number. It is shown below that the
number of trials required to ﬁnd p is reduced to O(n) if Simon's algorithm is
employed.
The algorithm is decomposed into the following steps:
1. Prepare two sets of n-qubit regiters in the state |ψ0⟩= |0⟩|0⟩. Then the
Walsh-Hadamard transformation Wn is applied on the ﬁrst register to
yield
|ψ1⟩= (Wn ⊗I)|ψ0⟩=
1
√
2n
2n−1

x=0
|x⟩|0⟩.
2. Introduce n controlled-NOT gates with control qubits fk(x) (1 ≤k ≤n)
and the target bit is the kth qubit of the second register. We write
Uf : |x⟩|0⟩	→|x⟩|f(x)⟩,
where |0⟩is an n-qubit register state and |f(x)⟩= |f1(x)⟩|f2(x)⟩. . . |fn(x)⟩.
Linearity implies the state |ψ2⟩after the Uf gate operation on |ψ1⟩is
|ψ2⟩=
1
√
2n
2n−1

x=0
|x⟩|f(x)⟩.
(5.10)
3. Now we measure the second register. In fact, we do not need to know
the measurement outcome. What we have to do is to project the sec-
ond register to a certain state |f(x0)⟩, for example. After one of these
operations, the state is now projected to
|ψ3⟩=
1
√
2(|x0⟩+ |x0 ⊕p⟩)|f(x0)⟩,
(5.11)
where we noted that there are exactly two states |x0⟩and |x0 ⊕p⟩that
give the second register state |f(x0)⟩in step 2.

106
QUANTUM COMPUTING
4. Now we apply Wn again on the ﬁrst register to obtain
|ψ4⟩=
1
√
2
1
√
2n
2n−1

y=0
#
(−1)x0·y + (−1)(x0⊕p)·y$
|y⟩⊗|f(x0)⟩
=
1
√
2
1
√
2n
2n−1

y=0
(−1)x0·y [1 + (−1)p·y] |y⟩⊗|f(x0)⟩.
(5.12)
The inner product p·y takes two values 0 and 1. We immediately notice
that such y which satisﬁes 1 + (−1)p·y = 0, namely, p · y = 1 does not
contribute to the summation in Eq. (5.12). Now we are left with
|ψ4⟩=
2
√
2
1
√
2n
 
p·y=0
(−1)x0·y|y⟩

⊗|f(x0)⟩.
(5.13)
5. Finally we measure the ﬁrst register. Upon this measurement, we obtain
|y⟩such that p·y = 0. Of course, this equation is not enough to identify
the period p. Now we repeat the algorithm many times to obtain
p · y1 = p · y2 = . . . = p · ym = 0.
(5.14)
It should be clear that we need at least n trials since not all equations
are linearly independent. For a suﬃciently large number of trials m,
we are able to solve Eq. (5.14) for p classically. The number of trials
necessary for this is O(n) with a good probability.
Figure 5.3 shows the quantum circuit to implement Simon's algorithm for
the case n = 3.
Simon's algorithm has been improved so that it may be executed in deter-
ministic polynomial time [6].
References
[1] Z. Meglicki, http://beige.ucs.indiana.edu/M743/index.html
[2] D. Deutsch, Proc. Roy. Soc. Lond. A, 400, 97 (1985).
[3] D. Deutsch and R. Jozsa, Proc. Roy. Soc. Lond. A, 439, 553 (1992).
[4] E. Bernstein and U. Vazirani, SIAM J. Comput., 26, 1411 (1997).
[5] D. R. Simon, Proc. 35th Annual Sympo. Found. Comput. Science, IEEE
Comput. Soc. Press, Los Alamitos, 116 (1994).
[6] T. Mihara and S. C. Sung, Comput. Complex. 12, 162 (2003).

Simple Quantum Algorithms
107
FIGURE 5.3
Quantum circuit implementing Simon's algorithm.
The second register is
measured only for projection purposes, and reading the outcome is not nec-
essary.


6
Quantum Integral Transforms
We demonstrated in the previous chapter that there are some quantum algo-
rithms superior to their classical counterparts. It is, however, rather diﬃcult
to ﬁnd any practical use of these algorithms. There are two quantum algo-
rithms, known to date, which are potentially useful: Grover's search algorithm
and Shor's prime number factorization algorithm. Both of them depend on
quantum integral transforms, which will be introduced in the present chapter.
We mainly follow [1] in our presentation.
6.1
Quantum Integral Transforms
DEFINITION 6.1 (Discrete Integral Transform) Let n ∈N and Sn =
{0, 1, . . ., 2n −1} be a set of integers. Consider a map
K : Sn × Sn →C.
(6.1)
For any function f : Sn →C, its discrete integral transform (DIT) ˜f :
Sn →C with the kernel K is deﬁned as:
˜f(y) =
2n−1

x=0
K(y, x)f(x).
(6.2)
The transformation f →˜f is also called the discrete integral transform.
We deﬁne N ≡2n to simplify our notations. The kernel K is expressed as
a matrix,
K =
⎛
⎜
⎜
⎝
K(0, 0)
. . .
K(0, N −1)
K(1, 0)
. . .
K(1, N −1)
. . .
. . .
. . .
K(N −1, 0) . . . K(N −1, N −1),
⎞
⎟
⎟
⎠
(6.3)
and the function f as a vector,
f = (f(0), f(1), . . . f(N −1))t .
109

110
QUANTUM COMPUTING
The deﬁnition of DIT then reduces to the ordinary multiplication of a matrix
on a vector as
˜f = Kf.
PROPOSITION 6.1 Suppose the kernel K is unitary: K† = K−1. Then
the inverse transform ˜f →f of a DIT exists and is given by
f(x) =
N−1

y=0
K†(x, y) ˜f(y).
(6.4)
Proof. By substituting Eq. (6.2) into Eq. (6.4), we prove
N−1

y=0
K†(x, y) ˜f(y) =
N−1

y=0
K†(x, y)
N−1

z=0
K(y, z)f(z)

=
N−1

z=0
N−1

y=0
K†(x, y)K(y, z)

f(z)
=
N−1

z=0
δxzf(z) = f(x).
Let U be an N × N unitary matrix which acts on the n-qubit space H =
(C2)⊗n. Let {|x⟩= |xn−1, xn−2 . . . , x0⟩} (xk ∈{0, 1}) be the standard binary
basis of H, where x = xn−12n−1 + xn−22n−2 + . . . + x020. Then
U|x⟩=
N−1

y=0
|y⟩⟨y|U|x⟩=
N−1

y=0
U(y, x)|y⟩.
(6.5)
The complex number U(x, y) = ⟨x|U|y⟩is the (x, y)-component of U in this
basis.
PROPOSITION 6.2 Let U be a unitary transformation, acting on H =
(C2)⊗n. Suppose U acts on a basis vector |x⟩as
U|x⟩=
N−1

y=0
K(y, x)|y⟩.
(6.6)
Then U computes∗the DIT ˜f(y) = N−1
x=0 K(y, x)f(x) for any y ∈Sn, in the
sense that
U
N−1

x=0
f(x)|x⟩

=
N−1

y=0
˜f(y)|y⟩.
(6.7)
∗The proposition claims that U maps a state with the probability amplitude f(x) to another
state with the probability amplitude ˜f(y) that is related with f(x) through the kernel K.

Quantum Integral Transforms
111
Here |x⟩and |y⟩are basis vectors of H.
Proof. In fact,
U
N−1

x=0
f(x)|x⟩

=
N−1

x=0
f(x)U|x⟩
=
N−1

x=0
f(x)
N−1

y=0
K(y, x)|y⟩

=
N−1

y=0
N−1

x=0
K(y, x)f(x)

|y⟩
=
N−1

y=0
˜f(y)|y⟩.
(6.8)
Note that the unitary matrix U computes the discrete integral transform
˜f(y) for all variables y by a single operation if it acts on the superposition
state 
x f(x)|x⟩. There are exponentially large numbers 2n of y for an n-
qubit register, and this fact provides a quantum computer with exponentially
fast computing power for a certain kind of computations compared to classical
alternatives.
The unitary matrix U implementing a discrete integral transform as in
Eq. (6.7) is called the quantum integral transform (QIT).
EXERCISE 6.1 Let f →˜f be a DFT with a unitary kernel K.
Prove
Parseval's theorem
N−1

x=0
|f(x)|2 =
N−1

y=0
| ˜f(y)|2.
(6.9)
6.2
Quantum Fourier Transform (QFT)
One of the most important quantum integral transforms is the quantum
Fourier transform. Let ωn be the Nth primitive root of 1;
ωn = e2πi/N,
(6.10)
where N = 2n as before. The complex number ωn deﬁnes a kernel K by
K(x, y) =
1
√
N
ω−xy
n
.
(6.11)
The discrete integral transform with the kernel K,
˜f(y) =
1
√
N
N−1

x=0
ω−xy
n
f(x),
(6.12)

112
QUANTUM COMPUTING
is called the discrete Fourier transform (DFT).
The kernel K is unitary since
(KK†)(x, y) = ⟨x|K

z
|z⟩⟨z|K†|y⟩=

z
K(x, z)K†(z, y)
= 1
N

z
ω−xz
n
ωyz
n = 1
N

z
ω−(x−y)z = δxy.
The quantum integral transform deﬁned with this kernel is called the quan-
tum Fourier transform (QFT).
The kernel for n = 1 is
K1 =
1
√
2
 1
1
1 e2πi/2

=
1
√
2

1 1
1 −1

,
(6.13)
which is nothing but our familiar Hadamard gate. For n = 2, we have ω2 =
e2πi/4 = i and
K2 = 1
2
⎛
⎜
⎜
⎝
1
1
1
1
1 ω−1
2
ω−2
2
ω−3
2
1 ω−2
2
ω−4
2
ω−6
2
1 ω−3
2
ω−6
2
ω−9
2
⎞
⎟
⎟
⎠= 1
2
⎛
⎜
⎜
⎝
1 1
1
1
1 −i −1 i
1 −1 1 −1
1 i −1 −i
⎞
⎟
⎟
⎠.
(6.14)
The inverse DFT is given by
f(x) =
1
√
N
N−1

y=0
ωxy
n ˜f(y).
(6.15)
It is important to note that
UQFTn|0⟩=
1
√
2n
2n−1

y=0
|y⟩,
(6.16)
where UQFTn is the n-qubit QFT gate. This equality shows that the QFT of
f(x) = δx0 is ˜f(y) = 1/
√
2n, which is similar to the FT of the Dirac delta
function δ(x). Observe that a single application of UQFTn on the state |0⟩has
produced the superposition of all the basis vectors of H.
EXERCISE 6.2 Let
|ψ⟩= N
N−1

x=0
cos
2πx
N

|x⟩
be an n-qubit state.
(1) Normalize |ψ⟩.
(2) Find UQFTn|ψ⟩.

Quantum Integral Transforms
113
TABLE 6.1
Coeﬃcient of a vector |x⟩|f(y)⟩. Only the diagonal
combination |x⟩|f(x)⟩has nonvanishing amplitude in
the initial state |Ψ⟩. Moreover all the non-vanishing
coeﬃcients have vanishing phase.
|f(7)⟩
0
0
0
0
0
0
0
1
√
8
|f(6)⟩
0
0
0
0
0
0
1
√
8
0
|f(5)⟩
0
0
0
0
0
1
√
8
0
0
|f(4)⟩
0
0
0
0
1
√
8
0
0
0
|f(3)⟩
0
0
0
1
√
8
0
0
0
0
|f(2)⟩
0
0
1
√
8
0
0
0
0
0
|f(1)⟩
0
1
√
8
0
0
0
0
0
0
|f(0)⟩
1
√
8
0
0
0
0
0
0
0
|0⟩
|1⟩
|2⟩
|3⟩
|4⟩
|5⟩
|6⟩
|7⟩
6.3
Application of QFT: Period-Finding
There is a cool application of QFT, which is essential in Shor's factorization
algorithm. The following example is taken from [2]. Let |REG1⟩∈H1 be the
input register and |REG2⟩∈H2 be the output register. Each register is a
3-qubit system, to make our argument concrete, and the total system Hilbert
space is H1 ⊗H2. Let the initial state of |REG1⟩be
1
√
23 (|000⟩+ |001⟩+ . . . + |111⟩) =
1
√
8(|0⟩+ |1⟩+ . . . + |7⟩).
(6.17)
Let S3 = {0, 1, . . ., 23 −1 = 7} and let f : S3 →S3 be a function. Apply f
on the initial state to obtain
|Ψ⟩= Uf
1
√
8

x
|x⟩|0⟩=
1
√
8

x
|x, f(x)⟩=
1
√
8(|0, f(0)⟩+ . . . + |7, f(7)⟩).
(6.18)
It is interesting to visualize the coeﬃcient of each vector as in Table. 6.1.

114
QUANTUM COMPUTING
TABLE 6.2
Coeﬃcient of a vector |y⟩|f(x)⟩in |ψ′⟩. The
amplitude is 1/8 for all the coeﬃcients. The
arrow denotes the phase associated with each
coeﬃcient. ↗denotes eiπ/4, for example.
|f(7)⟩
→
↘
↓
↙
←
↖
↑
↗
|f(6)⟩
→
↓
←
↑
→
↓
←
↑
|f(5)⟩
→
↙
↑
↘
←
↗
↓
↖
|f(4)⟩
→
←
→
←
→
←
→
←
|f(3)⟩
→
↖
↓
↗
←
↘
↑
↙
|f(2)⟩
→
↑
←
↓
→
↑
←
↓
|f(1)⟩
→
↗
↑
↖
←
↙
↓
↘
|f(0)⟩
→
→
→
→
→
→
→
→
|0⟩
|1⟩
|2⟩
|3⟩
|4⟩
|5⟩
|6⟩
|7⟩
Let us apply the following QFT,
|x⟩→
1
√
8
7

y=0
e−2πixy/8|y⟩,
(6.19)
on the ﬁrst register. Then we obtain
|Ψ′⟩= 1
8

x,y
e−2πixy/8|y, f(x)⟩
= 1
8|0⟩⊗[|f(0)⟩+ |f(1)⟩+ . . . + |f(7)⟩]
(y = 0)
+1
8|1⟩⊗
#
|f(0)⟩+ e−2πi/8|f(1)⟩+ . . . + e−2πi7/8|f(7)⟩
$
(y = 1)
. . .
+1
8|7⟩⊗
#
|f(0)⟩+ e−14πi/8|f(1)⟩+ . . . + e−14πi7/8|f(7)⟩
$
.
(y = 7)
(6.20)
The coeﬃcient of each component |y⟩|f(x)⟩is shown in Table 6.2.
Suppose f(x) is a periodic function satisfying f(x + P) = f(x), P ∈N.
This period is found from the measurement outcome of |REG1⟩. Let P = 2,
for example. Then it follows that
f(0) = f(2) = f(4) = f(6) = a,
f(1) = f(3) = f(5) = f(7) = b,
where a, b ∈S3 and a ̸= b. The state |Ψ′⟩now reduces to
|Ψ′⟩= 1
8

x,y∈S3
e−2πixy/8|y, f(x)⟩

Quantum Integral Transforms
115
TABLE 6.3
Coeﬃcient of a vector |y⟩|f(x)⟩in the state
|Ψ′⟩in which f(0) = f(2) = f(4) = f(6) = a
and f(1) = f(3) = f(5) = f(7) = b. The
amplitude of all the non-vanishing
coeﬃcients is 1/2.
|b⟩
→
0
0
0
←
0
0
0
|a⟩
→
0
0
0
→
0
0
0
|0⟩
|1⟩
|2⟩
|3⟩
|4⟩
|5⟩
|6⟩
|7⟩
= 1
2|0⟩⊗[|a⟩+ |b⟩]
+1
8|1⟩⊗
#
|a⟩

1 + e−1·2·2πi/8 + e−1·4·2πi/8 + e−1·6·2πi/8
+|b⟩

e−1·1·2πi/8 + e−1·3·2πi/8 + e−1·5·2πi/8 + e−1·7·2πi/8$
. . .
(6.21)
As a result, all the vectors but
|0, a⟩, |0, b⟩, |4, a⟩, |4, b⟩
cancel out to vanish, and we are left with
|Ψ′⟩= 1
2
 
|0, a⟩+ |0, b⟩+ |4, a⟩+ e−iπ|4, b⟩
!
(6.22)
(see Table 6.3).
If we measure the ﬁrst register |REG1⟩, the result is either 0 or 4, which is
the direct consequence of the periodicity P = 2 of f(x).
EXERCISE 6.3 Suppose each register above is an n-qubit system. Let f(x)
be a periodic function with the period P. Show that the observed value of
the ﬁrst register is one of
0, 1 · 2n
P
, 2 · 2n
P
, 3 · 2n
P
, . . . (P −1)2n
P
,
(6.23)
where it is assumed that 2n/P ∈N.
The cancellation observed above is extensively made use of in Shor's fac-
torization algorithm.

116
QUANTUM COMPUTING
6.4
Implementation of QFT
We now consider a quantum circuit UQFTn which implements the n-qubit
QFT. The circuit UQFTn maps a state 
x f(x)|x⟩to a state 
y ˜f(y)|y⟩,
where
˜f(y) =
1
√
N

x
ω−xy
n
f(x),
ωn = e2πi/N.
Thus for f(x′) = δx′x, we obtain ˜f(y) = ω−xy
n
/
√
N, namely
UQFTn|x⟩=
1
√
N
N−1

y=0
e−2πixy/N|y⟩.
Let us start our implmentation of QFT with n = 1, 2 and 3 to familiarize
ourselves with the problem.
n = 1
Eq. (6.13) shows that the kernel for n = 1 QFT is the Hadamard gate H,
whose action on |x⟩, x ∈{0, 1}, is concisely written as
UH|x⟩=
1
√
2
(|0⟩+ (−1)x|1⟩) =
1
√
2
1

y=0
(−1)xy|y⟩.
(6.24)
In fact, this is the deﬁning equation for n = 1 QFT as
UQFT1|x⟩=
1
√
2
1

y=0
ω−xy
1
|y⟩=
1
√
2
1

y=0
(−1)xy|y⟩.
(6.25)
It is instructive to demonstrate Eq. (6.7) explicitly here. Let |ψ⟩= f(0)|0⟩+
f(1)|1⟩be any one-qubit state. Then
UQFT1|ψ⟩= f(0) 1
√
2(|0⟩+ |1⟩) + f(1) 1
√
2(|0⟩−|1⟩)
=
1
√
2 (f(0) + f(1)) |0⟩+ 1
√
2 (f(0) −f(1)) |1⟩=
1

y=0
˜f(y)|y⟩.
n = 2
This case is considerably more complicated than the case n = 1. It also
gives important insights into implementing QFT with n ≥3. Let us introduce
an important gate, the controlled-Bjk gate. The Bjk gate is deﬁned by the
matrix
Bjk =
1
0
0 e−iθjk

,
θjk =
2π
2k−j+1 ,
(6.26)
where j, k ∈{0, 1, 2, . . .} and k ≥j.

Quantum Integral Transforms
117
FIGURE 6.1
(a) Controlled-Bjk gate.
The inverted controlled-Bjk gate (b) and the
controlled-Bjk gate are equivalent (see Lemma 6.1).
LEMMA 6.1 The controlled-Bjk gate Ujk in Fig. 6.1 (a) acts on |x⟩|y⟩,
x, y ∈{0, 1}, as
Ujk|x, y⟩= e−iθjkxy|x, y⟩= exp

−
2πi
2k−j+1 xy

|x, y⟩.
(6.27)
Proof. The controlled-Bjk gate is written as
Ujk = |0⟩⟨0| ⊗I + |1⟩⟨1| ⊗Bjk,
(6.28)
and its action on |x, y⟩is
Ujk|x, y⟩= |0⟩⟨0|x⟩⊗|y⟩+ |1⟩⟨1|x⟩⊗Bjk|y⟩
=
%|x⟩⊗|y⟩
x = 0
|x⟩⊗Bjk|y⟩x = 1.
(6.29)
Moreover, when x = 1 we have
Bjk|y⟩=
% |y⟩
y = 0
e−iθjk|y⟩y = 1.
(6.30)
Thus the action of Ujk on |y⟩is trivial if xy = 0 and nontrivial if and only if
x = y = 1. These results may be summarized as Eq. (6.27).
The action of the controlled-Bjk gate on a basis vector |x⟩|y⟩is detemined
by the combination xy and not by x and y independently.
Therefore the
controlled-Bjk gate and the "inverted" controlled-Bjk gate are equivalent; see
Fig. 6.1.
The DFT for n = 2 is deﬁned as
˜f(y) = 1
2
3

x=0
ω−xy
2
f(x),
ω2 = e2πi/4 = i, y ∈S2.
(6.31)

118
QUANTUM COMPUTING
Equation (6.6) in Proposition 6.2 states that our task is to ﬁnd a unitary
matrix UQFT2 such that
UQFT2|x⟩= 1
2
3

y=0
ω−xy
2
|y⟩.
(6.32)
Let us write x and y in the binary form as x = 2x1 + x0 and y = 2y1 + y0,
respectively. The action of UQFT2 on |x⟩is
UQFT2|x1x0⟩= 1
2
3

y=0
e−2πixy/22|y⟩= 1
2
1

y0,y1=0
e−2πix(2y1+y0)/22|y1y0⟩
= 1
2

y1
e−2πixy1/2|y1⟩⊗

y0
e−2πixy0/22|y0⟩
= 1
2

|0⟩+ e−2πix/2|1⟩

⊗

|0⟩+ e−2πix/22|1⟩

= 1
2

|0⟩+ e−2πi(2x1+x0)/2|1⟩

⊗

|0⟩+ e−2πi(2x1+x0)/22|1⟩

= 1
2
 
|0⟩+ e−πix0|1⟩
!
⊗

|0⟩+ e−πix1e−i(π/2)x0|1⟩

= 1
2 (|0⟩+ (−1)x0|1⟩) ⊗Bx0
12 (|0⟩+ (−1)x1|1⟩) ,
(6.33)
where use has been made of the fact θ12 = 2π/22−1+1 = π/2 to obtain the
last expression. Note that Bx0
12 is the controlled-B12 gate with the control bit
x0 and the target bit x1; B0
12 = I while B1
12 = B12. Note also that, in spite of
its tensor product looking appearance, the last line of Eq. (6.33) is entangled
due to this conditional operation. Equation (6.33) suggests that the n = 2
QFT are implemented with the Hadamard and the U12 gates. Before writing
down the quantum circuit realizing Eq. (6.33), we should note that the ﬁrst
qubit has a power (−1)x0, while the second one has (−1)x1, when the input
state is |x1x0⟩. If we naively applied the Hadamard gate to the second qubit,
we would obtain
(I ⊗UH)|x1x0⟩= |x1⟩⊗1
√
2(|0⟩+ (−1)x0|1⟩).
These facts suggest that we need to swap the ﬁrst and second qubits at the
beginning of the implementation so that
UQFT2|x1x0⟩=
1
√
22 (|0⟩+ (−1)x0|1⟩) ⊗Bx0
12 (|0⟩+ (−1)x1|1⟩)
= (UH ⊗I)U12(I ⊗UH)|x0, x1⟩
= (UH ⊗I)U12(I ⊗UH)USWAP|x1x0⟩.
(6.34)
Since Eq. (6.34) is true for any |x1x0⟩, we should have UQFT2 = (UH ⊗
I)U12(I ⊗UH)USWAP, which proves the following proposition.

Quantum Integral Transforms
119
PROPOSITION 6.3 The n = 2 QFT gate is implemented as
UQFT2 = (UH ⊗I)U12(I ⊗UH)USWAP
(6.35)
(see Fig. 6.2).
FIGURE 6.2
Implementation of the n = 2 QFT, UQFT2.
The reader should verify the above implementation by explicitly writing
down the gates as matrices.
EXERCISE 6.4 It is also possible to have the SWAP gate in the very end
of the implementation. Design such an n = 2 QFT gate.
This construction is easily generalized to n ≥3 as we see next.
n = 3 and beyond
It is instructive to rewrite the construction of n = 2 QFT in a more gener-
alizable form. The state |x1x0⟩has been transformed as in Eq. (6.33):
|x1x0⟩→
1
√
22
22−1

y=0
e−2πixy/22|y⟩
=
1
√
22 (|0⟩+ e−2πix0/2|1⟩) ⊗(|0⟩+ e−2πi(x1/2+x0/22)|1⟩).
This observation suggests the following construction of n = 3 QFT:
UQFT3|x2x1x0⟩
=
1
√
23 (|0⟩+ e−2πix0/2|1⟩) ⊗(|0⟩+ e−2πi(x1/2+x0/22)|1⟩)
⊗(|0⟩+ e−2πi(x2/2+x1/22+x0/23)|1⟩)
=
1
√
23 (|0⟩+ (−1)x0|1⟩) ⊗Bx0
01(|0⟩+ (−1)x1|1⟩)
⊗Bx0
02Bx1
12(|0⟩+ (−1)x2|1⟩)

120
QUANTUM COMPUTING
= (UH ⊗I ⊗I)U01(I ⊗UH ⊗I)U02U12(I ⊗I ⊗UH)|x0x1x2⟩
= (UH ⊗I ⊗I)U01(I ⊗UH ⊗I)U02U12(I ⊗I ⊗UH)P|x2x1x0⟩, (6.36)
where Ujk is the controlled-Bjk gate with the control qubit xj, and the gate
P reverses the order of the qubits as P|x2x1x0⟩= |x0x1x2⟩. For a three-qubit
QFT, P is a SWAP gate between the ﬁrst qubit (x2) and the third qubit (x0).
Again note here that we should be careful in ordering the gates so that the
control bit xj acts in Ujk before it is acted by a Hadamard gate.
EXERCISE 6.5 Let x = 22x2 + 2x1 + x0 and y = 22y2 + 2y1 + y0.
(1) Write down the RHS of
UQFT3|x2x1x0⟩=
1
√
23
23−1

y=0
e−2πixy/23|y⟩
(6.37)
explicitly in terms of xi and yi.
(2) Show that the RHS of Eq. (6.37) agrees with the ﬁrst line of the RHS of
Eq. (6.36).
Since Eq. (6.36) is true for any |x2x1x0⟩, we have found
UQFT3 = (UH ⊗I ⊗I)U01(I ⊗UH ⊗I)U02U12(I ⊗I ⊗UH)P.
(6.38)
Equation (6.38) readily leads us to the quantum circuit in Fig. 6.3.
FIGURE 6.3
Implementation of the n = 3 QFT.
EXERCISE 6.6 Design a quantum circuit UQFT3 in which the permutation
gate P is at the very end of the circuit.
Now the generalization of the present construction to n ≥4 should be easy.
The equation that generalizes Eq. (6.36) is
UQFTn|xn−1 . . . x1x0⟩

Quantum Integral Transforms
121
=
1
√
N
(|0⟩+ e−2πix0/2|1⟩) ⊗(|0⟩+ e−2πi(x1/2+x0/22)|1⟩)
⊗(|0⟩+ e−2πi(x2/2+x1/22+x0/23)|1⟩) ⊗. . .
. . . ⊗(|0⟩+ e−2πi(xn−1/2+xn−2/22+...x1/2n−1+x0/2n)|1⟩)
= (UH ⊗I ⊗. . . ⊗I)U01(I ⊗UH ⊗I ⊗. . . ⊗I)U02U12
×(I ⊗I ⊗UH ⊗. . . ⊗I) . . .
×U0,n−1U1,n−1 . . . Un−2,n−1(I ⊗. . . ⊗I ⊗UH)|x0x1 . . . xn−1⟩
= (UH ⊗I ⊗. . . ⊗I)U01(I ⊗UH ⊗I ⊗. . . ⊗I)U02U12
×(I ⊗I ⊗UH ⊗. . . ⊗I) . . . U0,n−1U1,n−1 . . . Un−2,n−1
×(I ⊗. . . ⊗I ⊗UH)P|xn−1 . . . x1x0⟩,
(6.39)
where P reverses the order of xk as P|xn−1 . . . x1x0⟩= |x0x1 . . . xn−1⟩.
We ﬁnally ﬁnd the following decompostion of UQFTn:
UQFTn = (UH ⊗I ⊗. . . ⊗I)U01(I ⊗UH ⊗I ⊗. . . ⊗I)U02U12
×(I ⊗I ⊗UH ⊗. . . ⊗I) . . .
×U0,n−1U1,n−1 . . . Un−2,n−1(I ⊗. . . ⊗I ⊗UH)P.
(6.40)
A quantum circuit which implements UQFTn is found from Eq. (6.40) as in
Fig. 6.4. It may be proved, by induction, for example, that the circuit in
FIGURE 6.4
Implementation of the n-qubit QFT.
Fig. 6.4 really implements the n-qubit QFT.
PROPOSITION 6.4 The n-qubit QFT may be constructed with Θ(n2)
elementary gates.
Proof. The n-qubit QFT is made of a P gate, n Hadamard gates and (n −

122
QUANTUM COMPUTING
1) + (n −2) + . . . + 2 + 1 = n(n −1)/2 controlled-Bjk gates (see Fig. 6.4).
It has been shown in §4.2.3 that it requres three CNOT gates to construct
a SWAP gate.
Furthermore, a P gate for n qubits requires ⌊n/2⌋SWAP
gates,† assuming that there exists a SWAP gate for any pair of qubits. Thus
a P gate requires 3 × ⌊n/2⌋= Θ(n) elementary gates. Proposition 4.1 states
that a controlled-Bij gate is constructed with at most six elementary gates.
Thus it has been proved that the n-qubit QFT is made of Θ(n2) elementary
gates.
The above proposition is quite important in estimating the eﬃciency of
quantum algorithms. If we look at the deﬁnition
˜f(y) =
1
√
N
2n−1

x=0
ω−xyf(x),
we naively expect that N = 2n steps (including the evaluation of exponential
functions followed by multiplication) are required for each y and N × N steps
for all y's. In other words, it takes exponentially large steps (∼N 2 = e2n ln 2)
to carry out the QFT. The above proposition states that this is done in Θ(n2)
steps with the QFT gate if the initial state is a superposition of all x's.
6.5
Walsh-Hadamard Transform
There are two other quantum integral transforms, the Walsh-Hadamard trans-
form and the selective phase rotation transform, which are often employed in
quantum computing.
We have already encountered the Walsh-Hadamard transform in §4.2.2 and
§5.2. Let x, y ∈Sn = {0, 1, . . ., N−1} with binary expressions xn−1xn−2 . . . x0
and yn−1yn−2 . . . y0, where N = 2n. The Walsh-Hadamard transform, written
in the form of Eq. (5.7), shows that it is a quantum integral transform with a
kernel Wn : Sn × Sn →C deﬁned by
Wn(x, y) =
1
√
N
(−1)x·y
(x, y ∈Sn),
(6.41)
where x·y = xn−1yn−1 ⊕xn−2yn−2 ⊕. . .⊕x0y0. This kernel deﬁnes a discrete
integral transform
˜f(y) =
1
√
N
N−1

x=0
(−1)x·yf(x).
(6.42)
†⌊x⌋is the largest integer which is less than or equal to x ∈R and called the ﬂoor of x.

Quantum Integral Transforms
123
6.6
Selective Phase Rotation Transform
DEFINITION 6.2 (Selective Phase Rotation Transform) Let us de-
ﬁne a kernel
Kn(x, y) = eiθxδxy,
∀x, y ∈Sn,
(6.43)
where θx ∈R. The discrete integral transform
˜f(y) =
N−1

x=0
K(x, y)f(x) =
N−1

x=0
eiθxδxyf(x) = eiθyf(y)
(6.44)
with the kernel Kn is called the selective phase rotation transform.
EXERCISE 6.7 Show that Kn deﬁned above is unitary. Write down the
inverse transformation K−1
n .
The matrix representations for K1 and K2 are
K1 =
 eiθ0
0
0
eiθ1

,
K2 =
⎛
⎜
⎜
⎝
eiθ0
0
0
0
0
eiθ1
0
0
0
0
eiθ2
0
0
0
0
eiθ3
⎞
⎟
⎟
⎠.
The implementation of Kn is achieved with the universal set of gates as
follows. Take n = 2, for example. The kernel K2 has been given above. This
is decomposed as a product of two two-level unitary matrices as
K2 = A0A1,
(6.45)
where
A0 =
⎛
⎜
⎜
⎝
eiθ0
0
0 0
0
eiθ1 0 0
0
0
1 0
0
0
0 1
⎞
⎟
⎟
⎠, A1 =
⎛
⎜
⎜
⎝
1 0
0
0
0 1
0
0
0 0 eiθ2
0
0 0
0
eiθ3
⎞
⎟
⎟
⎠.
(6.46)
Note that
A0 = |0⟩⟨0| ⊗U0 + |1⟩⟨1| ⊗I,
U0 =
eiθ0
0
0
eiθ1

,
A1 = |0⟩⟨0| ⊗I + |1⟩⟨1| ⊗U1,
U1 =
eiθ2
0
0
eiθ3

.
Thus A1 is realized as an ordinary controlled-U1 gate while the control bit
is negated in A0. Then what we have to do for A0 is to negate the control
bit ﬁrst and then to apply ordinary controlled-U0 gate and ﬁnally to negate
the control bit back to its input state. In summary, A0 is implemented as in

124
QUANTUM COMPUTING
Fig. 6.5. In fact, it can be readily veriﬁed that the gate in Fig. 6.5 is written
as
(X ⊗I)(|0⟩⟨0| ⊗I + |1⟩⟨1| ⊗U0)(X ⊗I)
= X|0⟩⟨0|X ⊗I + X|1⟩⟨1|X ⊗U0 = |1⟩⟨1| ⊗I + |0⟩⟨0| ⊗U0 = A0.
Thus these gates are implemented with the set of universal gates. In fact, the
order of Ai does not matter since [A0, A1] = 0.
FIGURE 6.5
Implementation of A0.
EXERCISE 6.8 Repeat the above arguments for n = 3. In this case K3 is
written as a product of four two-level unitary matrices. Write down these ma-
trices and ﬁnd the quantum circuits similar to that in Fig. 6.5 that implements
these two-level unitary matrices.
References
[1] Y. Uesaka, Mathematical Principle of Quantum Computation, Corona
Publishing, Tokyo, in Japanese (2000).
[2] G. P. Berman, G. D. Doolen, R. Mainieri and V. I. Tsifrinovich, Intro-
duction to Quantum Computers, World Scientiﬁc, Singapore (1998).

7
Grover's Search Algorithm
Suppose there is a stack of N unstructured ﬁles and we want to ﬁnd a par-
ticular ﬁle (or ﬁles) out of the N ﬁles. To ﬁnd someone's phone number in a
telephone directory is an easy structured datebase search problem, while to
ﬁnd a person's name who has a particular phone number is a more diﬃcult
unstructured database seach problem, with which we are concerned in this
chapter. It is required to take O(N) steps on average if a classical algorithm
is employed. If we check the ﬁles one by one, we will hit the right ﬁle with
probability 1/2 after N/2 ﬁles are examined. It turns out that this takes only
O(
√
N) steps with a quantum algorithm, ﬁrst discovered by Grover [1, 2, 3].
Our presentation in this chapter closely follows [4] and [5].
7.1
Searching for a Single File
Suppose there is a stack of N = 2n ﬁles, randomly placed, that are numbered
by x ∈Sn ≡{0, 1, . . ., N −1}. Our task is to ﬁnd an algorithm which picks
out a particular ﬁle which satisﬁes a certain condition.
In mathematical language, this is expressed as follows. Let f : Sn →{0, 1}
be a function deﬁned by
f(x) =

1 (x = z)
0 (x ̸= z),
(7.1)
where z is the address of the ﬁle we are looking for.
It is assumed that
f(x) is instantaneously calculable, such that this process does not require any
computational steps. A function of this sort is often called an oracle as noted
in Chapter 5. Thus, the problem is to ﬁnd z such that f(z) = 1, given a
function f : Sn →{0, 1} which assumes the value 1 only at a single point.
Clearly we have to check one ﬁle after another in a classical algorithm,
and it will take O(N) steps on average. It is shown below that it takes only
O(
√
N) steps with Grover's algorithm. This is accomplished by amplifying
the amplitude of the vector |z⟩while cancelling that of the vectors |x⟩(x ̸= z).
We describe the algorithm in several steps.
STEP 1 (Selective phase rotation transform; see §6.6.)
125

126
QUANTUM COMPUTING
Deﬁne the kernel of the selective phase rotation transform Rf by
Kf(x, y) = eiπf(x)δxy = (−1)f(x)δxy,
(7.2)
where x, y ∈Sn. Since Rf maps |z⟩	→−|z⟩, while leaving all the other vectors
unchanged, it can be expressed as
Rf = I −2|z⟩⟨z|.
(7.3)
Let us consider a state
|ϕ⟩=
N−1

x=0
wx|x⟩,

x
|wx|2 = 1.
(7.4)
Then it is easy to verify
Rf|ϕ⟩= w0|0⟩+ . . . + (−1)wz|z⟩+ . . . + wN−1|N −1⟩.
(7.5)
(In other words, Rf changes the sign of wz while leaving all other coeﬃcients
unchanged.)
STEP 2 Deﬁne a unitary matrix
D = WnR0Wn,
(7.6)
where Wn is the Walsh-Hadamard transform,
Wn(x, y) =
1
√
N
(−1)x·y,
(x, y ∈Sn)
(7.7)
and R0 is the selective phase rotation transform deﬁned by
R0(x, y) = eiπ(1−δx0)δxy = (−1)1−δx0δxy.
(7.8)
PROPOSITION 7.1 Let
|ϕ0⟩=
1
√
N
N−1

x=0
|x⟩.
(7.9)
Then
D = −I + 2|ϕ0⟩⟨ϕ0|.
(7.10)
Moreover
D|ϕ⟩=
N−1

x=0
( ¯w −(wx −¯w)) |x⟩,
(7.11)
where |ϕ⟩is given in Eq. (7.4) and
¯w = 1
N
N−1

x=0
wx
(7.12)

Grover's Search Algorithm
127
is the avarage of wx over Sn.
Proof. Let us evaluate the matrix elements of the RHS of Eq. (7.10). We
obtain from
−I + 2|ϕ0⟩⟨ϕ0| = −I + 2
N

x
|x⟩

y
⟨y| = −I + 2
N

x,y
|x⟩⟨y|
that the (x, y)-component of the RHS is
⟨x|RHS|y⟩= −δxy + 2
N .
(7.13)
Let us turn to the LHS next. The (x, y)-component of D = WnR0Wn is
⟨x|WnR0Wn|y⟩=

u,v
⟨x|Wn|u⟩⟨u|R0|v⟩⟨v|Wn|y⟩
= 1
N

u,v
(−1)x·u
×(−1)1−δu0δuv(−1)v·y.
The summation over u is evaluated as
N−1

u=0
(−1)x·u(−1)1−δu0δuv
= (−1)0(−1)0δ0v −
N−1

u=1
(−1)x·uδuv
= 2δ0v −
N−1

u=0
(−1)xn−1un−1+...+x1u1+x0u0δun−1vn−1 . . . δu1v1δu0v0
= 2δ0v −
⎡
⎣
1

un−1=0
(−1)xn−1un−1δun−1vn−1
⎤
⎦. . .

1

u1=0
(−1)x1u1δu1v1

×

1

u0=0
(−1)x0u0δu0v0

.
Then the LHS becomes
⟨x|D|y⟩= 1
N
N−1

v=0
⎡
⎣2δ0v −
⎛
⎝
1

un−1=0
(−1)xn−1un−1δun−1vn−1
⎞
⎠
. . .

1

u0=0
(−1)x0u0δu0v0

(−1)v·y

128
QUANTUM COMPUTING
= 2
N −1
N
⎡
⎣
1

un−1,vn−1=0
(−1)xn−1un−1+vn−1yn−1δun−1vn−1
⎤
⎦
. . .

1

u0,v0=0
(−1)x0u0+v0y0δu0v0

= 2
N −1
N

1 + (−1)xn−1+yn−1
. . .

1 + (−1)x0+y0
= 2
N −2n
N δxn−1yn−1 . . . δx0y0
= 2
N −δxy,
which proves Eq. (7.10).
Equation (7.11) is proved as
D|ϕ⟩= (−I + 2|ϕ0⟩⟨ϕ0|)|ϕ⟩=

−I + 2
N

y,z
|y⟩⟨z|
 
x
wx|x⟩
= −

x
wx|x⟩+ 2
N

x,y,z
wx|y⟩δxz = −

x
wx|x⟩+ 2
N

y,z
wz|y⟩
= −

x
wx|x⟩+ 2

y
¯w|y⟩=
N−1

x=0
[ ¯w −(wx −¯w)] |x⟩.
Equation (7.11) shows that D is an operator that produces "inversion about
the average" since the quantity ¯w−(wx−¯w) = 2 ¯w−wx is obtained by reﬂecting
wx about ¯w.
STEP 3 Now let us consider the unitary transformation Uf deﬁned by
Uf = DRf = (−I + 2|ϕ0⟩⟨ϕ0|) (I −2|z⟩⟨z|)
(7.14)
and consider its action on |ϕ⟩= 
x wx|x⟩. Direct application of the results
in step 1 and step 2 yields
Uf|ϕ⟩= D
⎛
⎝
x̸=z
wx|x⟩−wz|z⟩
⎞
⎠=

x̸=z
[ ¯w −(wx −¯w)]|x⟩+ [ ¯w + (wz + ¯w)]|z⟩
=
N−1

x=0
x̸=z
(2 ¯w −wx)|x⟩+ (2 ¯w + wz)|z⟩,
(7.15)

Grover's Search Algorithm
129
where N−1
x=0 |wx|2 = 1 and
¯w = 1
N
⎛
⎝
N−1

x=0,x̸=z
wx −wz
⎞
⎠
(7.16)
is the average value of the coeﬃcients of the state Rf|ϕ⟩.
This result shows that the amplitude of |z⟩has increased upon the operation
of Uf while that of |x⟩(x ̸= z) has decreased, assuming that all the weights
wx are positive. Thus repeated applications of Uf increase the amplitude of
|z⟩so that this particular state is observed with probability close to 1 when
the system is measured. Let us ﬁnd the state obtained after Uf is applied k
times on the initial state |ϕ0⟩.
PROPOSITION 7.2 Let us write
U k
f |ϕ0⟩= ak|z⟩+ bk

x̸=z
|x⟩
(7.17)
with the initial condition
a0 = b0 =
1
√
N
.
Then the coeﬃcients {ak, bk} for k ≥1 satisfy the recursion relations
ak = N −2
N
ak−1 + 2(N −1)
N
bk−1,
(7.18)
bk = −2
N ak−1 + N −2
N
bk−1
(7.19)
for k = 1, 2, . . ..
Proof. It is easy to see the recursion relations are satiﬁed for k = 1 by making
use of Eqs. (7.15) and (7.16). Let U k−1
f
|ϕ0⟩= ak−1|z⟩+ bk−1

x̸=z |x⟩. Then
U k
f |ϕ0⟩= Uf
⎛
⎝ak−1|z⟩+ bk−1

x̸=z
|x⟩
⎞
⎠
= (−I + 2|ϕ0⟩⟨ϕ0|)
⎛
⎝−ak−1|z⟩+ bk−1

x̸=z
|x⟩
⎞
⎠
= −bk−1

x̸=z
|x⟩+ ak−1|z⟩+
2
√
N
(N −1)bk−1|ϕ0⟩−2ak−1
√
N
|ϕ0⟩
= −bk−1

x̸=z
|x⟩+ ak−1|z⟩+ 2
N (N −1)bk−1

x
|x⟩−2ak−1
N

x
|x⟩
=
N −2
N
ak−1 + 2(N −1)
N
bk−1

|z⟩

130
QUANTUM COMPUTING
+

−2
N ak−1 + N −2
N
bk−1
 
x̸=z
|x⟩,
and proposition is proved.
PROPOSITION 7.3 The solutions of the recursion relations in Proposition
7.2 are explicitly given by
ak = sin[(2k + 1)θ],
bk =
1
√
N −1 cos[(2k + 1)θ],
(7.20)
for k = 0, 1, 2, . . ., where
sin θ =
*
1
N ,
cos θ =
*
1 −1
N .
(7.21)
Proof. Let ck =
√
N −1bk.
The recursion relations (7.18) and (7.19) are
written in a matrix form,

ak
ck

= M

ak−1
ck−1

, M =

(N −2)/N
2
√
N −1/N
−2
√
N −1/N (N −2)/N

=

cos 2θ sin 2θ
−sin 2θ cos 2θ

.
Note that M is a rotation matrix in R2, and its kth power is another rota-
tion matrix corresponding to a rotation angle 2kθ. Thus the above recursion
relation is easily solved to yield

ak
ck

= M k

a0
c0

=

cos 2kθ sin 2kθ
−sin 2kθ cos 2kθ
 
sin θ
cos θ

=

sin[(2k + 1)θ]
cos[(2k + 1)θ]

.
Replacing ck by bk proves the proposition.
We have proved that the application of Uf k times on |ϕ0⟩results in the
state
U k
f |ϕ0⟩= sin[(2k + 1)θ]|z⟩+
1
√
N −1 cos[(2k + 1)θ]

x̸=z
|x⟩.
(7.22)
Measurement of the state U k
f |ϕ0⟩yields |z⟩with the probability
Pz,k = sin2[(2k + 1)θ].
(7.23)
It is instructive to visualize what is going on with a simple example. Let
us take n = 4, for which N = 2n = 16. The probabilities (ak, bk) are given by
a2
0 = b2
0 = 1/16,
a2
k = sin2[(2k + 1)θ], b2
k = cos2[(2k + 1)θ]
16 −1
,
where θ = sin−1(1/4).
Figure 7.1 shows the probability distributions for
k = 1, 2, 3 and 4 where we have chosen z = 10.

Grover's Search Algorithm
131
FIGURE 7.1
Probability distribution of U k
f |ϕ0⟩, where z is chosen as 10. The number k of
iteration is (a) 1, (b) 2, (c) 3 and (d) 4. Observe that Pz,k takes its maximum
value ≃1 when k = 3.
It should be noted that ak does not increase monotonically with k, but
there is a k (= 3 in the present case) that maximizes Pz,k = a2
k.
STEP 4 Our ﬁnal task is to ﬁnd the k that maximizes Pz,k. A rough estimate
for the maximizing k is obtained by putting
(2k + 1)θ = π
2 →k = 1
2
 π
2θ −1

.
(7.24)
The previous example gave k = 3, which is consistent with this estimate:
θ = sin−1(1/4) ≃0.25268 →k ≃2.6.
This can be reﬁned as the following proposition.
PROPOSITION 7.4 Let N ≫1 and let
m =
+ π
4θ
,
,
(7.25)

132
QUANTUM COMPUTING
where ⌊x⌋stands for the ﬂoor of x.
The ﬁle we are searching for will be
obtained in U m
f |ϕ0⟩with the probability
Pz,m ≥1 −1
N
(7.26)
and
m = O(
√
N).
(7.27)
Proof. Equation (7.25) leads to the inequality π/4θ −1 < m ≤π/4θ. Let us
deﬁne ˜m by
(2 ˜m + 1)θ = π
2 →˜m = π
4θ −1
2.
Observe that m and ˜m satisfy
|m −˜m| ≤1
2,
(7.28)
from which it follows that
|(2m + 1)θ −(2 ˜m + 1)θ| =
---(2m + 1)θ −π
2
--- ≤θ.
(7.29)
Considering that θ ∼1/
√
N is a small number when N ≫1 and sin x is
monotonically increasing in the neighborhood of x = 0, we obtain
0 < sin |(2m + 1)θ −π/2| < sin θ
or
cos2[(2m + 1)θ] ≤sin2 θ = 1
N .
(7.30)
Thus it has been shown that
Pm,z = sin2[(2m + 1)θ] = 1 −cos2[(2m + 1)θ] ≥1 −1
N .
(7.31)
It also follows from θ > sin θ = 1/
√
N that
m =
+ π
4θ
,
≤π
4θ ≤π
4
√
N.
(7.32)
It is important to note that this quantum algorithm takes only O(
√
N)
steps and this is much faster than the classical counterpart which requires
O(N) steps.
Figure 7.2 shows the quantum circuit which implements Grover's search
algorithm. We gave working space for oracles explicitly.

Grover's Search Algorithm
133
FIGURE 7.2
Implementation of Grover's search algorithm. Details of the box denoted by
Uf = DRf are given in the lower diagram. The box Uf is repeated m times to
maximize Pz,k. The gate Rf is the oracle, and working qubits to implement
the oracle are given explicitly.
7.2
Searching for d Files
Suppose there are d (1 < d ≤N) ﬁles that satisfy a given condition and we
are asked to ﬁnd all of them. This problem is formulated with a help of an
oracle
f(x) =
 1 (x ∈A)
0 (x ̸∈A).
(7.33)
where A is the subset of Sn, whose elements satisfy the given condition. The
subset A is of course unknown to us beforehand.
This problem is solved similarly to the single-ﬁle searching problem. Let us
deﬁne
Rf = I −2

z∈A
|z⟩⟨z|.
(7.34)
Then an application of Rf on |ϕ⟩= N−1
x=0 wx|x⟩(
x |wx|2 = 1) yields
Rf|ϕ⟩=

x̸∈A
wx|x⟩−

z∈A
wz|z⟩.
(7.35)

134
QUANTUM COMPUTING
Consider
Uf = DRf = (−I + 2|ϕ0⟩⟨ϕ0|)

I −2

z∈A
|z⟩⟨z|

,
(7.36)
where D = WnR0Wn has been deﬁned in Eq. (7.6). Application of Uf on |ϕ⟩
produces the state
Uf|ϕ⟩=

x̸∈A
(2 ¯w −wx)|x⟩+

z∈A
(2 ¯w + wz)|z⟩,
(7.37)
where
¯w = 1
N
⎛
⎝
x̸∈A
wx −

z∈A
wz
⎞
⎠.
(7.38)
EXERCISE 7.1 Prove Eq. (7.37).
EXERCISE 7.2 Let |ϕ0⟩= (1/
√
N) N−1
x=0 |x⟩. Show that
U k
f |ϕ0⟩= ak

z∈A
|z⟩+ bk

x̸∈A
|x⟩,
(7.39)
where a0 = b0 = 1/
√
N and
ak = N −d
N
ak−1 + 2(N −d)
N
bk−1
(7.40)
bk = −2d
N ak−1 + N −2d
N
bk−1,
(7.41)
where d = |A|.
The above recursion relations are easily solved to yield
ak =
1
√
d
sin[(2k + 1)θ],
bk =
1
√
N −d cos[(2k + 1)θ],
(7.42)
where
sin θ =
*
d
N ,
cos θ =
*
1 −d
N .
(7.43)
EXERCISE 7.3 Prove Eq. (7.42).
The above solution shows that the application of Uf on |ϕ0⟩k times yields
the state
U k
f |ϕ0⟩=
1
√
d
sin[(2k + 1)θ]

z∈A
|z⟩+
1
√
N −d cos[(2k + 1)θ]

x̸∈A
|x⟩. (7.44)

Grover's Search Algorithm
135
In order to maximize the probability with which the desired ﬁles are ob-
served upon measurements, we have to maximize
PA,k =

z∈A
 1
√
d
sin[(2k + 1)θ]
2
= sin2[(2k + 1)θ].
(7.45)
By repeating the arguments in the previous section, we arrive at the following
conclusions. Suppose d ≪N and deﬁne
m =
+ π
4θ
,
.
(7.46)
Then the probability PA,m with which one of the ﬁles in A is observed in the
state U m
f |ϕ0⟩satisﬁes
PA,m ≥1 −d
N
(7.47)
and, moreover,
m = O(

N/d).
(7.48)
EXERCISE 7.4 Prove Eqs. (7.47) and (7.48).
Implementation of the Grover's algorithm with many search ﬁles is also
given by the quantum circuit in Fig. 7.2 provided that the oracle Rf is properly
modiﬁed.
References
[1] L. K. Grover, Proc. 28th Annual ACM Symposium on the Theory of
Computing, ACM, New York, 212 (1996).
[2] L. K. Grover, Phys. Rev. Lett. 79, 325 (1997).
[3] L. K. Grover, Amer. J. Phys. 69, 769 (2001).
[4] Y. Uesaka, Mathematical Principle of Quantum Computation, Corona
Publishing, Tokyo, in Japanese (2000).
[5] M. A. Neilsen and I. L. Chuang, Quantum Computation and Quantum
Information, Cambridge University Press (2000).


8
Shor's Factorization Algorithm
Shor's factorization algorithm is one of the prime examples in which a quan-
tum computer demonstrates enormous power surpassing its classical counter-
part [1, 2]. Although the factorization algorithm may be carried out with a
classical computer, it takes an exponentially longer time (i.e., practically im-
possible) compared to Shor's quantum algorithm. Shor's algorithm is almost
identical with the classical one; it consists of a sequence of classical steps with
one exception, which is replaced by a quantum algorithm. Our presentation
here closely follows [3] and [4].
Let us ﬁrst consider why factorization of a large number is important.
8.1
The RSA Cryptosystem
The RSA public-key cryptosystem and its variations are widely used to trans-
mit messages over public lines, such as Internet communications, securing the
privacy. It is based on the assumption that
"It takes an enormous time to factor a large integer."
The current chapter is written with a PC with a 1.4 GHz Pentium M CPU.
The table below shows how long it takes for this PC to factor a large integer
N by using FactorInteger commmand of Mathematica;
N
time[s]
45878443254366745
0.02
7536576836238936804738907362515346578697687343
3.084
753657683628743673389368047389675407362518902115346578697687 98.88
As the number of digits grows up, it takes more and more time to factorize an
integer. Readers who are interested in challenging large number factorization
should visit the RSA Security website
http://www.rsasecurity.com/rsalabs/node.asp?id=2092
Factorization of a 617-digit decimal number is worth a $200,000 reward!
It should be noted that it is easier to verify whether a number is prime or
not [5], but it is very diﬃcult to ﬁnd the factors of a big number. The RSA
cryptography [6] makes use of this fact to encode and decode messages.
137

138
QUANTUM COMPUTING
Let us start with an example. Bob wants to send Alice a message through
a public communication channel. He encrypts his message with a key Alice
publicizes. Although the key is publicly available, Alice is the only person
who can decode the message.
1. Alice prepares two large prime numbers p and q, which she keeps secret
and publishes the product N of them. We use the following example
here:
p = 9281013205404131518475902447276973338969
and
q = 9591715349237194999547050068718930514279,
for which
N = 89020836818747907956831989272091600303613264603794247
032637647625631554961638351.
It takes quite long (in practical situations with more digits for N) to
factor N into p and q. Alice also prepares a number called an exponent
e (< N), which is relatively prime to (p −1)(q −1). She can easily ﬁnd
such a number:
e = 1234567, gcd[e, (p −1)(q −1)] = 1,
for example. This number e is also published along with N. She then
calculates the modular inverse d of e mod (p −1)(q −1):
de ≡1 mod (p −1)(q −1) →
d = 378539914571696887228359644724123026498967098699116993
55437019132668645737270799.
Alice keeps d secret.
2. Bob wants to send Alice a message, "hello," for example. This mes-
sage is transformed into a sequence of decimal numbers less than N
under a certain scheme (ASCII etc.). Suppose his scheme transforms
the message as
hello →123000456000789000123,
for example. He encodes his message as helloe mod N and sends Alice
the result through an open channel:
encrypted = helloe mod N
= 378539914571696887228359644724123026498967098699
11699355437019132668645737270799.

Shor's Factorization Algorithm
139
3. Alice now decodes the message she received, using d, as
encryptedd mod N = 123000456000789000123.
We outline how the RSA system works below. Readers who are eager to
proceed to Shor's algorithm may skip this part and jump to the next section.
Let us start with Fermat's little theorem.
THEOREM 8.1 Let p be an odd prime number and a be any positive in-
teger which is not a multiple of p. Then
ap−1 ≡1 mod p.
(8.1)
Proof. First we prove the congruence
mp −m ≡0 mod p
(8.2)
for any m ∈N by induction. Equation (8.2) is true for m = 1. Let (8.2) be
satisﬁed with m = k. Then we obtain for m = k + 1
(k + 1)p −(k + 1) = kp +
p
1

kp−1 +
p
2

kp−2 + . . . +

p
p −1

k −k
≡kp −k mod p,
where we noted that
 p
k
!
is a multiple of p for any k satisfying 1 ≤k ≤p −1.
Since we assumed kp −k ≡0 mod p, we obtain (k + 1)p −(k + 1) ≡0 mod p.
Now let m = a and write Eq. (8.2) as ap −a = a(ap−1 −1) ≡0 mod p.
Since a is not divisible by p by assumption, ap−1 −1 must be divisible by p.
In other words, ap−1 −1 ≡0 mod p, and Eq. (8.1) has been proved.
Suppose N = pq, p and q being primes, and e (1 < e < (p −1)(q −1)) is
the encryption exponent which is coprime to (p −1)(q −1) as was assumed
previously. The modular inverse d of e satisﬁes de ≡1 mod (p −1)(q −1) and
1 < d < (p −1)(q −1). Let m (< N) be a message to be encrypted using the
public key e as mencrypted ≡me mod N. Decryption is possible only with the
secret key d since
md
encrypted = mde ≡m mod N.
In fact, the congruence de ≡1 mod (p −1)(q −1) leads to de = s(p −1)(q −
1) + 1 (s ∈N) and
mde = ms(p−1)(q−1)+1 = m
#
ms(q−1)$p−1
.
Now suppose m is not a multiple of p. Then Fermat's little theorem asserts
that

ms(q−1)p−1 ≡1 mod p. If m is a multiple of p, then mde ≡0 mod p.
By making a trade of p for q, we obtain [ms(p−1)]q−1 ≡1 mod q if q does not

140
QUANTUM COMPUTING
divide m, while mde ≡0 mod q if q divides m. Since p and q are prime, these
equalities imply mde ≡m mod N.
The RSA cryptosystem depends heavily on the belief that factorization of a
large number into its prime factors is practically impossible. Shor's algorithm
would demolish this myth, as we will see below.
8.2
Factorization Algorithm
Let p and q be prime numbers and let N = pq. We want to factor N into a
product of p and q. A naive method for the factorization takes
√
N trials, in
the worst case, before p and q are found. Since
√
N = e(r/2) ln 2 for N = 2r,
this method is ineﬃcient. It turns out that the following algorithm is best
suited for our purpose.
STEP 1 Take a positive integer m less than N randomly. Calculate the greatest
common divisor gcd(m, N) by the Euclidean algorithm. If gcd(m, N) ̸=
1, we are extremely lucky: m is either p or q, and we are done. Suppose
gcd(m, N) = 1.
STEP 2 Deﬁne fN : N →N by a 	→ma mod N. Find the smallest P ∈N, such
that mP ≡1 mod N. The number P is called the order or period.
It is known that this takes exponentially large steps in any classical
algorithm, but it takes only polynomial steps in Shor's algorithm. A
quantum computer is required only in this step, and the rest may be
executed in polynomial steps even with a classical computer.
STEP 3 If P is odd, it cannot be used in the following steps. Go back to step 1
and repeat the above steps with diﬀerent m until an even P is obtained.
If P is even, proceed to step 4.
STEP 4 Since P is even, it holds that
(mP/2 −1)(mP/2 + 1) = mP −1 ≡0 mod N.
(8.3)
If mP/2 + 1 ≡0 mod N, then gcd(mP/2 −1, N) = 1; go back to step 1
and try with diﬀerent m. If mP/2 + 1 ̸≡0 mod N, mP/2 −1 contains
either p or q, and we proceed to step 5. Note that the number mP/2 −1
cannot be a multiple of N in the latter case. If this is the case, it leads
to mP/2 ≡1 mod N, which contradicts the assumption that P is the
smallest number which satisifes mP ≡1 mod N.
STEP 5 The number
d = gcd(mP/2 −1, N)
(8.4)
is either p or q, and factorization is done.

Shor's Factorization Algorithm
141
EXAMPLE 8.1 An example will clarify the above steps. Let N = 799 =
17 · 47.∗
STEP 1: The choice m = 7 leads to gcd(799, 7) = 1. So this is OK.
STEP 2: It follows from Fig. 8.1 that 7368 ≡1 mod 799. Thus P = 368.
Of course we have cheated here and a quantum computer must be used for a
large N.
STEP 3: The order thus found is even: P/2 = 184. Let us proceed to step 4.
STEP 4: (7184 −1)(7184 + 1) ≡0 mod 799. It is easy to see that
gcd(7184 + 1, 799) = 17 ̸= 1,
and we proceed to step 5.
STEP 5: 7184 −1 and N = 799 must have a common prime factor. Indeed,
it is found that d = gcd(7184 −1, 799) = 47. It is also found that 799/47 = 17,
which leads to 799 = 47 · 17.
EXERCISE 8.1 Let N = 35. Repeat the above steps to ﬁnd the factors
of N. (There are m whose orders are less than 10. If your m does not give
P < 10, try another m. Good luck!)
It should be emphasized again that a quantum computation is required only
in step 2, where the order P of the function f : N →Z/NZ (a 	→ma mod N)
must be found. Here Z/NZ stands for the set of equivalence classes in which
x and x + kN (k ∈Z) are identiﬁed.
Clearly, we may take x satisfying
0 ≤x ≤N −1 as a representative of each equivalence class.†
8.3
Quantum Part of Shor's Algorithm
8.3.1
Settings for STEP 2
Let N = pq ∈N be a number to be factored, where p and q are primes. Find
n ∈N, such that
N 2 ≤2n < 2N 2.
(8.5)
Let us write Q = 2n hereafter. Denote f : a 	→ma mod N restricted on
Sn = {0, 1, . . ., Q −1}
(8.6)
∗This example is repeatedly studied in due course.
†In fact x = 0 is omitted since m and N are coprime to each other.

142
QUANTUM COMPUTING
FIGURE 8.1
(a) Graph of 7x mod 799. (b) The same graph as (a) with the range 0 ∼10.
The point encircled is at x = 368, which shows that P = 368 is the smallest
positive integer satisfying 7P ≡1 mod 799.

Shor's Factorization Algorithm
143
by the same symbol f : Sn →Z/NZ.‡.
Our quantum computer has two n-qubit registers which we call |REG1⟩and
|REG2⟩:
|REG1⟩|REG2⟩= |a⟩|b⟩= |an−1 . . . a1a0⟩|bn−1 . . . b1b0⟩,
(8.7)
where decimal numbers a, b ∈Sn are expressed in binary numbers in the RHS;
a =
n−1

j=0
aj2j, b =
n−1

j=0
bj2j.
In the following, extensive use of QFT will be made on an n-qubit system,
which is given by
|x⟩→UQFTn|x⟩=
1
√Q
Q−1

y=0
ω−xy
n
|y⟩,
(8.8)
where x, y ∈Sn and ωn = exp(2πi/Q). We will denote UQFTn by F hereafter.
8.3.2
STEP 2
Let us have a closer look at step 2.
STEP 2.0: Set the registers to the initial state
|ψ0⟩= |REG1⟩|REG2⟩= | 00 . . .0
. /0 1
n qubits
⟩| 00 . . . 0
. /0 1
n qubits
⟩.
(8.9)
STEP 2.1: The QFT F is applied on the ﬁrst register;
|ψ0⟩= |0⟩|0⟩
F⊗I
	→|ψ1⟩=
1
√Q
Q−1

x=0
|x⟩|0⟩.
(8.10)
The ﬁrst register is in a superposition of all the states |x⟩(0 ≤x ≤Q −1),
as remarked in Chapter 6.
STEP 2.2: Let us deﬁne a function f : Sn →Z/NZ by
f(x) = mx mod N,
x ∈Sn.
(8.11)
Suppose that the unitary gate Uf realizes the action of f on x in such a way
that Uf|x⟩|0⟩= |x⟩|f(x)⟩. Apply Uf on the state prepared in step 2.1 to yield
Uf|ψ1⟩= |ψ2⟩≡
1
√Q
Q−1

x=0
|x⟩|f(x)⟩.
(8.12)
‡It is clear that the range of f is Z/NZ since 0 ≤f(x) ≤N −1 ≤√Q−1 < Q−1, ∀x ∈Sn.

144
QUANTUM COMPUTING
This shows that the two registers are entangled in general.
STEP 2.3: Apply QFT on |REG1⟩again to yield
|ψ3⟩= (F ⊗I)|ψ2⟩= 1
Q
Q−1

x=0
Q−1

y=0
ω−xy
n
|y⟩|f(x)⟩
= 1
Q
Q−1

y=0
|y⟩|Υ(y)⟩= 1
Q
Q−1

y=0
∥|Υ(y)⟩∥· |y⟩|Υ(y)⟩
∥|Υ(y)⟩∥,
(8.13)
where
|Υ(y)⟩=
Q−1

x=0
ω−xy
n
|f(x)⟩.
(8.14)
STEP 2.4: |REG1⟩is measured. The result y ∈Sn is obtained with the
probability
Prob(y) = ∥|Υ(y)⟩∥2
Q2
,
(8.15)
and, at the same time, the state collapses to
|y⟩|Υ(y)⟩
∥|Υ(y)⟩∥.
The measurement process generates a random variable following a classical
probability distribution S over Sn, in which "symbols" y ∈Sn are generated
with the probability (8.15).
STEP 2.5: Extract the order P from the measurement outcome.
EXERCISE 8.2 Let N = 21 and m = 11. Find n which satisifes Eq. (8.5).
Find also the order P.§ Repeat the above steps to ﬁnd the wave function |ψ3⟩
and Prob(y) (y ∈Sn).
8.4
Probability Distribution
Let us study the probability distribution Prob(y) in detail.
§The order is less than 10 in this case.

Shor's Factorization Algorithm
145
PROPOSITION 8.1 Let Q = 2n = Pq + r, (0 ≤r < P), where q and r
are uniquely determined non-negative integers. Let Q0 = Pq. Then
Prob(y) =
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎩
r sin2 
πP y
Q

Q0
P + 1

+ (P −r) sin2 
πP y
Q · Q0
P

Q2 sin2 
πP y
Q

(Py ̸≡0 mod Q)
r(Q0 + P)2 + (P −r)Q2
0
Q2P 2
(Py ≡0 mod Q).
Proof. It is found from the deﬁnition that¶
|Υ(y)⟩=
Q−1

x=0
ω−xy|f(x)⟩=
Q0−1

x=0
ω−xy|f(x)⟩+
Q−1

x=Q0
ω−xy|f(x)⟩
=
P −1

x0=0
Q0/P −1

x1=0
ω−(P x1+x0)y|f(Px1 + x0)⟩
+
r−1

x0=0
ω−[P (Q0/P )+x0]y|f(P(Q0/P) + x0)⟩
=
P −1

x0=0
ω−x0y
⎛
⎝
Q0/P −1

x1=0
ω−P x1y
⎞
⎠|f(x0)⟩+
r−1

x0=0
ω−x0yω−P y(Q0/P )|f(x0)⟩
=
r−1

x0=0
ω−x0y
Q0/P −1

x1=0
ω−P yx1|f(x0)⟩
+
P −1

x0=r
ω−x0y
Q0/P −1

x1=0
ω−P yx1|f(x0)⟩+
r−1

x0=0
ω−x0yω−P y(Q0/P )|f(x0)⟩
=
r−1

x0=0
ω−x0y
⎛
⎝
Q0/P

x1=0
ω−P yx1
⎞
⎠|f(x0)⟩
+
P −1

x0=r
ω−x0y
⎛
⎝
Q0/P −1

x1=0
ω−P yx1
⎞
⎠|f(x0)⟩.
Note that the map f : a 	→ma mod N is 1 : 1 on {0, 1, 2, . . ., P −1}, which we
prove now. Suppose ma ≡mb mod N (a > b); then mb(ma−b−1) ≡0 mod N.
Since m and N are coprime, so are mb and N. Then mP > ma−b ≡1 mod
N, which contradicts the assumption that P is the smallest natural number
such that mP ≡1 mod N. This implies that |f(0)⟩, |f(1)⟩, . . . , |f(P −1)⟩are
¶We drop n from ωn to simplify our notation.

146
QUANTUM COMPUTING
mutually orthogonal. Accordingly
⟨Υ(y)|Υ(y)⟩= r
------
Q0/P

x1=0
ω−P yx1
------
2
+ (P −r)
------
Q0/P −1

x1=0
ω−P yx1
------
2
.
In case Py ≡0 mod Q, we put Py = aQ, a ∈N and obtain
ω−P yx1 = e−2πi(P y/Q)x1 = e−2πiax1 = 1.
Therefore
⟨Υ(y)|Υ(y)⟩= r ·
Q0
P + 1
2
+ (P −r)
Q0
P
2
,
which leads to the result independent of y,
Prob(y) = r(Q0 + P)2 + (P −r)Q2
0
P 2Q2
= r(q + 1)2 + (P −r)q2
Q2
.
(8.16)
If Py ̸≡0 mod Q, on the other hand, we obtain
⟨Υ(y)|Υ(y)⟩= r
----
ω−P y(Q0/P +1) −1
ω−P y −1
----
2
+ (P −r)
----
ω−P y(Q0/P ) −1
ω−P y −1
----
2
= r
----
e−(2πi/Q)P y(Q0/P +1) −1
e−(2πi/Q)P y −1
----
2
+ (P −r)
----
e−(2πi/Q)P y(Q0/P ) −1
e−(2πi/Q)P y −1
----
2
.
Here we ﬁnd from
|eiθ −1|2 = 2(1 −cos θ) = 4 sin2 θ
2
that
⟨Υ(y)|Υ(y)⟩= r
sin2 π
QPy
Q0
P + 1

sin2 π
QPy
+ (P −r)
sin2 π
QPy Q0
P
sin2 π
QPy
.
Therefore, the probability distribution is given by
Prob(y) = ∥|Υ(y)⟩∥2
Q2
=
r sin2
 π
QPy
Q0
P + 1

+ (P −r) sin2
 π
QPy Q0
P

Q2 sin2 π
QPy
,
(8.17)
which proves the proposition.

Shor's Factorization Algorithm
147
COROLLARY 8.1 Suppose Q/P ∈Z (namely Q0 = Q). Then the proba-
bility of obtaining a measurement outcome y is
Prob(y) =
⎧
⎪
⎨
⎪
⎩
0
(Py ̸≡0 mod Q)
1
P (Py ≡0 mod Q)
Proof. When Py ̸≡0 mod Q, r = 0 implies Q = Pq. Therefore
Prob(y) = P sin2 πy
Q2 sin2 πy
q
= 0.
In case Py ≡0 mod Q, we obtain
Prob(y) = PQ2
Q2P 2 = 1
P .
Figure 8.2 shows the probability distribution Prob(y) with the parameters
N = 799 = 17 · 47, P = 368, Q = 220 = 1, 048, 576. Note that N 2 = 638, 401
and 2N 2 = 1, 276, 802 so that they satisfy N 2 ≤Q < 2N 2.
Then Q ≡
144 mod 368 →r = 144, Q0 = Q −r = 1, 048, 432, →q = Q0/P = 2849.
Accordingly, Prob(y) exhibits sharp peaks at integral multiples of q = 2849.
Figure 8.3 shows Prob(y) for 8, 520 < y < 8, 580. Observe that it has a sharp
peak at y = 8548, for which 8548/2849 = 3.00035. Compare the numbers
Prob(8547) = 0.00005393, Prob(8548) = 0.00245753, Prob(8549) = 0.00010892.
For neighboring numbers, we obtain 8547/2849 = 3 and 8549/2849 = 3.0007.
Note that there are P = 368 sharp peaks, and Prob(y) at each peak is roughly
on the order of 1/386 ∼0.00272.
Since y is restricted within the range 0 ≤y ≤Q−1, repeated measurements
reveal that the minimal distance between the peaks is ∼2849, which yields
the approximate order P = Q/2849 ∼368.0505. The order thus obtained is
probabilistic, and its plausibility must be checked by carrying out step 3 ∼
step 5. Needless to say, this strategy is not practical when N is considerably
large. There is a powerful method of continued fraction expansion by which
we ﬁnd the order P with a single measurement of the ﬁrst register, which is
the subject of §8.5.
It will be shown that factorization of a number N = pq is carried out
eﬃciently by a quantum computer. A quantum algorithm is employed to ﬁnd
the order of the function f(x) = mx mod N, and the other steps are done
with classical algorithms. The quantum circuit in Fig. 8.4 implements the
quantum part of the algorithm where Uf and F stand for the map
Uf|x⟩|0⟩= |x⟩|mx mod N⟩

148
QUANTUM COMPUTING
FIGURE 8.2
(a) Probability distribution Prob(y) for 0 ≤y ≤10, 000. (b) Same graph for
the range 100, 000 ≤y ≤110, 000.
and the QFT, respectively.
It is instructive to recollect step 2 with our example of 799 = 17 · 47, for
which n = 20. We take m = 7 as before.
STEP 2.0: The initial state is
|ψ0⟩= |0⟩|0⟩.
(8.18)
STEP 2.1: The QFT on the ﬁrst register results in
|ψ1⟩=
1
√Q
Q−1

x=0
|x⟩|0⟩,
(8.19)

Shor's Factorization Algorithm
149
FIGURE 8.3
Probability distribution Prob(y) for 8, 520 ≤y ≤8, 580.
FIGURE 8.4
Quantum circuit to ﬁnd the order of f(x) = mx mod N.
where Q = 220 = 1048576.
STEP 2.2: Application of Uf on |ψ1⟩produces
|ψ2⟩=
1
√Q
Q−1

x=0
|x⟩|7x mod 799⟩
=
1
√Q
#
|0⟩|1⟩+ |1⟩|7⟩+ |2⟩|49⟩+ |3⟩|343⟩+ |4⟩|4⟩+ |5⟩|28⟩
+ . . . + |368⟩|1⟩+ |369⟩|7⟩+ |370⟩|49⟩+ . . .
+|Q −2⟩|756⟩+ |Q −1⟩|498⟩
$
.
(8.20)
Note that there are only P = 368 diﬀerent states in the second register.
STEP 2.3: The QFT with ω = e2πi/Q, Q = 2n, is applied to the ﬁrst register.
This results in
|ψ3⟩=
1
√Q
Q−1

x=0
1
√Q
Q−1

y=0
ω−xy|y⟩|7x mod 799⟩

150
QUANTUM COMPUTING
≡1
Q
Q−1

y=0
|y⟩|Υ(y)⟩,
(8.21)
where
|Υ(y)⟩=
Q−1

x=0
ω−xy|7x mod 799⟩
=
Q−1

x=0
e−2πixy/Q|7x mod 799⟩
= |1⟩+ ω−y|7⟩+ ω−2y|49⟩+ ω−3y|343⟩+ . . .
+ω−368y|1⟩+ ω−369y|7⟩+ ω−370y|49⟩+ ω−371y|343⟩+ . . .
+ . . . +
+ω−736y|1⟩+ ω−737y|7⟩+ ω−738y|49⟩+ ω−739y|343⟩+ . . .
+ . . . +
+ω−1048432y|1⟩+ ω−1048433y|7⟩+ ω−1048434y|49⟩+ ω−1048435y|343⟩
. . . + ω−1048575y|498⟩
= (1 + ω−368y + ω−736y + . . . + ω−1048432y)|1⟩
+(ω−y + ω−369y + ω−737y + . . . + ω−1048433y)|7⟩
+(ω−2y + ω−370y + ω−738y + . . . + ω−1048434y)|49⟩
+(ω−3y + ω−371y + ω−739y + . . . + ω−1048435y)|343⟩
+ . . .
+(ω−87y + ω−455y + ω−823y + . . .)|794⟩.
(8.22)
There are 368 ket vectors in the above expansion. The coeﬃcient of each
vector becomes sizeable when and only when y is approximately a multiple of
2849. For example,
2849

k=0
ω−368ky = 0.608696 + 0.000262611i,
-----
2849

k=0
ω−368ky
----- = 0.608696
for y = 1 while
2849

k=0
ω−368ky = 2315.79 + 1408.03i,
-----
2849

k=0
ω−368ky
----- = 2710.25
for y = 8548. The previous result is recovered as
Prob(8548) = 368
2710.25
Q
2
= 0.00245848.
(8.23)
The order P may be inferred by repeating measurements. However, the
number of measurements required to guess P grows rapidly as N becomes
larger and larger. We certainly need a technique with which we may ﬁnd P
with a single measurement, which is the subject of the next section.

Shor's Factorization Algorithm
151
8.5
Continued Fractions and Order Finding
We introduce a few symbols.
For ∀x ∈R, we deﬁne the ceiling ⌈x⌉=
inf{n ∈Z|x ≤n}. In other words, ⌈x⌉= n, where n −1 < x ≤n. For
example, ⌈2⌉= 2, ⌈2.6⌉= 3, ⌈−4.5⌉= −4 and ⌈−5⌉= −5. Similarly the
ﬂoor is deﬁned as ⌊x⌋= sup{n ∈Z|n ≤x} for ∀x ∈R. The ﬂoor function
⌊x⌋is also called the integer part of x. For example, ⌊4.5⌋= 4, ⌊2⌋= 2 and
⌊−4.7⌋= −5. The ﬂoor function has been already introduced in §6.4.
Let us consider continued fraction expansion of a rational number.
Continued fraction expansion exists also for an irrational number, but it does
not terminate. The continued fraction expansion of x ∈Q is
x = a0 +
1
a1 +
1
a2 +
1
. . . + 1aq
,
(8.24)
where ai ∈N for j ≥1. This number is also written as
x = [a0, a1, . . . , aq].
(8.25)
Let us consider x = 17/47, for example. x is written in a continued fraction
form as
17
47 = 0 + 1
47
17
= 0 +
1
2 + 13
17
= 0 +
1
2 +
1
1 + 4
13
= 0 +
1
2 +
1
1 +
1
3 + 1
4
= [0, 2, 1, 3, 4].
Let us summarize what we have done to obtain this expansion.
We ﬁrst
ﬁnd the integer part of x as a0 = ⌊17/47⌋= 0 and the fractional part as
r0 = x −a0 = 17/47. We invert 17/47 and ﬁnd that the integral part of 1/r0
is a1 = ⌊1/r0⌋= ⌊47/17⌋= 2, and the fractional part is r1 = 1/r0 −⌊1/r0⌋=
13/17. The interger part of 1/r1 is a2 = ⌊1/r1⌋= 1, and the fractional part
is r2 = 1/r1 −⌊1/r1⌋= 4/13. The integer part of 1/r2 is ⌊1/r2⌋= 3, and the
fractional part is r3 = 1/r2 −⌊1/r2⌋= 1/4. The expansion terminates when
rj has the numerator 1 (j = 3 in the present example).
EXERCISE 8.3 Find the continued fraction expansions of x = 61/45 and
x = 121/13.
The algorithm to obtain a continued fraction expansion is summarized as

152
QUANTUM COMPUTING
1. Let x be a rational number to be expanded. Let a0 = ⌊x⌋and r0 =
1/x −a0.
2. Let m = 1 and set am =
3
1
rm−1
4
and rm =
1
rm−1
−am. Repeat this
step until rM = 0 is reached. M is always ﬁnite when x is a rational
number.
3. The continued fraction expansion of x is
x = a0 +
1
a1 +
1
a2 +
1
...
1
aM−1 + 1
aM
= [a0, a1, . . . , aM−1, aM].
Given x = [a0, a1, . . . , aM], the continued fraction [a0, a1, . . . , aj] (j ≤M)
is called the jth convergent of x. The Mth convergent is x itself. Note that
[a0, a1, . . . , aM] = [a0, a1, . . . , aM −1, 1]. Thus the number M may be made
either even or odd.
With the above preliminaries, we come back to Shor's algorithm. Suppose
y is obtained upon the measurement of the ﬁrst register in Shor's algorithm.
Then y/Q is a rational number close to n/P with some n ∈N. Now we show
that the following algorithm ﬁnds the order P of mx mod N.
1. Find the continued fraction expansion [a0, a1, . . . , aM] of y/Q. We al-
ways have a0 = 0 since y/Q < 1.
2. Let p0 = a0 and q0 = 1.
3. Let p1 = a1p0 + 1 and q1 = a1q0.
4. Let pi = aipi−1 + pi−2 and qi = aiqi−1 + qi−2 for 2 ≤i ≤M. We
obtain the sequence (p0, q0), (p1, q1), . . . , (pM, qM). It is shown below
that pj/qj is the jth convergent of y/Q.
5. Find the smallest k (0 ≤k ≤M) such that |pk/qk −y/Q| ≤1/(2Q).
Such k is unique.
6. The order is found as P = qk.
EXAMPLE 8.2 Let us consider our favorite example. Let N = 799, Q =
220 = 1048576 and m = 7. The error bound is 1/(2Q) = 4.76837 × 10−7.
Suppose we obtain y = 8548 as a measurement outcome of the ﬁrst register.
We expect that y/Q is an approximation of n/P for some n ∈N.
1. The continued fraction expansion of 8548/1048576 is [0, 122, 1, 2, 44, 5, 3]
and M = 6.

Shor's Factorization Algorithm
153
2. Let p0 = a0 = 0 and q0 = 1.
3. We obtain p1 = a1p0+1 = 122×0+1 = 1 and q1 = a1q0 = 122×1 = 122.
We ﬁnd |p1/q1 −y/Q| = |1/122 −8548/1048576| = 4.47133 × 10−5 >
1/(2Q).
4. p2 = a2p1 + p0 = 1, q2 = a2q1 + q0 = 123 and |p2/q2 −y/Q| = |1/123 −
8548/1048576| = 2.19 × 10−5 > 1/(2Q).
5. p3 = a3p2 + p1 = 3, q3 = a3q2 + q1 = 368 and |p3/q3 −y/Q| = |3/368 −
8548/1048576| = 1.65856 × 10−7 ≤1/(2Q). We have obtained k = 3.
6. The order is found to be P = q3 = 368.
EXERCISE 8.4 Suppose y = 37042 is the measurement outcome in the
above example. Find the order P by repeating the above algorithm. Suppose
y = 65536 has been obtained in the next measurement. Apply the above
algorithm. What is the "order" you ﬁnd?
We must know when we obtain the correct order and when not. Here is the
suﬃcient condition.
The correct order P is obtained in the above algorithm when the measure-
ment outcome y belongs to the set
C =

y
----∃d ∈{1, 2, . . ., P −1},
----
d
P −y
Q
---- ≤1
2Q, gcd(P, d) = 1
5
.
(8.26)
The set C is not an empty set. In fact, for any P < Q there always exists
y ∈{0, 1, 2, . . ., Q −1} such that −P/2 < Q −yP ≤P/2, from which we
obtain
----
1
P −y
Q
---- ≤1
2Q.
Therefore, the set C contains at least one element y, for which d/P = 1/P. It
is important to note that it is impossible to tell whether a particular outcome
y is in C or not since P is not known in advance.
Let us look at the second case y = 65536 in the exercise above. Although
we verify that |23/368 −65536/Q| = 0, we also have gcd(368, 23) = 23. The
next smallest |d/P −y/Q| is attained when d = 22 and d = 24, for which case
|d/368 −65536/Q| = 0.00271 > 1/(2Q). Therefore an integer d ∈C does not
exist for this case.
We outline the proof of the factor-ﬁnding algorithm based on the contin-
ued fraction expansion. We have y/Q = [a0, a1, . . . , aM] in our mind in the
following lemmas.

154
QUANTUM COMPUTING
LEMMA 8.1 The sequences a0, a1, . . . , aM and (p0, q0), (p1, q1), . . . , (pM, qM)
obtained in the algorithm introduced in this section satisfy
[a0] = p0
q0
, [a0, a1] = p1
q1
, . . . , [a0, a1, . . . , aM] = pM
qM
.
(8.27)
Proof. We prove this by induction. It is easily veriﬁed that [a0] = p0/q0 and
[a0, a1] = p1/q1. Suppose [a0, a1, . . . , ak] = pk/qk. Then
[a0, a1, . . . , ak, ak+1] = [a0, a1, . . . , ak + 1/ak+1]
= (ak + 1/ak+1)pk−1 + pk−2
(ak + 1/ak+1)qk−1 + qk−2
= ak+1(akpk−1 + pk−2) + pk−1
ak+1(akqk−1 + qk−2) + qk−1
= ak+1pk + pk−1
ak+1qk + qk−1
= pk+1
qk+1
.
LEMMA 8.2 All the fractions p1/q1, p2/q2, . . . , pM/qM are irreducible.
Proof. We ﬁrst prove
pk−1qk −qk−1pk = (−1)k
(8.28)
for 1 ≤k ≤M by induction.
This is obviously satisﬁed for k = 1 since
p0q1 −q0p1 = 0 −1 and for k = 2 since p1q2 −q1p2 = (a1a2 + 1) −a1a2 = 1.
Suppose pk−2qk−1 −qk−2pk−1 = (−1)k−1 is satisﬁed. Then
pk−1qk −qk−1pk = pk−1(akqk−1 + qk−2) −qk−1(akpk−1 + pk−2)
= pk−1qk−2 −qk−1pk−2 = (−1)k.
Now suppose pk and qk are not coprime and let gcd(pk, qk) = dk ≥2. Put
pk = dkp′
k and qk = dkq′
k, where gcd(p′
k, q′
k) = 1. Then pk−1qk −qk−1pk =
dk(pk−1q′
k −qk−1p′
k) = (−1)k. The second equality is a contradiction since
dk ≥2.
LEMMA 8.3 Let p and q be positive integers such that gcd(p, q) = 1 and x
be a positive rational number. The rational number p/q is a convergent of x
if they satisfy the inequality
----
p
q −x
---- ≤
1
2q2 .
(8.29)
Proof. Let p/q = [a0, a1, . . . , am]. We assume, without loss of generality, that
m is even. Note that p = pm and q = qm.

Shor's Factorization Algorithm
155
Let δ = 2q2(x −p/q). We ﬁnd |δ| ≤2q2/(2q2) = 1 by assumption. The
statement of the lemma is trivial when δ = 0. Suppose 0 < δ ≤1. (Redeﬁne
δ by −δ if δ < 0.) There is a rational number α such that
x = αpm + qm−1
αqm + qm−1
= [a0, a1, . . . , am, α].
The condition α ≥1 must be satisﬁed for [a0, a1, . . . , am, α] to be a continued
fraction expansion of x. By inverting the above relation, we obtain
α = pm−1 −xqm−1
xqm −pm
= 2qm(pm−1 −xqm−1)
δ
= 2(pm−1qm −qm−1pm)
δ
−qm−1
qm
.
It has been shown in the proof of Lemma 8.2 that pm−1qm −qm−1pm = 1 for
an even m, from which we obtain α = 2/δ −qm−1/qm > 1, where we noted
0 < δ ≤1 and qm > qm−1. Therefore α has a continued fraction expansion
[b0, . . . , bn] with b0 ≥1 and we obtain x = [a0, . . . , am, b0, . . . , bn], from which
p/q = [a0, . . . , am] is shown to be a convergent of x.
We note that the above lemma does not claim the uniqueness of the con-
vergent p/q = pm/qm. There may be many convergents pk/qk of x, which
satisify
----
pk
qk
−x
---- ≤
1
2q2
k
.
It simply claims that a rational number p/q satisfying |p/q−x| ≤1/2q2 is one
of the convergents of x. It should be also noted that there may be convergents
of x, which do not satisfy the above inequality.
LEMMA 8.4 For a given N, a measurement outcome y and Q, such that
N 2 ≤Q < 2N 2, there exists a unique rational number d/P such that 0 <
P < N and
----
d
P −y
Q
---- ≤1
2Q.
(8.30)
Proof. Suppose there are two sets of (d, P) satisfying this condition, which we
call (d1, P1) and (d2, P2). Then we ﬁnd
----
d1
P1
−d2
P2
---- =
----
d1
P1
−y
Q + y
Q −d2
P2
----
≤
----
d1
P1
−y
Q
---- +
----
y
Q −d2
P2
---- ≤1
2Q + 1
2Q = 1
Q ≤
1
N 2 .
It follows from Pi < N that
1
N 2 ≥
----
d1
P1
−d2
P2
---- = |d1P2 −d2P1|
P1P2
> |d1P2 −d2P1|
N 2
,
from which we obtain |d1P2 −d2P1| < 1, namely d1P2 = d2P1 = 0.

156
QUANTUM COMPUTING
Now we are ready to justify the order-ﬁnding algorithm.
PROPOSITION 8.2 Suppose y ∈C.
Then the number P obtained by
the algorithm in this section is the correct order of the modular exponential
function mx mod N.
Proof. Let [a0, a1, . . . , aM] be the continued fraction expansion of y/Q. Since
y ∈C, there exists d ∈{1, 2, . . ., P −1} such that
gcd(P, d) = 1,
----
d
P −y
Q
---- ≤1
2Q.
Such d must be unique due to Lemma 8.4. By noticing that P < N and
P 2 < N 2 ≤Q, we also obtain
----
d
P −y
Q
---- ≤1
2Q ≤
1
2N 2 <
1
2P 2 .
It then follows from Lemma 8.3 that d/P is one of the convergents of y/Q =
[a0, a1, . . . , aM]. Let us call this convergent pm/qm.
Now we show that this m is the smallest k which satisﬁes
----
pk
qk
−y
Q
---- ≤1
2Q.
It is obvious that this inequality is satisﬁed for any pk/qk such that m ≤k ≤
M. However, Lemma 8.4 tells us that there is only one pk/qk which satisﬁes
qk < N and the above inequality. Therefore qk > N for k > m and we have
shown d/P = pm/qm. Since gcd(d, P) = gcd(pm, qm) = 1 due to Lemma 8.2,
we must have qm = P.
In summary, a single measurement of the ﬁrst register provides the correct
order if the measurement outcome y belongs to the set C. We have seen in
Example 8.2 that y = 8548 satisﬁes |3/P −y/Q| ≤1/(2Q) and hence y ∈C.
It should be kept in mind that P, and hence C, is not known in advance.
8.6
Modular Exponential Function
The block diagram of the quantum circuit to ﬁnd the order of f(x) = mx mod
N is depicted in Fig. 8.4. It has been shown in §6.4 that an n-qubit QFT
circuit may be implemented with Θ(n2) elementary gates. We now work out
the implementation of the other component in Shor's algorithm, the modular
exponential function,
Uf|x⟩|0⟩= |x⟩|mx mod N⟩.

Shor's Factorization Algorithm
157
There are several proposals for the implementation of this function; some save
computational steps while the other saves the number of qubits required. Here
we follow the standard implementation given in [7] and [4].
Implementation of a modular exponential function is divided into several
steps. We need to implement
1. Adder, which outputs a + b given non-negative integers a and b.
2. Modular adder, which outputs a + b mod N.
3. Modular multiplexer, which outputs ab mod N.
4. Modular exponential function, which outputs mx mod N.
8.6.1
Adder
Let a = an−12n−1 +an−22n−2 +. . .+a12+a0 and b = bn−12n−1 +bn−22n−2 +
. . .+b12+b0 be non-negative integers and s = sn2n+sn−12n−1+. . .+s12+s0
be their sum. Let ck denote the carry bit. The binary numbers sk satisfy the
following recursion relations,
s0 = a0 ⊕b0, c0 = a0b0, sk = ak ⊕bk ⊕ck−1,
ck = akbk ⊕akck−1 ⊕bkck−1,
(1 ≤k ≤n),
(8.31)
where ⊕is addition mod 2, akbk = ak ∧bk and we formally put an = bn = 0.
Note that sn = cn−1. Carry bit ck is 1 only when at least two of ak, bk and
ck−1 are 1. This condition is expressed in the ﬁnal relation in Eq. (8.31).
It is instructive to examine how two-digit numbers are added quantum
mechanically. Let a = a12+a0 and b = b12+b0, for which s = s222 +s12+s0.
It follows from Eq. (8.31) that
s0 = a0 ⊕b0, c0 = a0b0, s1 = a1 ⊕b1 ⊕a0b0,
s2 = c1 = a1b1 ⊕a0b0(a1 ⊕b1).
(8.32)
Now we want to implement a quantum circuit, which we call ADD(2), carrying
out the above algebra. Our implementation is generalized to an n-qubit adder
ADD(n) subsequently. We have to align qubits in such a way that the gate
acts on them in a nice way. It turns out that the following order is the most
convenient one in our implementation;
ADD(2)|0, a0, b0, 0, a1, b1, 0⟩= |0, a0, s0, 0, a1, s1, s2⟩,
(8.33)
where the ﬁrst and the second 0 are scratch qubits to deal with carry bits,
while the third 0 is ultimately replaced by the sum s2. We choose ai to remain
their input values while bi (i = 0, 1) are updated to si. We further decompose
ADD(2) into a one-bit adder SUM and carry bit gate CARRY.

158
QUANTUM COMPUTING
FIGURE 8.5
Quantum circuit to sum two binary bits and a carry bit. It will be also denoted
as a black box called SUM.
The action of SUM is deﬁned as
SUM|ck−1, ak, bk⟩= |ck−1, ak, ak ⊕bk ⊕ck−1⟩,
(8.34)
where ck−1 is the carry bit from the last bit.
We drop all the subscripts
to simplify our notation hereafter. By recalling that the CNOT gate, whose
action is UCNOT|a, b⟩= |a, a ⊕b⟩, works as a mod 2 adder, we immediately
ﬁnd the circuit given in Fig. 8.5 implements the SUM gate. Let us make sure
it works OK. We abuse the notation so that CNOTij denotes the CNOT gate
with the control bit i and the target bit j whose action on a qubit k(̸= i, j)
is trivial. For example CNOT12 really means CNOT12 ⊗I. According to this
notation, we obtain
SUM|c, a, b⟩= CNOT23CNOT13|c, a, b⟩= CNOT23|c, a, b ⊕c⟩
= |c, a, a ⊕b ⊕c⟩.
Next we consider the CARRY gate whose action is deﬁned as
CARRY|ck−1, ak, bk, 0⟩= |ck−1, ak, ak ⊕bk, ck = akbk ⊕akck−1 ⊕bkck−1⟩.
(8.35)
By considering that the carry bit ck is 1 if and only if two or more of ak, bk
and ck−1 are 1, we ﬁnd that the quantum circuit given in Fig. 8.6 implements
the CARRY gate. In fact, we verify
CCNOT13;4CNOT23CCNOT23;4|c, a, b, 0⟩
= CCNOT13;4CNOT23|c, a, b, ab⟩= CCNOT13;4|c, a, a ⊕b, ab⟩
= |c, a, a ⊕b, ab ⊕c(a ⊕b)⟩= |c, a, a ⊕b, ab ⊕ac ⊕bc⟩
= CARRY|c, a, b, 0⟩,
where we have dropped the subscripts for a, b and c for simplicity.
Here
CCNOTij;k stands for the CCNOT gate with the control bits i and j and
the target bit k. We have explicitly written nontrivial gates only, and all the
other qubits are acted by the unit matrix I as before.

Shor's Factorization Algorithm
159
FIGURE 8.6
Quantum circuit which implements the CARRY gate.
FIGURE 8.7
Quantum circuit to implement the ADD(2) gate, which adds two 2-bit num-
bers.
EXERCISE 8.5 Suppose the fourth input qubit is not 0 but a binary num-
ber c′. Show that the output state of the CARRY gate shown in Fig. 8.6 on
this state is
CARRY|c, a, b, c′⟩= |c, a, a ⊕b, ab ⊕ac ⊕bc ⊕c′⟩.
(8.36)
Now we are ready to implement ADD(2) with these gates, which is explicitly
shown in Fig. 8.7. Note that carry bits are required to compute si. Therefore
we evaluate c0 and c1 ﬁrst to compute s1 and s2 The bit b0 is updated to
a0 ⊕b0 during this process. We need to apply the inverse gate CARRY−1
on |0, a0, a0 ⊕b0, c0⟩to put it back to |0, a0, b0, 0⟩so that the state produces
|0, a0, s0, 0⟩after applying the SUM gate of the layer VI. Thus the prescription
is
Layer I Compute c0 = a0b0 from a0 and b0 with the ﬁrst CARRY.

160
QUANTUM COMPUTING
FIGURE 8.8
Inverse of the CARRY gate.
Layer II Compute c1 = s2 from a1, b1 and c0 with the second CARRY.
Layer III If follows from Eq. (8.35) that the input b1 is updated to a1 ⊕b1 in the
layer II and we need to put this bit back to b1 to evaluate s1. This is done
by the CNOT gate as CNOT|a1, a1 ⊕b1⟩= |a1, a1 ⊕b1 ⊕a1⟩= |a1, b1⟩.
We need b1 for the next step.
Layer IV Apply the SUM gate on |c0, a1, b1⟩to obtain s1 = a1 ⊕b1 ⊕c0.
Layer V We need to compute s0 = a0 ⊕b0, for which we have to retrieve b0.
(Note that b0 is mapped to a0 ⊕b0 in the second layer.) This is done by
applying the CARRY−1 gate. This gate also puts the carry bit c0 back
to the initial state |0⟩for further use.
Layer VI Finally the SUM gate is applied on the input bits |0, a0, b0⟩to produce
|0, a0, s0⟩.
Before we verify the circuit in Fig. 8.7 indeed implements the ADD(2) gate,
we look at the newly introduced CARRY −1 gate in some details. We obtain,
from the implementation of the CARRY gate in Fig. 8.6, that
CARRY−1 = (CCNOT13;4CNOT23CCNOT23;4)†
= CCNOT†
23;4CNOT†
23CCNOT†
13;4
= CCNOT23;4CNOT23CCNOT13;4,
(8.37)
where we noted that CCNOT† = CCNOT and CNOT† = CNOT. Therefore
CARRY−1 is obtained by reversing the order of the constituent controlled
gates in the CARRY gate as depicted in Fig. 8.8.
EXERCISE 8.6 Show explicitly that
CARRY−1|c, a, b, c′⟩= |c, a, a ⊕b, a(a ⊕b) ⊕(bc) ⊕c′⟩.
(8.38)
Now we are ready to verify the implementation of the ADD(2) in Fig. 8.7.
We denote the unitary matrix correspoinding to the kth layer by Uk. We have
ADD(2)|0, a0, b0, 0, a1, b1, 0⟩

Shor's Factorization Algorithm
161
= UVIUVUIVUIIIUIIUI|0, a0, b0, 0, a1, b1, 0⟩
= UVIUVUIVUIIIUII|0, a0, a0 ⊕b0, a0b0, a1, b1, 0⟩
= UVIUVUIVUIII|0, a0, a0 ⊕b0, a0b0, a1, a1 ⊕b1, a1b1 ⊕a1a0b0 ⊕b1a0b0⟩
= UVIUVUIV|0, a0, a0 ⊕b0, a0b0, a1, b1, a1b1 ⊕a1a0b0 ⊕b1a0b0⟩
= UVIUV|0, a0, a0 ⊕b0, a0b0, a1, a1 ⊕b1 ⊕a0b0, a1b1 ⊕a1a0b0 ⊕b1a0b0⟩
= UVI|0, a0, b0, 0, a1, a1 ⊕b1 ⊕a0b0, a1b1 ⊕a1a0b0 ⊕b1a0b0⟩
= |0, a0, a0 ⊕b0, 0, a1, a1 ⊕b1 ⊕a0b0, a1b1 ⊕a1a0b0 ⊕b1a0b0⟩.
The last line of the above equation is identiﬁed with |0, a0, s0, 0, a1, s1, s2⟩.
The adder for n-bit numbers, which we call ADD(n), is obtained immedi-
ately by generalizing the above implementation. Figure 8.9 shows the ADD(n)
gate. The most signiﬁcant sum bit sn of a + b is evaluated ﬁrst. We need
to calculate all the carry bits ci for this purpose, and the left layers of the
gates before sn is obtained are devoted for calculating the carry bits. Then
we reverse all the operations, except for the most signiﬁcant bit, to restore
{ai} and {bi} with which {si} are evaluated as bi 	→si = ai ⊕bi ⊕ci−1. The
readers should verify the circuit indeed implements n-bit addition.
8.6.2
Modular Adder
Let us consider the modular adder, denoted MODADD(n), which evaluates
a + b mod N for given inputs a and b, where a, b < N. We need to introduce
an n-qubit subtraction circuit to this end. It is shown that ADD(n)−1, the
inverse of ADD(n) does the job. Instead of giving a general proof, we will be
satisfed with demonstration of this statement for the simplest case, in which
both a and b are 2-bit numbers, a = a12 + a0, b = b12 + b0.
Subtraction is carried out by introducing a two's complement in a similar
way as in a classical computer. Let a = an−12n−1 + . . . a12 + a0 be a positive
n-bit number. A negative number −a is stored in a computer memory as
its two's complement, which is deﬁned as 2n+1 −a. By noting that 2n+1 =
(2n + 2n−1 + . . . + 2 + 1) + 1, we obtain
2n+1 −a = 2n + (1 −an−1)2n−1 + . . . (1 −a1)2 + (1 −a0) + 1.
(8.39)
Note that 2n+1 −a is an (n + 1)-bit number for a postive number a. In sum-
mary, the two's complement of a number a = an−1an−2 . . . a1a0 is obtained
by ﬂipping each bit as ak →1−ak, adding 2n and ﬁnally adding 1. Let a = 2,
in decimal notation, for example. Then its binary expression is 10 and the
two's complement of −2 is 101 + 1 = 110.
EXERCISE 8.7 Let n = 3. Find the two's complements of negative num-
bers from −7 to −1.

162
QUANTUM COMPUTING
FIGURE 8.9
(a) Quantum circuit to implement the ADD(n) gate, which adds two n-bit
numbers a and b. The result is encoded in the qubits {|sk⟩}. (b) The black box
representation of ADD(n). Note the order of the input bits and the output
bits. We have explicitly added |an⟩= |bn⟩= |0⟩.

Shor's Factorization Algorithm
163
Let us concentrate on the case in which n = 2. Then the two's complement
of −a is 23 −a = 22 + (1 −a1)2 + (1 −a0) + 1. It is also written as
23 −a = 22 + (a0 ⊕a1)2 + a0
= (a0 ⊕a1 ⊕a0a1)22 + (a0 ⊕a1)2 + a0,
(8.40)
where we noted that a > 0 and a0 ⊕a1 ⊕(a0a1) = 1. Let us evaluate b −a,
where both a and b are 2-bit numbers.
We carry out this subtraction as
b + (23 −a) by making use of the two's complement of −a. We ﬁnd
b + (23 −a) = (b12 + b0) +

(a0 ⊕a1 ⊕a0a1)22 + (a0 ⊕a1)2 + a0

= [(a0 ⊕a1 ⊕a0a1) ⊕(a0 ⊕a1)b1 ⊕a0b0(a0 ⊕a1 ⊕b1)]22
+(a0 ⊕a1 ⊕b1 ⊕a0b0)2 + (a0 ⊕b0)
= s222 + s12 + s0,
(8.41)
where
s2 = (a0 ⊕a1 ⊕a0a1) ⊕(a0 ⊕a1)b1 ⊕a0b0(a0 ⊕a1 ⊕b1)
= a0 ⊕a1 ⊕a0a1 ⊕a0b1 ⊕a1b1 ⊕a0b0 ⊕a0a1b1 ⊕a0b0b1,
s1 = a0 ⊕a1 ⊕b1 ⊕a0b0,
(8.42)
s0 = a0 ⊕b0.
Now we show that
ADD(2)−1|0, a0, b0, 0, a1, b1, 0⟩= |0, a0, s0, 0, a1, s1, s2⟩.
(8.43)
In fact, we verify
ADD(2)−1|0, a0, b0, 0, a1, b1, 0⟩
= UIUIIUIIIUIVUVUVI|0, a0, b0, 0, a1, b1, 0⟩
= UIUIIUIIIUIVUV|0, a0, a0 ⊕b0, 0, a1, b1, 0⟩
= UIUIIUIIIUIV|0, a0, b0, a0 ⊕a0b0, a1, b1, 0⟩
= UIUIIUIII|0, a0, b0, a0 ⊕a0b0, a1, a1 ⊕b1 ⊕a0 ⊕a0b0, 0⟩
= UIUII|0, a0, b0, a0 ⊕a0b0, a1, b1 ⊕a0 ⊕a0b0, 0⟩
= UI|0, a0, b0, a0 ⊕a0b0, a1, a1 ⊕b1 ⊕a0b0,
a0 ⊕a1 ⊕a0a1 ⊕a0b0 ⊕a0b1 ⊕a1b1 ⊕a0b0a1 ⊕a0b0b1, 0⟩
= |0, a0, a0 ⊕b0, 0, a1, a0 ⊕a1 ⊕b1 ⊕a0b0,
a0 ⊕a1 ⊕a0a1 ⊕a0b1 ⊕a1b1 ⊕a0b0 ⊕a0a1b0 ⊕a0b0b1⟩
= |0, a0, s0, 0, a1, s1, s2⟩
where we noticed that U †
k = Uk in all the layers in the circuit. This shows
that the action of ADD(2)−1 yields b + (2n+1 −a) as promised.

164
QUANTUM COMPUTING
FIGURE 8.10
(a) Modular adder which computes a + b mod N. The gray line shows the
information ﬂow of the second register, corresponding to the input b and the
output a + b mod N. Uk denotes the unitary operation of the kth layer. The
white circle in U4 denotes a negated control node, which ﬂips the bottom
qubit when the control bit is 0, while does nothing when it is 1. (b) Modular
adder is symbolically denoted as MODADD(n). The third register |N⟩and
the carry qubit |0⟩are omitted.
The n-qubit subtraction is similarly obtained by inverting ADD(n) as
ADD(n)−1|0, a0, b0, 0, a1, b1, 0, . . . , an−1, bn−1, 0⟩
= |0, a0, s0, 0, a1, s1, 0, . . . , an−1, sn−1, sn⟩.
(8.44)
The output bits s0 ∼sn−1 represent b −a, while the last digit sn is 1 if
b −a < 0 and 0 if b −a > 0.
EXERCISE 8.8 Let a and b be 2-bit numbers. Verify that s2 in Eq. (8.42)
is 1 when b < a, while 0 when b > a.
Now we are ready to implement the modular adder. We ﬁnd the quantum
circuit depicted in Fig. 8.10 indeed performs modular addition a + b mod N,
where a, b and N are n-bit numbers satisfying 0 < a, b < N. Therefore, we
have either 0 < a + b < N or N ≤a + b < 2N. We write the input state

Shor's Factorization Algorithm
165
as |a, b, N, 0⟩, where the last qubit |0⟩will be used as a scratch space. Let us
verify its operations.
• The gate U1 is an ordinary adder;
U1|a, b, N, 0⟩= |a, a + b, N, 0⟩.
(8.45)
• The gate U2 swaps the ﬁrst and the third registers;
U2|a, a + b, N, 0⟩= |N, a + b, a, 0⟩.
(8.46)
• The gate U3 subtracts N from a + b;
U3|N, a + b, a, 0⟩= |N, a + b −N, c, a, 0⟩.
(8.47)
The (n + 1)st output bit c of the second register is 1 when a + b < N
and 0 when a + b ≥N.
• The gate U4 changes the scratch bit |0⟩to |1⟩if c = 0, while it is left
unchanged when c = 1;
U4|N, a + b −N, c, a, 0⟩= |N, a + b −N, c, a, 1 −c⟩.
(8.48)
• The gate U5 resets the ﬁrst register |N⟩to |0⟩when the temporary qubit
is |1⟩while it remains in the state |N⟩when it is |0⟩;
U5|N, a + b −N, c, a, 1 −c⟩=
%|N, a + b −N, c, a, 0⟩(c = 1)
|0, a + b −N, c, a, 1⟩(c = 0)
= |cN, a + b −N, c, a, 1 −c⟩.
(8.49)
Unitarity of U5 requires that U5|0, a+b−N, c, a, 1⟩= |N, a+b−N, c, a, 1⟩.
• The gate U6 is a simple adder;
U6|cN, a+b−N, c, a, 1−c⟩= |cN, a+b−(1−c)N, 1−c, a, 1−c⟩. (8.50)
Note that the carry bit c has been ﬂipped.
• The gate U7 is the same as the layer 5. The ﬁrst register is mapped to
|N⟩when c = 0, and it remains in |N⟩when c = 1;
U7|cN, a+b−(1−c)N, 1−c, a, 1−c⟩= |N, a+b−(1−c)N, 1−c, a, 1−c⟩.
(8.51)
• The gate U8 swaps |a⟩and |N⟩so that
U8|N, a+b−(1−c)N, 1−c, a, 1−c⟩= |a, a+b−(1−c)N, 1−c, N, 1−c⟩.
(8.52)

166
QUANTUM COMPUTING
• The gate U9 subtracts a from a + b −(1 −c)N;
U9|a, a + b −(1 −c)N, 1 −c, N, 1 −c⟩= |a, b −(1 −c)N, 1 −c, N, 1 −c⟩.
(8.53)
• The gate U10 transforms the temporary qubit to (1 −c) ⊕(1 −c) = 0;
U10|a, b−(1 −c)N, 1 −c, N, 1 −c⟩= |a, b−(1 −c)N, 1 −c, N, 0⟩. (8.54)
• The ﬁnal gate U11 adds the ﬁrst and the second registers;
U11|a, b−(1−c)N, 1−c, N, 0⟩= |a, a+b−(1−c)N, 1−c, N, 0⟩. (8.55)
In case a + b ≥N, for which c = 0, the second register in the output
state is |a + b −N⟩. If, in contrast, a + b < N, for which c = 1, the
second register is |a + b⟩.
These results are conveniently written as
|a + b mod N⟩.
We call this
quantum circuit an n-qubit
modular adder,
denoted
MODADD(n); see Fig. 8.10 (b).
8.6.3
Modular Multiplexer
It turnes out that a controlled-modular multiplexer
CMODMULTI(n)|c, x, 0, 0⟩=
%|c, x, 0, ax mod N⟩(c = 1)
|c, x, 0, x⟩
(c = 0)
(8.56)
is requried to construct the modular exponential gate, which computes ax mod
N, rather than the ordinary modular multiplexer circuit.
Fig. 8.11 depicts the controlled-modular multiplexer circuit. The con-
trol bit is denoted as |c⟩, while two registers are initially set to |x⟩and |0⟩.
There is also a temporary register which is also set initially to |0⟩. We need to
evaluate ax mod N for various x with the numbers a and N ﬁxed. Therefore
a and N are hardwired as parts of the circuit, while x is one of the input
parameters. Let us verify it works as expected.
Suppose |c⟩= |1⟩ﬁrst. Let x = xn−12n−1+. . . x12+x0 and a = an−12n−1+
. . . a12 + a0 be binary expressions of positive integers x and a, respectively.
The product of these numbers is
ax = axn−12n−1 + . . . + ax12 + ax0 =

xk=1
a2k.
The RHS tells us that the ax mod N is obtained by adding a2k mod N with
respect to those k for which xk = 1. The modular adder MODADD(n) in
Fig. 8.11 adds a2i mod N for such i as xi = 1 to the second register whose ini-
tial state is |0⟩. Each MODADD(n) is accompanied with a pair of controlled

Shor's Factorization Algorithm
167
FIGURE 8.11
(a)
Quantum
circuit
of
an
n-qubit
controlled-modular
multiplexer
CMODMULTI(n). There are n layers of MODADD(n), where the kth layer
adds a2k−1 mod N to the second register when c = 1 and xk−1 = 1. The
numbers a and N are ﬁxed and are hardwired. The output of the second
register is ax mod N. This circuit is denoted as (b), where the temporary
register has no external input and output ports and is not shown explicitly.

168
QUANTUM COMPUTING
gates.
Let us concentrate on the kth MODADD(n) gate.
The ﬁrst con-
trolled gate, denoted as k in Fig. 8.11 associated with the kth MODADD(n)
gate stores a2k−1 in the temporary register if xk−1 = 1, while it stores 0 if
xk−1 = 0. MODADD(n) adds xk−12k−1 to k−2
i=0 axi2i and updates the sec-
ond register to k−1
i=0 axi2i. The second controlled gate immediately after the
kth MODADD(n), denoted as k′, undoes the operation of the ﬁrst controlled
gate when xk−1 = 1, so that the ﬁrst register is now put back to 0 for recycled
use for the (k+1)st MODADD(n). Both controlled gates leave the temporary
gate to |0⟩when xk−1 = 0. In this way, we ﬁnally obtain ax mod N in the
second register.
Let c = 0 next.
Then the temporary register remains in |0⟩and each
MODADD(n) just adds 0 to the second register. We will obtain |0, x, 0⟩after
the nth MODADD(n) has been applied. We need to act a set of controlled
gates to copy the ﬁrst register |x⟩to the second register so that the output is
|0, x, x⟩. This is done by n CNOT gates, which act on each pair of qubits of the
ﬁrst and the second registers as UCNOT|0, xi, 0i⟩= |0, xi, 0i ⊕xi⟩= |0, xi, xi⟩.
In summary, the CMODMULTI gate works as
CMODMULTI|c, x, 0⟩=
%|1, x, ax mod N⟩(c = 1)
|0, x, x⟩
(c = 0).
(8.57)
8.6.4
Modular Exponential Function
Let a = an−12n−1 + . . . + a12 + a0 and x = xn−12n−1 + . . . + x12 + x0 be two
natural numbers. We need to implement a quantum circuit which outputs
ax mod N.
Figure 8.12 shows the quantum circuit which implements the modular ex-
ponential function. Let us verify how it works to produce the correct result.
Let x = xn−12n−1 + xn−22n−2 + . . . + x12 + x0. Then the power ax is
expressed as
ax = axn−12n−1 × axn−22n−2 × . . . ax12 × ax0 =
n−1

k=0
xk=1
a2k.
(8.58)
Namely, terms of the form a2k are multiplied with respect to k for which
xk = 1 to evaluate ax. The modular exponential ax mod N is obtained by
multiplying a2k from k = 0 to k = n −1 modN for those k satisfying xk = 1.
• Let us look at the ﬁrst layer composed of gates I and II in Fig. 8.12.
The output of the gate I is
CMODMULTI|x, 1, 0⟩= |x, 1, ax0 mod N⟩.

Shor's Factorization Algorithm
169
FIGURE 8.12
Quantum cirucuit which implements the modular exponential function
ax mod N. The numbers a and N are hardwired. The number x is initially
input to the ﬁrst register, while the second register is set to |1⟩. The result
of the modular exponential function is stored in the second register. There is
an extra temporary register which is set initially to |0⟩.
The output states |1⟩and |ax0 mod N⟩are exchanged by the permuta-
tion gate P before they are fed to the gate II so that
P|x, 1, ax0 mod N⟩= |x, ax0 mod N, 1⟩.
Now the gate II acts on this state is
CMODMULTI−1|x, ax0 mod N, 1⟩= |x, ax0 mod N, 0⟩.
• The next layer is comprised of two gates: III and IV. The output of the
gate III is
CMODMULTI|x, ax0 mod N, 0⟩= |x, 1, ax12ax0 mod N⟩,
which is followed by P and then CMODMULTI−1 to produce
CMODMULTI−1P|x, 1, ax12ax0 mod N⟩= |x, ax12ax0 mod N, 0⟩.
• The factor axk2k is multiplied to k−1
j=0 axj2j mod N each time a new
layer comprised of a pair of gates CMODMULTI and CMODMULTI−1
is applied. Eventually we obtain the output
MODEXP|x, 1, 0⟩= |x, ax mod N, 0⟩.

170
QUANTUM COMPUTING
8.6.5
Computational Complexity of Modular Exponential
Circuit
We evaluate the complexity of the modular exponential circuit before we close
this chapter. The evaluation is divided into several steps.
• Let us ﬁrst look at ADD(n) given in Fig. 8.9. It follows from this ﬁgure
that ADD(n) requires n SUM, n −1 CARRY−1, n CARRY and one
CNOT. Therefore the complexity TADD(n) of ADD(n) is
TADD(n) = nTS + (2n −1)TC + 1,
(8.59)
where TS and TC are numbers of elementary gates in SUM and CARRY,
which are clearly independent of n.
• Figure 8.10 shows that the modular adder MODADD(n) is composed of
three ADD(n), two ADD(n)−1, two permutation gates, two controlled
gates and four CNOT gates. Therefore the complexity is
TMODADD(n) = 5TADD(n) + 2TP + 2TU + 4,
(8.60)
where TP and TU are numbers of elementary gates in P and the control-
led-U gate, respectively. It can be shown that these gates can be imple-
mented with the Toﬀoli gates and each Toﬀoli gate is implemented with
a polynomial number of elementary gates. The power of polynomial
depends on the actual implementation. Implementation with a mini-
mal number of qubits requires O(n2) elementary gates, but it may be
reduced to O(n) if some extra qubits are added.
• The controlled modular multiplexer depicted in Fig. 8.11 requires n
MODADD(n), n controlled gates of type k (see Fig. 8.11) and n con-
trolled gates of type k′, two CNOT gates and one "copy" gate which
works as |x0⟩→|xx⟩when the control bit is c = 0.
The copy
gate, controlled gates of types k and k′ are all implemented with Tof-
foli gates.
The number of elementary gates required to implement
CMODMULTI(n) is therefore
TCMODMULT(n) = nTMODADD(n) + nTk + nTk′ + Tcopy + 2,
(8.61)
where Tk and Tk′ are the numbers of elementary gates in the controlled
gates of types k and k′, respectively, and Tcopy is the number of elemen-
tary gates in the copy gate.
• The modular exponential gate MODEXP(n) depicted in Fig. 8.12 re-
quires n CMODMULTI(n), n CMODMULTI(n)−1 and n exchange gates
P. The complexity is
TMODEXP(n) = 2nTCMODMULTI(n) + nTP .
(8.62)

Shor's Factorization Algorithm
171
In summary, the number of elementary gates in the modular exponential
circuit MODEXP(n) is of polynomial order in n. The maximum power of
the polynomial depends on actual circuit implementation and algorithms em-
ployed to design the circuit. It may happen that adding extra qubits makes
the maximum power smaller. Alternatively, the number of qubits required
to implement a given algorithm may be reduced by sacriﬁcing the number of
elementary gates.
It was also shown in Chapter 6 that the quantum Fourier transform circuit
is implemented with O(n2) number of elementary gates.
Therefore prime
number factorization for a number N ∼2n is carried out with a polynomial
number of steps in n in contrast with a classical algorithm which requires an
exponentially large number of steps.
References
[1] P. W. Shor, Proc. of 35th Annual Symposium on the Foundations of
Computer Science, 124, IEEE Computer Society Press, Los Alamitos
(1994).
[2] P. W. Shor, SIAM J. Comput., 26, 1484 (1997).
[3] S. J. Lomonaco, Jr. in Quantum Computation: A Grand Mathemat-
ical Challenge for the Twenty-First Century and the Millennium, ed.
S. J. Lomonaco, Jr., AMS (2002). e-print quant-ph/0010034.
[4] Y. Uesaka, Mathematical Principle of Quantum Computation, Corona
Publishing, Tokyo, in Japanese (2000).
[5] See F. Bornemann, Notices of the AMS, 50, 545 (2003), for example.
[6] R. L. Rivest, A. Shamir and L. M. Adleman, Comm. ACM, 21, 120
(1978).
[7] V. Vedral, A. Barenco and A. Ekert, Phys. Rev. A 54, 147 (1996).


9
Decoherence
A quantum system is always in interaction with its environment. This inter-
action inevitably alters the state of the quantum system, which causes loss
of information encoded in the system. The system under consideration is not
a closed system any more when interaction with the outside world is in ac-
tion. We formulate the theory of an open quantum system in this chapter by
regarding the combined system of the quantum system and its environment
as a closed system and subsequently trace out the environmental degrees of
freedom. Let ρS and ρE be the density matrices of the system and the en-
vironment, respectively. Even when the initial state is an uncorrelated state
ρS ⊗ρE, the system-environment interaction entangles the total system so
that the total state develops to an inseparable entangled state in general.
Decoherence is a process in which environment causes various changes in the
quantum system, which manifests itself as undesirable noise.
We study quantum error correcting codes (QECC), which is one of the
strategies to ﬁght against decoherence, in the next chapter.
9.1
Open Quantum System
Let us start our exposition with some mathematical background materials.
We will closely follow [1] and [2].
We deal with general quantum states described by density matrices. We are
interested in a general evolution of a quantum system, which is described by
a powerful tool called a quantum operation. One of the simplest quantum
operations is a unitary time evolution of a closed system. Let ρS be a density
matrix of a closed system at t = 0 and let U(t) be the time evolution operator.
Then the corresponding quantum map E is deﬁned as
E(ρS) = U(t)ρSU(t)†.
(9.1)
One of our primary aims in this section is to generalize this map to cases of
open quantum systems.
173

174
QUANTUM COMPUTING
9.1.1
Quantum Operations and Kraus Operators
Suppose a system of interest is coupled with its environment. We must spec-
ify the details of the environment and the coupling between the system and
the environment to study the eﬀect of the environment on the behavior of the
system. Let HS, HE and HSE be the system Hamiltonian, the environment
Hamiltonian and their interaction Hamiltonian, respectively. We assume the
system-environment interaction is weak enough so that this separation into
the system and its environment makes sense. To avoid confusion, we often
call the system of interest a principal system. The total Hamiltonian HT
is then
HT = HS + HE + HSE.
(9.2)
Correspondingly, we denote the system Hilbert space and the environment
Hilbert space as HS and HE, respectively, and the total Hilbert space as
HT = HS ⊗HE.
The condition of weak system-environment interaction
may be lifted in some cases. Let us consider a qubit propagating through
a noisy quantum channel, for example. "Propagating" does not necessarily
mean propagating in space. The qubit may be spatially ﬁxed and subject
to time-dependent noise. When the noise is localized in space and time, the
input and the output qubit states belong to a well-deﬁned Hilbert space HS,
and the above separation of the Hamiltonian is perfectly acceptable even for
strongly interacting cases. We consider, in the following, how the principal
system state ρS at t = 0 evolves in time in the presence of its environment.
A map which describes a general change of the state from ρS to E(ρS) is
called a quantum operation. We have already noted that the unitary time
evolution is an example of a quantum operation. Other quantum operations
include state change associated with measurement and state change due to
noise. The latter quantum map is our primary interest in this chapter.
The state of the total system is described by a density matrix ρ. Suppose
ρ is uncorrelated initally at time t = 0,
ρ(0) = ρS ⊗ρE,
(9.3)
where ρS (ρE) is the initial density matrix of the principal system (environ-
ment). The total system is assumed to be closed and to evolve with a unitary
matrix U(t) as
ρ(t) = U(t)(ρS ⊗ρE)U(t)†.
(9.4)
Note that the resulting state is not a tensor product state in general. We are
interested in extracting information on the state of the system at some later
time t > 0.
Even under these circumstances, however, we may still deﬁne the system
density matrix ρS(t) by taking partial trace of ρ(t) over the environment
Hilbert space as
ρS(t) = trE[U(t)(ρS ⊗ρE)U(t)†].
(9.5)

Decoherence
175
We may forget about the environment by taking a trace over HE. This is an
example of a quantum operation, E(ρS) = ρS(t). Details of the environment
dynamics are made irrelevant at this stage. Let {|ej⟩} be a basis of the system
Hilbert space and {|εa⟩} be that of the environment Hilbert space. We may
take the basis of HT to be {|ej⟩⊗|εa⟩}. The initial density matrices may be
written as
ρS =

j
pj|ej⟩⟨ej|, ρE =

a
ra|εa⟩⟨εa|.
Action of the time evolution operator on a basis vector of HT is explicitly
written as
U(t)|ej, εa⟩=

k,b
Ukb;ja|ek, εb⟩,
(9.6)
where |ej, εa⟩= |ej⟩⊗|εa⟩, for example. Using this expression, the density
matrix ρ(t) is written as
U(t)(ρS ⊗ρE)U(t)† =

j,a
pjraU(t)|ej, εa⟩⟨ej, εa|U(t)†
=

j,a,k,b,l,c
pjraUkb;ja|ek, εb⟩⟨el, εc|U ∗
lc;ja.
(9.7)
The partial trace over HE is carried out to yield
ρS(t) = trE[U(t)(ρS ⊗ρE)U(t)†]
=

j,a,k,b,l
pjraUkb;ja|ek⟩⟨el|U ∗
lb;ja
=

j,a,b
pj

k
√raUkb;ja|ek⟩
 
l
√ra⟨el|U ∗
lb;ja

.
(9.8)
To write down the quantum operation in a closed form, we assume the initial
environment state is a pure state, which we take, without loss of generality,
ρE = |ε0⟩⟨ε0|. Even when ρE is a mixed state, we may always complement
HE with a ﬁctitious Hilbert space to "purify" ρE (see §2.4.2).
With this
assumption, ρS(t) is written as
ρS(t) = trE[U(t)(ρS ⊗|ε0⟩⟨ε0|)U(t)†]
=

a
(I ⊗⟨εa|)U(t)(ρS ⊗|ε0⟩⟨ε0|)|U(t)†(I ⊗|εa⟩)
=

a
(I ⊗⟨εa|)U(t)(I ⊗|ε0⟩)ρS(I ⊗⟨ε0|)U(t)†(I ⊗|εa⟩).
We will drop I⊗from I ⊗⟨εa| hereafter, whenever it does not cause confusion.
Let us deﬁne the Kraus operator Ea(t) : HS →HS by
Ea(t) = ⟨εa|U(t)|ε0⟩.
(9.9)

176
QUANTUM COMPUTING
Then we may write
E(ρS) = ρS(t) =

a
Ea(t)ρSEa(t)†.
(9.10)
This is called the operator-sum representation (OSR) of a quantum op-
eration E. Note that {Ea} satisﬁes the completeness relation

a
Ea(t)†Ea(t)

kl
=

a
⟨ε0|U(t)†|εa⟩⟨εa|U(t)|ε0⟩

kl
= ⟨ε0|U(t)†U(t)|ε0⟩lk = Ikl = δkl,
(9.11)
where I is the unit matrix in HS. This is equivalent with the trace-preserving
property of E as
1 = trSρS(t) = trS(E(ρS)) = trS

a
E†
aEaρS

for any ρS ∈S(HS). The completeness relation and trace-preserving property
are satisﬁed since our total system is a closed system. A general quantum map
does not necessarily satisfy these properties [3].
At this stage, it turns out to be useful to relax the condition that U(t) be a
time evolution operator. Instead, we assume U to be any operator including
an arbitrary unitary gate. Let us consider a two-qubit system on which the
CNOT gate acts. Suppose the principal system is the control qubit while the
environment is the target qubit. Then we ﬁnd
E0 = (I ⊗⟨0|)UCNOT(I ⊗|0⟩) = P0, E1 = (I ⊗⟨1|)UCNOT(I ⊗|0⟩) = P1,
where Pi = |i⟩⟨i|, and consequently
E(ρS) = P0ρSP0 + P1ρSP1 = ρ00P0 + ρ11P1 =

ρ00 0
0 ρ11

,
(9.12)
where
ρS =
 ρ00 ρ01
ρ10 ρ11

.
We interchangeably regard U as a time evolution operator or as a black box
unitary operator. The unitarity condition may be relaxed when measurements
are included as quantum operations, for example.
Another generalization of a quantum operation is a map ρE →ρS(t), for
example. Let us take the initial state |e0⟩⟨e0| ⊗ρE at t = 0. Then after
application of U(t) on the total system, we obtain
ρS(t) = trE

U(t)(|e0⟩⟨e0| ⊗ρE)U(t)†
.
(9.13)

Decoherence
177
Therefore quantum operations do not necessarily map density matrices to
density matrices belonging to the same state space.
Tracing out the extra degrees of freedom makes it impossible to invert a
quantum operation.
Given an initial principal system state ρS, there are
inﬁnitely many U that yield the same E(ρS).
Therefore even though it is
possible to compose two quantum operations, the set of quantum operations
is not a group but merely a semigroup.∗
9.1.2
Operator-Sum Representation and Noisy Quantum
Channel
Operator-sum representation (OSR) introduced in the previous subsection
seems to be rather abstract.
Here we give an interpretation of OSR as a
noisy quantum channel. Suppose we have a set of unitary matrices {Ua} and
a set of non-negative real numbers {pa} such that 
a pa = 1. By choosing
Ua randomly with probability pa and applying it to ρS, we introduce the
expectation value of the resulting density matrix as
M(ρS) =

a
paUaρSU †
a,
(9.14)
which we call a mixing process [4]. This takes place, for example, when a
ﬂying qubit is sent through a noisy quantum channel which transforms the
qubit density matrix by Ua with probability pa. Note that no environment
has been introduced in the above deﬁnition, and hence no partial trace is
involved.
Now the correspondence between E(ρS) and M(ρS) should be clear. Let
us deﬁne
Ea ≡√paUa.
(9.15)
Then Eq. (9.14) is rewritten as
M(ρS) =

a
EaρSE†
a,
(9.16)
and the equivalence has been shown. Operators Ea are identiﬁed with the
Kraus operators. The system transforms, under the action of Ua, as
ρS →
EaρSE†
a
tr

EaρSE†
a
.
(9.17)
Conversely, given a noisy quantum channel {Ua, pa} we may introduce an
"environment" with the Hilbert space HE as follows. Let HE = Span(|εa⟩)
∗A set S is called a semigroup if S is closed under a product satisfying associativity (ab)c =
a(bc). If S has a unit element e, such that ea = ae = a, ∀a ∈S, it is called a monoid.

178
QUANTUM COMPUTING
be a Hilbert space with the dimension equal to the number of the unitary
matrices {Ua}, where {|εa⟩} is an orthonormal basis.
Deﬁne formally the
environment density matrix ρE = 
a pa|εa⟩⟨εa| and
U ≡

a
Ua ⊗|εa⟩⟨εa|
(9.18)
which acts on HS ⊗HE. It is easily veriﬁed from the orthonormality of {|εa⟩}
that U is indeed a unitary matrix. Now a partial trace over the ﬁctitious HE
yields
E(ρS) = trE[U(ρS ⊗ρE)U †]
=

a
(I ⊗⟨εa|)

b
Ub ⊗|εb⟩⟨εb|
 
ρS ⊗

c
pc|εc⟩⟨εc|

×

d
Ud ⊗|εd⟩⟨εd|

(I ⊗|εa⟩)
=

a
paUaρSU †
a = M(ρS),
(9.19)
showing that the mixing process is also decribed by a quantum operation with
a ﬁctitious environment.
EXERCISE 9.1 Show that U deﬁned as Eq. (9.18) is unitary.
9.1.3
Completely Positive Maps
All linear operators we have encountered so far map vectors to vectors. A
quantum operation maps a density matrix to another density matrix linearly.†
A linear operator of this kind is called a superoperator. Let Λ be a super-
operator acting on the system density matrices, Λ : S(HS) →S(HS). The
operator Λ is easily extended to an operator acting on HT by ΛT = Λ ⊗IE,
which acts on S(HS ⊗HE). Note, however, that ΛT is not necessarily a map
S(HT ) →S(HT ). It may happen that ΛT (ρ) is not a density matrix any
more. We have already encountered this situation when we introduced par-
tial transpose operation in §2.4.1. Let HT = H1 ⊗H2 be a two-qubit Hilbert
space, where Hk is the kth qubit Hilbert space. It is clear that the transpose
operation Λt : ρ1 →ρt
1 on a single-qubit state ρ1 preserves the density matrix
properties, i.e., non-negativity, Hermiticity and unit trace property. For a
two-qubit density matrix ρ12, however, this is not always the case. In fact,
†Of course, the space of density matrices is not a linear vector space. What is meant here is
a linear operator, acting on the vector space of Hermitian matrices, also acts on the space
of density matrices and maps a density matrix to another density matrix.

Decoherence
179
we have seen that Λt ⊗I : ρ12 →ρpt
12 deﬁned by Eq. (2.42) maps a density
matrix to a matrix which is not a density matrix when ρ12 is inseparable.
A map Λ which maps a positive operator acting on HS to another positive
operator acting on HS is said to be positive. Moreover, it is called a com-
pletely positive map (CP map), if its extension ΛT = Λ ⊗In remains a
positive operator for an arbitrary n ∈N.
THEOREM 9.1 A linear map Λ is CP if and only if there exists a set of
operators {Ea} such that Λ(ρ) can be written as
Λ(ρS) =

a
EaρSE†
a.
(9.20)
We require not only that Λ be CP but also that Λ(ρ) be a density matrix,
i.e.,
tr Λ(ρS) = tr

a
EaρE†
a

= tr

a
E†
aEaρ

= 1.
(9.21)
This condition is satisﬁed for any ρ if and only if

a
E†
aEa = IS.
(9.22)
Therefore, any quantum operation obtained by tracing out the environment
degrees of freedom is CP and preserves trace.
9.2
Measurements as Quantum Operations
We have already seen that a unitary evoluation ρS →UρSU † is a quantum
operation and that the mixing process ρS →
i piUiρSU †
i is a quantum op-
eration. We will see further examples of quantum operations in this section
and the next. This section deals with measurements as quantum operations.
9.2.1
Projective Measurements
Suppose we measure an observable A = 
i λiPi, where Pi = |λi⟩⟨λi| is the
projection operator corresponding to the eigenvector |λi⟩. We have seen in
Chapter 2 that the probability of observing λi upon a measurement of A in a
state ρ is
p(i) = ⟨λi|ρ|λi⟩= tr (Piρ),
(9.23)
and the state changes as ρ →PiρPi/p(i). This process happens with a prob-
ability p(i).
Thus we may regard the measurement process as a quantum

180
QUANTUM COMPUTING
operation
ρS →

i
p(i)PiρSPi
p(i)
=

i
PiρSPi,
(9.24)
where the set {Pi} satisifes the completeness relation 
i PiP †
i = I.
The projective measurement is a special case of a quantum operation in
which the Kraus operators are Ei = Pi.
9.2.2
POVM
We have been concerned with projective measurements so far. However, it
should be noted that they are not a unique type of measurements. Here we
will be concerned with the most general framework of measurement and show
that it is a quantum operation.
Suppose a system and an environment, prepared in a product state |ψ⟩|e0⟩,
are acted by a unitary operator U, which applies an operator Mi on the system
and, at the same time, put the environment to |ei⟩for various i. It is written
explicitly as
|Ψ⟩= U|ψ⟩|e0⟩=

i
Mi|ψ⟩|ei⟩.
(9.25)
The system and its environment are correlated in this way. This state must
satisfy the normalization condition since U is unitary;
⟨ψ|⟨e0|U †U|ψ⟩|e0⟩=

i,j
⟨ψ|⟨ei|M †
i Mj ⊗I|ψ⟩|ej⟩
= ⟨ψ|

i
M †
i Mi|ψ⟩= 1.
(9.26)
Since |ψ⟩is arbitrary, we must have

i
M †
i Mi = IS,
(9.27)
where IS is the unit matrix acting on the system Hilbert space HS. Operators
{M †
i Mi} are said to form a POVM (positive operator-valued measure).
Suppose we measure the environment with a measurement operator
O = IS ⊗

i
λi|ei⟩⟨ei| =

i
λi (IS ⊗|ei⟩⟨ei|) .
We obtain a measurement outcome λk with a probability
p(k) = ⟨Ψ|(IS ⊗|ek⟩⟨ek|)|Ψ⟩
=

i,j
⟨ψ|⟨ei|M †
i (IS ⊗|ek⟩⟨ek|)Mj|ψ⟩|ej⟩
= ⟨ψ|M †
kMk|ψ⟩,
(9.28)

Decoherence
181
where |Ψ⟩= U|ψ⟩|e0⟩. The combined system immediately after the measure-
ment is
1

p(k)
(IS ⊗|ek⟩⟨ek|)U|ψ⟩|e0⟩=
1

p(k)
(IS ⊗|ek⟩⟨ek|)

i
Mi|ψ⟩|ei⟩
=
1

p(k)
Mk|ψ⟩|ek⟩.
(9.29)
Let ρS = 
i pi|ψi⟩⟨ψi| be an arbitrary density matrix of the principal
system. It follows from the above observation for a pure state |ψ⟩⟨ψ| that the
reduced density matrix immediately after the measurement is

k
p(k)MkρSM †
k
p(k)
=

k
MkρSM †
k.
(9.30)
This shows that POVM measurement is a quantum operation in which the
Kraus operators are given by the generalized measurement operators {Mi}.
The projective measurement is a special class of POVM, in which {Mi} are
the projection operators.
9.3
Examples
Now we examine several important examples which have relevance in quantum
information theory. Decoherence appears as an error in quantum information
processing. The next chapter is devoted to strategies to ﬁght against some
errors introduced in this section.
9.3.1
Bit-Flip Channel
A bit-ﬂip channel is deﬁned by a quantum operation
E(ρS) = (1 −p)ρS + pσxρSσx, 0 ≤p ≤1.
(9.31)
In other words, the input ρS is bit-ﬂipped (|0⟩	→|1⟩and |1⟩	→|0⟩) with a
probability p while it remains in its input state with a probability 1 −p. The
Kraus operators are easily read oﬀas
E0 =

1 −pI, E1 = √pσx.
(9.32)
Let us next consider a quantum circuit which models this channel. Consider
a closed two-qubit system with a Hilbert space C2⊗C2. We call the ﬁrst qubit
the "(principal) system" and the second qubit the "environment." We show
that the circuit depicted in Fig. 9.1 indeed models the bit-ﬂip channel provided

182
QUANTUM COMPUTING
FIGURE 9.1
Quantum circuit modelling a bit-ﬂip channel. The gate is the inverted CNOT
gate I ⊗|0⟩⟨0| + σx ⊗|1⟩⟨1|.
that the second qubit is in a mixed state (1 −p)|0⟩⟨0| + p|1⟩⟨1|. The circuit
is nothing but the inverted CNOT gate
V = I ⊗|0⟩⟨0| + σx ⊗|1⟩⟨1|.
The output of this circuit is
V (ρS ⊗[(1 −p)|0⟩⟨0| + p|1⟩⟨1|]) V †
= (1 −p)ρS ⊗|0⟩⟨0| + pσxρSσx|1⟩⟨1|,
(9.33)
from which we obtain
E(ρS) = (1 −p)ρS + pσxρSσx
(9.34)
after tracing over the environment Hilbert space.
The choice of the second qubit input state is far from unique and so is the
choice of the circuit. Suppose the initial state of the environment is a pure
state
|ψE⟩=

1 −p|0⟩+ √p|1⟩,
(9.35)
for example. Then the output of the circuit in Fig. 9.1 is
E(ρS) = trE[V ρS ⊗|ψE⟩⟨ψE|V †] = (1 −p)ρS + pσxρSσx,
(9.36)
which is the same result as before.
Let us see what transformation this quantum operation brings about in ρS.
We parametrize ρS using the Bloch vector as
ρS = 1
2
⎛
⎝I +

k=x,y,z
ckσk
⎞
⎠,
(ck ∈R),
(9.37)
where 
k c2
k ≤1. We obtain
E(ρS) = (1 −p)ρS + pσxρSσx
= 1 −p
2
(I + cxσx + cyσy + czσz) + p
2(I + cxσx −cyσy −czσz)
= 1
2

1 + (1 −2p)cz cx −i(1 −2p)cy
cx + i(1 −2p)cy 1 −(1 −2p)cz

.
(9.38)

Decoherence
183
Observe that the radius of the Bloch sphere is reduced along the y- and
the z-axes so that the radius in these directions is |1 −2p|. Equation (9.38)
shows that the quantum operation has produced a mixture of the Bloch vector
states (cx, cy, cz) and (cx, −cy, −cz) with weights 1 −p and p, respectively.
Figure 9.2 (a) shows the Bloch sphere which represents the input qubit states.
The Bloch sphere shrinks along the y- and z-axes, which results in the ellipsoid
shown in Fig. 9.2 (b).
9.3.2
Phase-Flip Channel
The phase-ﬂip channel is deﬁned by a quantum operation
E(ρS) = (1 −p)ρS + pσzρSσz, 0 ≤p ≤1.
(9.39)
In other words, the input ρS is phase-ﬂipped (|0⟩	→|0⟩and |1⟩	→−|1⟩) with
a probability p while it remains in its input state with a probability 1 −p.
The corresponding Kraus operators are
E0 =

1 −pI, E1 = √pσz.
(9.40)
Consider again a closed two-qubit system, whose ﬁrst qubit is called the
"(principal) system" and the second qubit its "environment." A quantum
circuit which models the phase-ﬂip channel is shown in Fig. 9.3. Let ρS be
the ﬁrst qubit input state and (1−p)|0⟩⟨0|+p|1⟩⟨1| be the second qubit input
state. The circuit is the inverted controlled-σz gate
V = I ⊗|0⟩⟨0| + σz ⊗|1⟩⟨1|.
The output of this circuit is
V (ρS ⊗[(1 −p)|0⟩⟨0| + p|1⟩⟨1|]) V †
= (1 −p)ρS ⊗|0⟩⟨0| + pσzρSσz ⊗|1⟩⟨1|,
(9.41)
from which we obtain
E(ρS) = (1 −p)ρS + pσzρSσz.
(9.42)
The second qubit input state may be a pure state
|ψE⟩=

1 −p|0⟩+ √p|1⟩,
(9.43)
for example. Then we ﬁnd
E(ρS) = trE[V ρS ⊗|ψE⟩⟨ψE|V †]
= E0ρSE†
0 + E1ρSE†
1,
(9.44)
where the Kraus operators are
E0 = ⟨0|V |ψE⟩=

1 −pI, E1 = ⟨1|V |ψE⟩= √pσz.
(9.45)

184
QUANTUM COMPUTING
-1
-0.5
0
0.5
-1
-0.5
0
0.5
1
-1
-0.5
0
0.5
1
-1
-0.5
0
0.5
-1
-0.5
0
0.5
-1
-0.5
0
0.5
-1
-0.5
0
0.5
1
-1
-0.5
0
0.5
-1
-0.5
0
0.5
1
-1
-0.5
0
0.5
-1
-0.5
0
0.5
-1
-0.5
0
0.5
FIGURE 9.2
Bloch sphere of the input state ρS (a) and output states (b) ∼(f) of various
noisy channels. (b) Bit-ﬂip channel, (c) phase-ﬂip channel, (d) bit-phase ﬂip
channel, (e) depolarizing channel and (f) amplitude damping channel. The
probability p = 0.2 is common to all the noisy channels except in (f), for
which p = 0.7.

Decoherence
185
FIGURE 9.3
Quantum circuit modelling a phase-ﬂip channel.
The gate is the inverted
controlled-σz gate.
Let us work out the transformation this quantum operation brings about
to ρS. We parametrize ρS using the Bloch sphere as before. We obtain
E(ρS) = (1 −p)ρS + pσzρSσz
= 1 −p
2
(I + cxσx + cyσy + czσz) + p
2(I −cxσx −cyσy + czσz)
= 1
2

1 + cz
(1 −2p)(−cx −icy)
(1 −2p)(cx + icy)
1 −cz

.
(9.46)
Observe that the oﬀ-diagonal components decay while the diagonal compo-
nents remain the same. Equation (9.46) shows that the quantum operation has
produced a mixture of the Bloch vector states (cx, cy, cz) and (−cx, −cy, cz)
with weights 1 −p and p, respectively. The initial state has a deﬁnite phase
φ = tan−1(cy/cx) in the oﬀ-diagonal components. The phase after the quan-
tum operation is applied is a mixture of states with φ and φ+π. This process
is called the phase relaxation process, or the T2 process in the context of
NMR. The radius of the Bloch sphere is reduced along the x- and the y-axes
to |1 −2p|. Figure 9.2 (c) shows the eﬀect of the phase-ﬂip channel on the
Bloch sphere for p = 0.2.
EXERCISE 9.2 Let us deﬁne the bit-phase ﬂip channel by a quantum op-
eration
E(ρS) = (1 −p)ρS + pY ρSY,
(9.47)
where Y = −iσy. It follows from the observation XZ = Y that bit-phase ﬂip
may be considered as a combination of bit-ﬂip and phase-ﬂip.
Find a quantum circuit which models the bit-phase ﬂip channel. Show that
the eﬀect of the channel on the Bloch sphere is given by Fig. 9.2 (d).
9.3.3
Depolarizing Channel
A depolarizing channel maps the input state ρ to a maximally mixed state
with a probability p and leaves as it is with a probability 1 −p;
E(ρS) = (1 −p)ρS + pI
2.
(9.48)

186
QUANTUM COMPUTING
We introduce the decomposition ρS = (I + cxσx + cyσy + czσz)/2 to write the
OSR form of the channel. We observe ﬁrst that
σxρSσx = 1
2(I + cxσx −cyσy −czσz)
σyρSσy = 1
2(I −cxσx + cyσy −czσz)
σzρSσz = 1
2(I −cxσx −cyσy + czσz),
from which, we obtain
2I = ρS +

k=x,y,z
σkρSσk.
(9.49)
Substituting this into Eq. (9.48), we obtain the OSR of the depolarizing chan-
nel
E(ρS) =

1 −3
4p

ρS + p
4

k
σkρSσk.
(9.50)
The Kraus operators are read oﬀas
E0 =
*
1 −3
4pI, Ek =
*p
4σk (k = x, y, z).
(9.51)
It is convenient to rescale the probability as p′ = 3p/4 (0 ≤p′ ≤3/4) to
obtain
E(ρS) = (1 −p′) ρS + p′
3

k
σkρSσk.
(9.52)
The channel transports ρS without any change with probability 1 −p′ while
X, Y and Z acts each with probability p′/3.
The fact that there are four Kraus operators suggests that the environment
Hilbert space is at least four-dimensional. In fact, we can construct a quantum
circuit model shown in Fig. 9.4. It is a Fredkin gate with the bottom control
bit. The input state is
ρS ⊗I
2 ⊗[(1 −p)|0⟩⟨0| + p|1⟩⟨1|].
The action of the Fredkin gate on the input state yields the output
ρ = (I4 ⊗|0⟩⟨0| + USWAP ⊗|1⟩⟨1|)

ρS ⊗I
2 ⊗[(1 −p)|0⟩⟨0| + p|1⟩⟨1|]

(I4 ⊗|0⟩⟨0| + USWAP ⊗|1⟩⟨1|)
= (1 −p)ρS ⊗I
2 ⊗|0⟩⟨0| + pI
2 ⊗ρS ⊗|1⟩⟨1|,
(9.53)

Decoherence
187
FIGURE 9.4
Quantum circuit which models a depolarizing channel. The gate is an inverted
Fredkin gate, in which the control bit is the third qubit.
where use has been made of the relation
USWAP(ρ1 ⊗ρ2)USWAP = ρ2 ⊗ρ1.
(9.54)
Tracing out the two-qubit environment produces
trEρ = (1 −p)ρS + pI
2
(9.55)
as promised.
The eﬀect of this channel on the Bloch sphere of the qubit is obtained from
the expression
E(ρS) = pI
2 + 1 −p
2
(I +

k
ckσk) = I
2 + 1 −p
2

k
ckσk.
(9.56)
It is found that the radius is uniformly reduced from 1 to 1−p. Figure 9.2 (e)
shows the Bloch sphere of the output state (9.56) with p = 0.2.
9.3.4
Amplitude-Damping Channel
Our ﬁnal example is the amplitude-damping channel, which is described by a
one-way decay only. A qubit decays from |1⟩to |0⟩with a probability p but
not in the other way around. This process describes the T1 process in NMR,
for example.
Let
E(ρS) = E0ρSE†
0 + E1ρSE†
1
(9.57)
be the OSR of the quantum operation. This downward decay process is nat-
urally described by a Kraus operator
E1 = √p

0 1
0 0

.
(9.58)

188
QUANTUM COMPUTING
The other Kraus operator E0 is ﬁxed by the requirement 
k E†
kEk = I as
E0 =

1
0
0 √1 −p

.
(9.59)
Let us consider the eﬀect of this channel on the Bloch sphere. By substi-
tuting the Bloch sphere representation of ρS, we obtain
E(ρS) = p
0 1
0 0

ρS
 0 0
1 0

+
1
0
0 √1 −p

ρS
 1
0
0 √1 −p

=

ρ00 + pρ11
√1 −pρ01
√1 −pρ10 ρ11 −pρ11

= 1
2
1 + [p + (1 −p)cz] √1 −p(cx −icy)
√1 −p(cx + icy) 1 −[p + (1 −p)cz]

.
(9.60)
Note that the center of the Bloch sphere is shifted toward the north pole (|0⟩)
by p under the inﬂuence of the channel and, at the same time, the radius in the
x- and y-directions are reduced by √1 −p and the radius in the z-direction
by 1 −p. Figure 9.2 (f) shows this eﬀect graphically.
9.4
Lindblad Equation
Let HS be a closed system with the Hamiltonian HS. The system density
matrix ρS evolves according to the Liouville-von Neumann equation
∂ρS
∂t = 1
i [H, ρS].
(9.61)
What is the corresponding equation for an open quantum system? We have
found in §9.1 that the principal system density matrix ρS(t) at later time
t > 0 is obtained by tracing out the environment degrees of freedom as
ρS(t) = trE[U(t)(ρS ⊗ρE)U(t)†],
(9.62)
where U(t) is the time evolution operator of the total system and the initial
state is assumed to be a tensor product state. Then the dynamics of ρS(t) is
∂ρS(t)
∂t
= ∂
∂ttrE[U(t)(ρS ⊗ρE)U(t)†] = 1
i trE[H, U(t)(ρS ⊗ρE)U(t)†], (9.63)
where H = HS + HE + HSE is the total Hamiltonian and we noted that time
derivative commutes with trE. This equation, albeit exact, is not closed and is
of little use in actual applications. Now we must introduce an approximation

Decoherence
189
in the above exact equation, with which we may extract useful information
on the system dynamics.
One of the most popular assumptions is the Markovian approximation.
The state ρS(t) depends on the previous history of the system in general.
For some problems, however, this memory eﬀect may be negligible, and the
dynamics of ρS(t) is determined by ρS(t) itself. For example we may assume
that the behavior of the system is Markovian, if we are interested in a time
scale much longer than the environment correlation times. If this is the case,
the master equation should look like
∂
∂tρS(t) = LρS(t)
(9.64)
with a superoperator L.
9.4.1
Quantum Dynamical Semigroup
Let
Φt : ρS →ρS(t),
Φ0 = I
(9.65)
be the quantum operation associated with a time evolution operator U(t). We
require that Φt be trace-preserving and completely positive. The map Φt has
the OSR
Φt(ρS) =

a
Ea(t)ρSE†
a(t),

a
E†
a(t)Ea(t) = I.
(9.66)
Suppose the reduced Liouville-von Neumann equation satisﬁes the Marko-
vian property. Then it is formally solved to yield
Φt(ρS) = eLtρS, t ∈[0, ∞).
(9.67)
This map satisﬁes the semigroup property
Φt2(Φt1(ρS)) = Φt1+t2(ρS).
(9.68)
The set of maps {Φt} is called the quantum dynamical semigroup.
9.4.2
Lindblad Equation
Let dimHS = d. A superoperator L has components Lij,kl with 1 ≤i, j, k, l ≤
d showing that it acts on a d2-dimensional vector space. Let us introduce the
Hilbert-Schmidt scalar product in the space of matrices as
(A, B)HS = tr (A†B),
(9.69)
where A and B are d × d matrices. Verify that this deﬁnition satisﬁes all the
axioms of a scalar product.

190
QUANTUM COMPUTING
The basis of the vector space of matrices may be {eij = |i⟩⟨j|} where
(eij)pq = δipδjq.
Instead of the bi-index notation {eij}, we properly assign a single index to
the basis vectors to write {eJ} (1 ≤J ≤d2). It turns out to be convenient to
introduce a special basis vector
ed2 =
1
√
d
Id
(9.70)
and take the other d2 −1 basis vectors traceless. The basis vectors satisfy
(eJ, eK)HS = δJK,
tr eJ =
⎧
⎨
⎩
0,
1 ≤J ≤d2 −1
√
d, J = d2.
(9.71)
Let us write the OSR of Φt as
Φt(ρS) =

a
Ea(t)ρSE†
a(t),
(9.72)
where we have written the time dependence of the Kraus operator Ea explic-
itly. Now we expand Ea in terms of {eJ} as
Ea(t) =

J
eJ(eJ, Ea(t))HS
(9.73)
and substitute this into Eq. (9.72) to obtain
Φt(ρS) =

J,K
cJK(t)eJρSe†
K,
(9.74)
where
cJK(t) =

a
(eJ, Ea(t))HS(eK, Ea(t))∗
HS.
(9.75)
The coeﬃcient matrix (cJK) is positive and Hermitian.
Now we are ready to derive the Lindblad equation by employing these tools.
By separating the summation over J and K in Eq. (9.74) into 1 ≤J, K ≤d2−1
and J, K = d2, we obtain
Lρ = lim
τ→0
Φτ(ρS) −ρS
τ
= lim
τ→0
cd2d2(τ)/d −1
τ
ρS +
⎛
⎝lim
τ→0
d2−1

J=1
cJd2(τ)
√
dτ
eJ
⎞
⎠ρS
+ρS
⎛
⎝lim
τ→0
d2−1

K=1
cd2K(τ)
√
dτ
e†
K
⎞
⎠+ lim
τ→0
d2−1

J,K=1
cJK(τ)
τ
eJρSe†
K. (9.76)

Decoherence
191
Now we introduce notations
c0 = lim
τ→0
cd2d2(τ)/d −1
τ
, B = lim
τ→0
d2−1

J=1
cJd2(τ)
√
dτ
eJ,
B† = lim
τ→0
d2−1

K=1
cd2K(τ)
√
dτ
e†
K, αJK = lim
τ→0
cJK(τ)
τ
(9.77)
to rewrite Eq. (9.76) as
LρS = c0ρS + BρS + ρSB† +
d2−1

J,K=1
αJKeJρSe†
K
= 1
i [ ˜H, ρS] + (GρS + ρSG) +

J,K
αJKeJρSe†
K,
(9.78)
where
˜H = 1
2i(B −B†), G = 1
2(B + B† + c0).
(9.79)
Although we are tempted to identify ˜H with the Hamiltonian in the von-
Neumann equation, it is not necessarily justiﬁable in the present case. It is
possible to eliminate G in favor of αst if we notice the trace-preserving prop-
erty tr ρS = tr (ΦtρS) = 1. In fact, it follows from tr (LρS) = tr ∂tΦt(ρS) =
∂ttr Φt(ρS) = 0 that
0 = tr (LρS) = tr
⎡
⎣
⎛
⎝2G +
d2−1

J,K=1
αJKe†
KeJ
⎞
⎠ρS
⎤
⎦
(9.80)
for an arbitrary ρS. Now G is solved as
G = −1
2

J,K
αJKe†
KeJ.
(9.81)
Substituting this into Eq. (9.78), we obtain
LρS = 1
i [ ˜H, ρS] +
d2−1

J,K=1
αJK

eJρSe†
K −1
2e†
KeJρS −1
2ρSe†
KeJ

.
(9.82)
The ﬁrst term in the right hand side generates the unitary time evolution,
while the second term brings about incoherent time evolution in the system
dynamics.
The matrix α is positive and Hermitian and can be diagonalized with a
properly chosen unitary matrix W.
Let WαW † = D = diag(γ1, . . . γd2),
where γi is a positive real number. Let us deﬁne operators
LK =
d2−1

J=1
eJW †
JK
(9.83)

192
QUANTUM COMPUTING
so that eJ = 
K LKWKJ. Then Eq. (9.82) is put in the form
LρS = 1
i [ ˜H, ρS] +
N

K=1
γK

LKρSL†
K −1
2L†
KLKρS −1
2ρSL†
KLK

,
(9.84)
where N ≤d2 −1. Note that if some elements γK vanish, then the number of
LK involved reduces from d2 −1 by this amount. The operators LK are called
the Lindblad operators, while Eq. (9.84) is called the Lindblad equation
[5, 6]. Let us compare the term γKLKρSL†
K in Eq. (9.84) with Eq. (9.14).
The operator LK may be compared with Ua and γK with pa.
Note that the Lindblad equation is invariant under the transformation
LK →LK + cK, ˜H →˜H + 1
2i

K

c∗
KLK −cKL†
K

+ c0.
(9.85)
By making use of this freedom, it is always possible to make LK traceless.
Moreover, if we absorb γK in the deﬁnition of LK as √γKLK, the diagonal
matrix WαW † reduces to the unit matrix, and the remaining freedom
√γKLK →

J
UKJ
√γJLJ
(9.86)
becomes manifest.
9.4.3
Examples
We consider two examples taken from [7].
The ﬁrst example is spontaneous emission. Let us consider a two-level
atom whose Hamiltonian is
H = −ω0
2 σz,
(9.87)
where ω0 is the energy diﬀerence between the ground state |0⟩= (1, 0)t and
the excited state |1⟩= (0, 1)t. Suppose there is a single Lindblad operator
L =
√
Γ
 0 1
0 0

,
(9.88)
which corresponds to relaxation process |1⟩→|0⟩. It is reasonable to as-
sume ˜H in Eq. (9.84) reduces to H when the system-environment coupling is
small, for which case the Lindblad equation should reduce to the Liouville-von
Neumann equation. The Lindblad equation is then
∂
∂t

ρ00 ρ01
ρ10 ρ11

= −i[H, ρ] + LρL† −1
2
 
L†Lρ + ρL†L
!
= iω0

0
ρ01
−ρ10 0

+ Γ

ρ11
−1
2ρ01
−1
2ρ10 −ρ11

,
(9.89)

Decoherence
193
where we have dropped the subscript S to simplify the notation. The above
equation is solved with the initial condition ρ(0) as
ρ00(t) = ρ00(0) + ρ11(0)(1 −e−Γt), ρ01(t) = ρ01(0)e(iω0−Γ/2)t,
ρ10(t) = ρ10(0)e(−iω0−Γ/2)t, ρ11(t) = ρ11(0)e−Γt.
(9.90)
The population ρ11 in the excited state |1⟩decays with the characteristic
time T1 = 1/Γ, while the oﬀ-diagonal components (coherence) ρ01 and ρ10
decay with the time constant T2 = 2/Γ. This shows that the coherence decay
process is slower than the amplitude damping process.
The second example is the Bloch equation in NMR. Let us take the
Hamiltonian (9.87) again. We introduce three Lindblad operators
L+ =

Γ+
0 1
0 0

,
L−=

Γ−
0 0
1 0

,
Lz =

Γz
1 0
0 −1

,
(9.91)
where L+ describes relaxation process |1⟩→|0⟩, L−to excitation process
|0⟩→|1⟩and Lz to dephasing process without energy transfer between the
spin and the environment.
The Lindblad equation is
∂
∂t

ρ00 ρ01
ρ10 ρ11

= iω0

0
ρ01
−ρ10 0

+ Γ+

ρ11
−ρ01/2
−ρ10/2
−ρ11

+Γ−
 −ρ00
−ρ01/2
−ρ10/2
ρ00

+ Γz

0
−2ρ01
−2ρ10
0

.(9.92)
Let us ﬁnd the equilibrium values ρeq of ρ(t). It should be clear that the
oﬀ-diagonal components (the coherence) disappear as t →∞.
As for the
diagonal components, the condition ∂ρ(t)/∂t = 0 leads to Γ+ρeq
11 −Γ−ρeq
00 = 0,
namely,
ρeq
11
ρeq
00
= Γ−
Γ+
= e−ω0/kBT ,
(9.93)
where we noted that the diagonal components of ρ(t) represent the state
populations, and the equilibrium population ratio follows the Boltzmann dis-
tribution. Straightforward but tedious calculations yield the solution
ρ00(t) = ρeq
00 + (ρ00 −ρeq
00) e−t/T1,
ρ01(t) = ρ01e(iω0−1/T2)t,
ρ10(t) = ρ10e(−iω0−1/T2)t,
ρ11(t) = ρeq
11 + (ρ11 −ρeq
11) e−t/T1,
(9.94)
where
T −1
1
= Γ+ + Γ−,
T −1
2
= Γ+ + Γ−
2
+ 2Γz.
(9.95)

194
QUANTUM COMPUTING
It is exepcted that the L+ process involves the emission of rf photons (see
Chapter 12) and the L−process the absorption of photons. Therefore we
assume
Γ+ = γ[1 + n(ω0)],
Γ−= γn(ω0).
(9.96)
The function n(ω) is found by making use of Eq. (9.93) as
n(ω0) =
1
1 −e−ω0/kBT .
(9.97)
Then T1 and T2 are given as
T −1
1
= γeω0/kBT coth

ω0
2kBT

,
T −1
2
= T −1
1
2
+ 2Γz.
(9.98)
EXERCISE 9.3 Let ρ(t) = (I + 
k=x,y,z ck(t)σk)/2 be the density matrix
of a qubit, where {ck(t)} are the components of the Bloch vector.
Write down the Lindblad equation for {ck(t)} with the Hamiltonian (9.87)
and the Lindblad operators (9.91). Find the solution {ck(t)} of the Lindblad
equation.
References
[1] M. A. Neilsen and I. L. Chuang, Quantum Computation and Quantum
Information, Cambridge University Press (2000).
[2] K. Hornberger, e-print quant-ph/0612118 (2006).
[3] H. Barnum, M. A. Nielsen and B. Schumacher, Phys. Rev. A 57, 4153
(1998).
[4] Y. Kondo, et al., J. Phys. Soc. Jpn. 76 (2007) 074002.
[5] G. Lindblad, Commun. Math. Phys. 48, 119 (1976).
[6] V. Gorini, A. Kossakowski and E. C. G. Sudarshan, J. Math. Phys., 17,
821 (1976).
[7] A. J. Fisher, Lecture note available at
http://www.cmmp.ucl.ac.uk/~ajf/course_notes.pdf

10
Quantum Error Correcting Codes
10.1
Introduction
It has been shown in the previous chapter that interactions between a quan-
tum system with environment cause undesirable changes in the state of the
quantum system. In the case of qubits, they appear as bit-ﬂip and phase-ﬂip
errors, for example. To reduce such errors, we must build in some sort of error
correcting mechanism in the algorithm.
Before we introduce quantum error correcting codes, we have a brief look
at the simplest version of error correcting code in classical bits.
Suppose
we transmit a series of 0's and 1's through a noisy classical channel. Each
bit is assumed to ﬂip independently with a probability p. Thus a bit 0 sent
through the channel will be received as 0 with probability 1 −p and as 1
with probability p. To reduce channel errors, we may invoke the majority
vote. Namely, we encode logical 0 by 000 and 1 by 111, for example. When
000 is sent through this channel, it will be received as 000 with probability
(1 −p)3, as 100, 010 or 001 with probability 3p(1 −p)2, as 011, 101 or 110
with probability 3p2(1 −p) and ﬁnally as 111 with probability p3. Note that
the summation of all the probabilities is 1 as it should be. By taking the
majority vote, we correctly reproduce the desired result 0 with probability
p0 = (1 −p)3 + 3p(1 −p)2 = (1 −p)2(1 + 2p) and fail with probability
p1 = 3p2(1 −p) + p3 = (3 −2p)p2. We obtain p0 ≫p1 for suﬃciently small
p ≥0. In fact, we ﬁnd p0 = 0.972 and p1 = 0.028 for p = 0.1. The success
probability p0 increases as p approaches 0, or alternatively, if we use more bits
to encode 0 or 1.
EXERCISE 10.1 Suppose ﬁve bits are employed to encode a bit. Find the
success probability when the bit is sent through a noisy channel, one by one,
in which a bit is ﬂipped with probability p. Assume the received bits are
decoded according to majority vote.
This method cannot be applicable to qubits, however, due to the no-cloning
theorem. We have to somehow think out the way to overcome this theorem.
General references for this chapter are [1, 2, 3] and [4].
195

196
QUANTUM COMPUTING
10.2
Three-Qubit Bit-Flip Code and Phase-Flip Code
It is instructive to introduce a simple example of quantum error correcting
codes (QECC) before we consider more general theory. We closely follow
Steane [2] here.
10.2.1
Bit-Flip QECC
Suppose Alice wants to send a qubit or a serise of qubits to Bob through a
noisy quantum channel. Let |ψ⟩= a|0⟩+ b|1⟩be the state she wants to send.
If she is to transmit a serise of qubits, she sends them one by one and the
following argument applies to each of the qubits. Let p be the probability
with which a qubit is ﬂipped (|0⟩↔|1⟩), and we assume there are no other
types of errors in the channel. In other words, the operator X is applied to
the qubit with probability p, and consequently the state is mapped to
|ψ⟩→|ψ′⟩= X|ψ⟩= a|1⟩+ b|0⟩.
(10.1)
We have already seen in the previous section that this channel is described by
a quantum operation (9.31).
10.2.1.1
Encoding
To reduce the error probability, we want to mimic somehow the classical
counterpart without using a clone machine. Let us recall that the action of a
CNOT gate is
CNOT : |j0⟩→|jj⟩,
j ∈{0, 1}
(10.2)
and therefore it duplicates the control bit j ∈{0, 1} when the initial target
bit is set to |0⟩. We use this fact to triplicate the basis vectors as
|ψ⟩|00⟩= (a|0⟩+ b|1⟩)|00⟩→|ψ⟩L = a|000⟩+ b|111⟩,
(10.3)
where |ψ⟩L denotes the encoded state. The state |ψ⟩L is called the logical
qubit, while each constituent qubit is called the physical qubit. We borrow
terminologies from classical error correcting code (ECC) and call the set
C = {a|000⟩+ b|111⟩|a, b ∈C, |a|2 + |b|2 = 1}
(10.4)
the code and call each member of C a codeword. It is important to note
that the state |ψ⟩is not triplicated but only the basis vectors are triplicated.
This redundancy makes it possible to detect errors in |ψ⟩L and correct them
as we see below.
A quantum circuit which implements the encoding (10.3) is easily found
from our experience in the CNOT gate. Let us consider the circuit shown in

Quantum Error Correcting Codes
197
FIGURE 10.1
Quantum circuits to (a) encode, (b) detect bit-ﬂip error syndrome, (c) make
correction to a relevant qubit and (d) decode. The gate NX stands for the
bit-ﬂip noise. The circuit (a) belongs to Alice, while the circuits (b), (c) and
(d) belong to Bob.
Fig. 10.1 (a) whose inputs are the state |ψ⟩and two ancillary qubits in the state
|00⟩. When the target bit is |ψ⟩= |0⟩, the ancillary qubits are left unchanged
and the output is |000⟩, while when the input is |ψ⟩= |1⟩, the output is |111⟩.
By superposition principle, the input |ψ⟩|00⟩= (a|0⟩+ b|1⟩)|00⟩results in the
output |ψ⟩L = a|000⟩+ b|111⟩as promised.
10.2.1.2
Transmission
Now the state |ψ⟩L is sent through a quantum channel which introduces bit-
ﬂip error with a rate p for each qubit independently. We assume p is suﬃciently
small so that not many errors occur during the qubit transmission.
The
received state depends on in which physical qubit(s) the bit-ﬂip occurred.
Table 10.1 lists possible received states and the probabilities with which these
states are received.
10.2.1.3
Error Syndrome Detection and Correction
Now Bob has to extract from the received state which error occurred during
the qubit transmission. For this purpose, Bob prepares two ancillary qubits in
the state |00⟩as depicted in Fig. 10.1 (b) and applies four CNOT operations
whose control bits are the encoded qubits while the target qubits are Bob's
two ancillary qubits. Let |x1x2x3⟩be a basis vector Bob has received and let
A (B) be the output state of the ﬁrst (second) ancilla qubit. It is seen from

198
QUANTUM COMPUTING
TABLE 10.1
Bob receives the following
states with given probabilities.
Received state
Probability
a|000⟩+ b|111⟩
(1 −p)3
a|100⟩+ b|011⟩
p(1 −p)2
a|010⟩+ b|101⟩
p(1 −p)2
a|001⟩+ b|110⟩
p(1 −p)2
a|110⟩+ b|001⟩
p2(1 −p)
a|101⟩+ b|010⟩
p2(1 −p)
a|011⟩+ b|100⟩
p2(1 −p)
a|111⟩+ b|000⟩
p3
TABLE 10.2
States after error extraction is made and the
probabilities with which these states are produced.
State after error syndrome extraction
Probability
(a|000⟩+ b|111⟩)|00⟩
(1 −p)3
(a|100⟩+ b|011⟩)|11⟩
p(1 −p)2
(a|010⟩+ b|101⟩)|10⟩
p(1 −p)2
(a|001⟩+ b|110⟩)|01⟩
p(1 −p)2
(a|110⟩+ b|001⟩)|01⟩
p2(1 −p)
(a|101⟩+ b|010⟩)|10⟩
p2(1 −p)
(a|011⟩+ b|100⟩)|11⟩
p2(1 −p)
(a|111⟩+ b|000⟩)|00⟩
p3
Fig. 10.1 (b) that A = x1 ⊕x2 and B = x1 ⊕x3. Let a|100⟩+ b|011⟩be the
received logical qubit, for example. Note that the ﬁrst qubit state in each
of the basis vectors is diﬀerent from the second and the third qubit states.
These diﬀerences are detected by the pairs of CNOT gates in Fig. 10.1 (b).
The error extracting sequence transforms the ancillary qubits as
(a|100⟩+ b|011⟩)|00⟩→a|10011⟩+ b|01111⟩= (a|100⟩+ b|011⟩)|11⟩.
Both of the ancillary qubits are ﬂipped since x1 ⊕x2 = x1 ⊕x3 = 1 for both
|100⟩and |011⟩. The set of two bits is called the (error) syndrome, and
it tells Bob in which physical qubit the error occurred during transmission.
It is important to note that (i) the syndrome is independent of a and b and
(ii) the received state a|100⟩+ b|011⟩is left unchanged; we have detected an
error without measuring the received state! These features are common to all
QECC.
We list the results of other cases in Table 10.2. Note that among eight
possible states, there are exactly two states with the same ancilla state. Does
it mean this error extraction scheme does not work? Now let us compare
the probabilities associated with the same ancillary state. When the ancillary

Quantum Error Correcting Codes
199
FIGURE 10.2
Encoded basis vectors |000⟩and |111⟩. The thick solid line shows the action
of X = σx on the vector |000⟩, while the thick broken line shows the action of
X on |111⟩. The action of X3 = I ⊗I ⊗X takes |000⟩to |001⟩and |111⟩to
|110⟩as depicted. Observe that the intersection between thick solid lines and
thick broken lines is an empty set. The Hamming distance, to be deﬁned in
§10.4.1, between 000 and 111 is 3, which guarantees any single bit-ﬂip error
may be corrected.
state is |10⟩, for example, there are two possible received states a|010⟩+b|101⟩
and a|101⟩+b|010⟩. The former is received with probability p(1 −p)2 and the
latter with p2(1 −p). Therefore the latter probability is negligible compared
to the former for suﬃciently small p.
It is instructive to visualize what errors do to the encoded basis vectors as
depicted in Fig. 10.2. The encoded basis vectors |000⟩and |111⟩are assigned
to the opposite vertices. An action of Xi, the operator X = σx acting on the
ith qubit, takes these basis vectors to the nearest neighbor vetices, which diﬀer
from the correct basis vectors in the ith position. Note that the intersection
of the sets of vectors obtained by a single action of Xi on |000⟩and |111⟩is an
empty set. Therefore an action of a single error operator X can be corrected
with no ambiguity. It should be clear from this observation that two-qubit
encoding cannot correct single qubit error.
Now Bob measures his ancillary qubits and obtains two bits of classical
information (syndrome).
Bob applies correcting procedure to the received
state according to the error syndrome he has obtained.
Ignoring multiple
error states with small probabilities, we immediately ﬁnd that the following
action must be taken:
Error syndrome
Correction to be made
(00)
identity operation (nothing is required)
(01)
apply X3
(10)
apply X2
(11)
apply X1
(10.5)

200
QUANTUM COMPUTING
FIGURE 10.3
Explicit form of the bit-ﬂip error correction circuit. It is understood that
X0 = I and X1 = σx. ¬A stands for the negation of the bit A.
Suppose the syndrome is 01, for example. The state Bob received is likely to
be a|001⟩+ b|110⟩. Bob recovers the initial state Alice has sent by applying
X3 = I ⊗I ⊗X on the received state:
X3(a|001⟩+ b|110⟩) = a|000⟩+ b|111⟩.
Figure 10.3 depicts the explicit form of the error correction circuit.
If Bob receives the state a|110⟩+ b|001⟩, unfortunately, he will obtain
X3(a|110⟩+ b|001⟩) = a|111⟩+ b|000⟩.
In fact, for any error syndrome, Bob obtains either a|000⟩+b|111⟩or a|111⟩+
b|000⟩. The latter case occurs when and only when more than one qubit is
ﬂipped, and hence it is less likely to happen for small error rate p.
10.2.1.4
Decoding
Now that Bob has corrected an error, what is left for him is to decode the
encoded state. This is nothing but the inverse transformation of the encoding
(10.3). It can be seen from Fig. 10.1 (d) that
CNOT12CNOT13(a|000⟩+b|111⟩) = a|000⟩+b|100⟩= (a|0⟩+b|1⟩)|00⟩. (10.6)
Suppose Bob has received a state with more than one qubit ﬂipped; we will
obtain
CNOT12CNOT13(a|111⟩+b|000⟩) = a|100⟩+b|000⟩= (a|1⟩+b|0⟩)|00⟩. (10.7)

Quantum Error Correcting Codes
201
The probability with which this error happens is found from Table 10.1 as
P(error) = 3p2(1 −p) + p3 = 3p2 −2p3.
(10.8)
This error rate is less than p, the error probability of a single channel, provided
that p < 1/2. In contrast, success probability has been enhanced from 1 −p
to 1 −P(error) = 1 −3p2 + 2p3. Let p = 0.1, for example. Then the error
rate is lowered to P(error) = 0.028, while the success probability is enhanced
from 0.9 to 0.972.
10.2.1.5
Miracle of Entanglement
This example, albeit simple, contains almost all fundamental ingredients of
QECC. We prepare some redundant qubits which somehow "triplicate" the
original qubit state to be sent without violating the no-cloning theorem. Then
the encoded qubits are sent through a noisy channel, which causes a bit-ﬂip
in at most one of the qubits. The received state, which may be subject to
an error, is then entangled with ancillary qubits which detect what kind of
an error occurred during the state transmission. This results in an entangled
state

k
|A bit-ﬂip error in the kth qubit⟩⊗|corresponding error syndrome⟩,
(10.9)
set aside the state without errors. The wave function, upon the measurement
of the ancillary qubits, collapses to a state with a bit-ﬂip error corresponding
to the observed error syndrome. In a sense, syndrome measurement singles out
a particular error state which produces the observed syndrome. This principle
"measure the syndrome and single out an error" will be used repeatedly in
the rest of this chapter.
Once the syndrome is found, it is an easy task to transform the received
state back to the original state. Note that everything is done without knowing
what the origial state is.
10.2.1.6
Continuous Rotations
We have considered noise X so far. Suppose noise in the channel is charac-
terized by a continuous paramter α as
Uα = eiαX = cos αI + i sin αX,
(10.10)
which maps a state |ψ⟩to
Uα|ψ⟩= cos α|ψ⟩+ i sin αX|ψ⟩.
(10.11)
It is assumed that Uα acts on each qubit of the logical qubit independently
with probability p. The probability with which the logical qubit is received
without aﬀected by Uα is (1 −p)3 as before.

202
QUANTUM COMPUTING
Suppose Uα acts on the ﬁrst qubit, for example. Bob then receives
(Uα ⊗I ⊗I)(a|000⟩+ b|111⟩)
= cos α(a|000⟩+ b|111⟩) + i sin α(a|100⟩+ b|011⟩).
The output of the error syndrome detection circuit, before the syndrome mea-
surement is made, is an entangled state
cos α(a|000⟩+ b|111⟩)|00⟩+ i sin α(a|100⟩+ b|111⟩)|11⟩
(10.12)
(see Table 10.2). Measurement of the error syndrome yields either (00) or
(11). In the former case the state collapses to |ψ⟩= a|000⟩+ b|111⟩, and this
happens with a probability p cos2 α. In the latter case, on the other hand, the
received state collapses to X|ψ⟩= a|100⟩+ b|011⟩, and this happens with a
probability p sin2 α. Bob applies I (X) to the ﬁrst qubit to correct the error
when the syndrome readout is 00 (11). Now the error probability is given by
P(error) = p sin2 α.
It is clear that error Uα may act on the second or the third qubit. In this
way, continuous rotation Uα for any α may be corrected. In general, linearity
of a quantum circuit guarantees that any QECC, which corrects the bit-ﬂip
error X, corrects continuous error Uα too.
10.2.2
Phase-Flip QECC
Let us consider a phase-ﬂip channel. Phase ﬂip Z : |x⟩	→(−1)x|x⟩, (x ∈
{0, 1}) occurs with probability p for each qubit independently when it is sent
through a channel. We consider how to correct phase-ﬂip error mimicking the
prescription given for a bit-ﬂip error.
EXERCISE 10.2 (1) Show that UHZUH = X, where UH is the matrix
representation of the Hadamard gate.
(2) Show that Z = σz maps |+⟩to |−⟩and |−⟩to |+⟩, where
|±⟩=
1
√
2(|0⟩± |1⟩).
(3) Show that X|+⟩= |+⟩and X|−⟩= −|−⟩.
What we have learned from the above exercise is that the phase-ﬂip error
in the basis {|0⟩, |1⟩} is nothing but the bit-ﬂip error in the basis {|+⟩, |−⟩}.
This observation suggests that we encode |ψ⟩= a|0⟩+ b|1⟩into |Ψ1⟩= a| +
++⟩+b|−−−⟩by applying U ⊗3
H
on the state |Ψ0⟩= a|000⟩+b|111⟩. Now |Ψ1⟩
is sent through a noisy channel with possible phase-ﬂip errors. We assume at
most a single qubit is subject to the error.
Suppose the phase-ﬂip error acts on the ﬁrst physical qubit, for example,
when |Ψ1⟩is sent through the channel. Bob then receives a state |Ψ′
1⟩=

Quantum Error Correcting Codes
203
FIGURE 10.4
Three-qubit phase-ﬂip error QECC.
a| −++⟩+ b| + −−⟩. We found in the above exercise that a phase-ﬂip error
acts as a bit-ﬂip error in the basis |±⟩; UHZUH = X. Therefore, we need
to put the basis back from |±⟩to {|0⟩, |1⟩} by applying the second Walsh-
Hadamard transform U ⊗3
H
so that a phase-ﬂip error is recognized as a bit-ﬂip
error and we can employ the same error syndrome detection circuit as well as
the error correction circuit as those used for the bit-ﬂip error QECC.
Collecting these results, the quantum circuit for the phase-ﬂip QECC is
constructed as shown in Fig. 10.4.
EXERCISE 10.3 Show that the circuit depicted in Fig. 10.4 is able to cor-
rect also a continuous error Uβ = eiβZ acting on one of the qubits.
10.3
Shor's Nine-Qubit Code
Let us consider a more general noisy channel in which all possible single-qubit
errors occur. Namely, the following errors are now active in the channel;
Bit-Flip Error
X :
a
b

	→
 b
a

Phase-Flip Error
Z :
 a
b

	→
 a
−b

(10.13)
Phase- and Bit-Flip Error
Y :

a
b

	→

−b
a

.

204
QUANTUM COMPUTING
FIGURE 10.5
(a) Quantum circuit to transform |0⟩→|+⟩and |1⟩→|−⟩. (b) Encoding
circuit for Shor's nine-qubit QECC, which maps |ψ⟩= a|0⟩+ b|1⟩to a|0⟩L +
b|1⟩L.
Shor's nine-qubit QECC which corrects the above three types of noise is
constructed by concatenating the phase-ﬂip QECC into the bit-ﬂip QECC,
which were introduced in the previous section [5].
10.3.1
Encoding
We encode |0⟩and |1⟩as
|0⟩→|0⟩L ≡| + ++⟩, |1⟩→|1⟩L ≡| −−−⟩,
(10.14)
where
|+⟩=
1
√
2(|000⟩+ |111⟩), |−⟩=
1
√
2(|000⟩−|111⟩).
(10.15)
The encoding circuit for a codeword a|0⟩L + b|1⟩L is shown in Fig. 10.5.
EXERCISE 10.4 Show that the circuit in Fig. 10.5 (a) maps
|0⟩|00⟩	→|+⟩,
|1⟩|00⟩	→|−⟩.
(10.16)

Quantum Error Correcting Codes
205
It follows from Exercise 10.4 that the quantum circuit given in Fig. 10.5 (b)
maps (a|0⟩+ b|1⟩)|00000000⟩to a| + ++⟩+ b| −−−⟩. In fact
(a|0⟩+ b|1⟩)|00⟩→a|000⟩+ b|111⟩
→
a
√
8[(|0⟩+ |1⟩)|00⟩]⊗3 + b
√
8[(|0⟩−|1⟩)|00⟩]⊗3
→
a
√
8
(|000⟩+ |111⟩)⊗3 + b
√
8
(|000⟩−|111⟩)⊗3
= a| + ++⟩+ b| −−−⟩.
(10.17)
Now encoded logical qubits are sent through the noisy channel which causes
errors (10.13).
10.3.2
Transmission
Noise depicted by Eq. (10.13) is in action while the encoded qubit is sent
through the quantum channel.
Let p be the probability with which each
physical qubit is ﬂipped by one of the error operators in (10.13).
The logical qubit is sent intact with probability (1 −p)9. The probability
with which one of the physical qubits is aﬀected is 9p(1 −p)8, which may be
corrected by the following process. Then the probability that more than one
qubit are ﬂipped is
1 −(1 −p)9 −9p(1 −p)8 = 1 −(1 + 8p)(1 −p)8 ≃36p2,
(10.18)
where p ≪1 is assumed.
10.3.3
Error Syndrome Detection and Correction
Thanks to the superposition principle, we may consider errors in the basis
vectors |0⟩L = | + ++⟩and |1⟩L = | −−−⟩separately. We concentrate on
|0⟩L ﬁrst and consider the following example. Suppose a bit-ﬂip error occurs
in the ﬁfth qubit during transmission. Then the received state will be
|+⟩1
√
2
(|010⟩+ |101⟩)|+⟩
instead of the expected | + ++⟩. To correct this error we have to identify at
which qubit the error occurred during transmission. To this end, we introduce
two ancilla qubits to each group of three qubits as shown in Fig. 10.6. These
ancillary qubits are all set to the initial state |0⟩in the beginning. Suppose
the input state to the ith group of three qubits is |x1x2x3⟩. Then the ancilla
output states |Ai⟩and |Bi⟩are given as Ai = x1 ⊕x2 and Bi = x1 ⊕x3. Let's
come back to our example. Error did not occur in the ﬁrst group of three
qubits, and hence we measure A1 = B1 = 0 for both input states |000⟩and
|111⟩. Therefore we obtain A1 = B1 = 0. Similarly we ﬁnd A3 = B3 = 0 for

206
QUANTUM COMPUTING
the third group. For the second group of three qubits, on the other hand, we
ﬁnd A2 = 1 and B2 = 0, from which we ﬁnd a bit-ﬂip error occurred in the
ﬁfth qubit (the second qubit in the second group of three qubits). We simply
need to apply the X gate to the ﬁfth qubit to correct this error.
EXERCISE 10.5 Suppose bit-ﬂip error occurred in (1) the ﬁrst, (2) the
second or (3) the third qubit of the ﬁrst group. What is the syndrome (A1, B1)
in each case?
Next, let us look at the phase-ﬂip errors. The following exercise suggests
that the syndrome (Ai, Bi)1≤i≤3 is not able to detect phase-ﬂip errors.
EXERCISE 10.6 Suppose phase-ﬂip error occurred in the second qubit:
|0⟩L →
1
√
2(|000⟩−|111⟩)|+⟩|+⟩,
|1⟩L →
1
√
2(|000⟩+ |111⟩)|−⟩|−⟩.
Show that the output bits Ai and Bi are both 0 for all 1 ≤i ≤3.
Let us recall the phase-ﬂip error correcting code introduced in the previous
section, in which Z acts as a bit-ﬂip operator in the basis {|±⟩}. Let us check
the syndrome (A4, B4). Suppose phase-ﬂip error acted on one of the qubits
in the second group of three qubits. Now |0⟩L is received as (|+⟩(|000⟩−
|111⟩)|+⟩)/
√
2 = | + −+⟩while |1⟩L as (|+⟩(|000⟩+ |111⟩)|+⟩)/
√
2 = | −+−⟩.
Each group of three qubits, after it goes through the Hadamard gates in the
middle layer of Fig. 10.6, transforms as
|+⟩	→1
2 (|000⟩+ |011⟩+ |101⟩+ |110⟩)
|−⟩	→1
2 (|001⟩+ |010⟩+ |100⟩+ |111⟩) .
It is important to note that |+⟩is mapped to a superposition of states with
even number of 1 and |−⟩to one with odd number of 1. Let |x1x2x3⟩be
a particular component of a state after the ﬁrst Hadamard gates operate on
the input state. Then x1 ⊕x2 ⊕x3 = 0 when the input state is |+⟩, while
x1 ⊕x2⊕x3 = 1 when the input state is |−⟩. Therefore the syndrome (A4, B4)
for the example in our hands take values A4 = 1 and B4 = 0, from which we
ﬁnd a phase-ﬂip occurred in the second group of three qubits.
Readers should verify the phase-ﬂip error syndrome is summarized as shown
in Table 10.3. By measuring the syndrome (A4, B4), Bob knows for sure on
which group of qubits the phase-ﬂip operator acted, assuming there exists
only a single error.
Now Bob transforms the above state to |±⟩by applying the rightmost layer
of the Hadamard gates in Fig. 10.6.
Error syndrome has been extracted
between two successive operations of the Hadamard gates. For our example,
Bob has syndrome (10), from which he knows phase-ﬂip error occurred in the
second group. Now he operates Z on one of the three qubits in the group to
recover the input state a| + ++⟩+ b| −−−⟩.

Quantum Error Correcting Codes
207
FIGURE 10.6
Quantum circuit to detect bit-ﬂip and phase-ﬂip error syndrome and correct
the error.

208
QUANTUM COMPUTING
TABLE 10.3
States after error extraction is made.
Input to the detecting circuit
Ancillas state |A4, B4⟩
a| + ++⟩+ b| −−−⟩
|00⟩
a| −++⟩+ b| + −−⟩
|11⟩
a| + −+⟩+ b| −+−⟩
|10⟩
a| + +−⟩+ b| −−+⟩
|01⟩
a| −−+⟩+ b| + +−⟩
|01⟩
a| −+−⟩+ b| + −+⟩
|10⟩
a| + −−⟩+ b| −++⟩
|11⟩
a| −−−⟩+ b| + ++⟩
|00⟩
FIGURE 10.7
Decoding circuit for Shor's nine-qubit QECC, which maps a|+++⟩+b|−−−⟩
to (a|0⟩+ b|1⟩)|00000000⟩.
10.3.4
Decoding
The decoding circuit given in Fig. 10.7 is the inverse of the encoding circuit in
Fig. 10.5 (a). Readers should verify that it indeed maps a| + ++⟩+ b| −−−⟩
to (a|0⟩+ b|1⟩)|00000000⟩.
Although we have not proved that Shor's nine-qubit QECC also corrects Y -
errors, its validity should be clear from the identity Y = XZ (see the following
exercise).
EXERCISE 10.7 Suppose the Y -error occurs in the ﬁrst qubit of the third
group of three qubits. The state is fed into Bob's circuit in Fig. 10.6.
(1) What is the reading of the syndrome (Ai, Bi)1≤i≤3?
(2) Find the state after the ﬁrst layer of the Hadamard gates is applied to the

Quantum Error Correcting Codes
209
received state. What is the syndrome (A4, B4)?
(3) Repeat (1) and (2) when the error is a continuous rotation e−γY .
The results of this section show that Shor's nine-bit QECC corrects any
one-qubit errors, so far as it acts on a single qubit only. In general a QECC
which corrects I, X, Y and Z corrects every single-qubit error.
10.4
Seven-Qubit QECC
Shor's nine-qubit QECC is by no means the most eﬃcient QECC. Logical
qubits may be implemented with fewer physical qubits as we show in the fol-
lowing sections. We need to summarize classical error correcting codes before
we introduce general theory of QECC. See [6] for more extensive accounts of
the classical error correcting codes. The set of bit states has been denoted
simply as {0, 1} so far. Here we want to look at the same set with its ﬁeld op-
erations, multiplication and addition mod 2. For this reason, we will often use
the symbol GF(2) to denote the same set equipped with the ﬁeld operations.
Our presentation closely follows [3, 4, 1] in this and the next sections.
10.4.1
Classical Theory of Error Correcting Codes
Let us recall the simplest classical error correcting scheme, in which the bit 0
is encoded as 000 and 1 as 111. Three bits (n = 3) are used to send a single
logical bit (k = 1), in which case we say the redundancy is n −k = 2 bits.
We assume the noisy transmission channel is symmetric, i.e., i ∈GF(2) is
received as i with probability 1−p, while i is received as 1⊕i with probability
p.
Supppose Alice encodes k bits of information into a code c which is made
of n (> k) bits and sends it to a receiver Bob through a noisy channel. Bob
checks if there were errors in the transmission process by using a parity check
matrix H, which is designed in such a way that
Hct = 0
(10.19)
when there are no errors during transmission. In contrast, at least one of the
bits is ﬂipped during transmission if Hct ̸= 0. The output Hct is called the
syndrome. Bit-ﬂip occurred if a syndrome does not vanish.
Let us consider sending k = 4 bits of information by using a code of the
length n = 7. It is assumed that at most a single bit error occurs during
transmission of a codeword. We need to identify which bit has erroneously
transmitted, for which three bits are required. We assign 000 for error-free
transmission, 001 for error in x1, 010 for error in x2 and so forth. Let us write

210
QUANTUM COMPUTING
the list of three bits, except for the error-free case 000, as
001
010
. . .
111
and take the transpose of the resulting matix to obtain the parity check matrix
H =
⎛
⎝
0 0 0 1 1 1 1
0 1 1 0 0 1 1
1 0 1 0 1 0 1
⎞
⎠.
(10.20)
Let c1 = (0, 1, 1, 0, 0, 1, 1) be a code Bob receives. He applies H on ct to obtain
Hct
1 =
⎛
⎝
0
0
0
⎞
⎠.
If c2 = (0, 1, 1, 1, 0, 1, 1) is received, on the other hand, the output of the parity
check matrix is
Hct
2 =
⎛
⎝
1
0
0
⎞
⎠
and Bob knows there is an error in the code he received. Moreover, he knows
from the syndrome that the bit ﬂip error acted on the fourth bit x4, as we show
now. Let c = (x1, x2, . . . , x7) be the bit string Bob has received. Application
of H produces the syndrome
Hct =
⎛
⎝
x4 ⊕x5 ⊕x6 ⊕x7
x2 ⊕x3 ⊕x6 ⊕x7
x1 ⊕x3 ⊕x5 ⊕x7
⎞
⎠.
(10.21)
All the components in the RHS should be even numbers if all the bits are
received without error. It is found from the syndrome Bob obtained for c2
that x1, x2, x3, x5, x6 and x7 are received without error because at most a
single error is assumed. Error must have occurred in a bit x4, which is in the
ﬁrst component of the RHS of Eq. (10.21) but not in the second nor the third
components. Bob applies a NOT gate on the fourth bit of the codeword he
receives to recover the correct codeword.
EXERCISE 10.8 Suppose Bob receives a code (0, 0, 0, 1, 1, 1, 0). What is
the syndrome he will obtain after applying the parity check matrix H. Re-
cover the correct code by making error correction.
Repeat this for codes
(1, 1, 0, 1, 0, 0, 0) and (1, 1, 0, 0, 1, 1, 1).

Quantum Error Correcting Codes
211
It should be noted that the syndrome depends only on which bit has suﬀered
from error and not on the original code Alice has sent.
It should be clear that the kernel (mod 2) of H, denoted C = ker(H), is the
set of correct codewords. The condition Hct = 0 introduces three relations
among seven variables {xi}, from which we obtain dimC = 7 −3 = 4, in
agreement with the fact k = 4. The order of the set C is therefore 24 = 16.
The code space C is generated by the matrix
M =
⎛
⎜
⎜
⎝
0 0 0 1 1 1 1
0 1 1 0 0 1 1
1 0 1 0 1 0 1
1 1 1 1 1 1 1
⎞
⎟
⎟
⎠.
(10.22)
The matrix M is called the generating matrix of the error correcting code
C.
This particular code generated by the above M is called the Ham-
ming code. Note that M is obtained from H by adding the fourth row,
with all the components unity.
Vectors in C are written as vM, where
v = (i1, i2, i3, i4), ik ∈GF(2). The table for v and vM is
v
vM
v
vM
(0000) (0000000)
(1000) (0001111)
(0001) (1111111)
(1001) (1110000)
(0010) (1010101)
(1010) (1011010)
(0011) (0101010)
(1011) (0100101)
(0100) (0110011)
(1100) (0111100)
(0101) (1001100)
(1101) (1000011)
(0110) (1100110)
(1110) (1101001)
(0111) (0011001)
(1111) (0010110).
(10.23)
Let us pick out an element of the code C, which contains even number of 1.
They are
{(0000000), (1010101), (0110011), (1100110),
(0001111), (1011010), (0111100), (1101001)}.
(10.24)
Observe that they are (mod 2)-orthogonal to all the members of C.
For
example,
(1010101) · (0111100) = 0 mod 2,
(1010101) · (0010110) = 0 mod 2.
The set of eight elements in (10.24) is denoted as C⊥.
Note that they
are generated by v of the form (i1, i2, i3, 0) as (i1, i2, i3, 0)M, which justiﬁes
dimC⊥= 8. Note also that C⊥⊂C in the present case.
Our choice of M as a generating matrix for the code is clear by now. Let
us write H and M as
H =
⎛
⎝
h1
h2
h3
⎞
⎠, M =
⎛
⎜
⎜
⎝
h1
h2
h3
I
⎞
⎟
⎟
⎠,

212
QUANTUM COMPUTING
where hk is a row vector with even number of 1 and I is a row vector whose all
entries are 1. It follows from the orthogonality of C⊥with C that HM t = 0
and hence Hct = HM tvt = 0.
The elements in C −C⊥contain odd number of 1 and are explicitly given
as
{(1111111), (0101010), (1001100), (0011001),
(1110000), (0100101), (1000011), (0010110)}.
(10.25)
Suppose c1 = (x1, x2, . . . , xn) and c2 = (y1, y2, . . . , yn) are codes in C. The
Hamming distance dH(c1, c2) between c1 and c2 is deﬁned as the number of
indices i such that xi ̸= yi. In other words, the Hamming distance measures
how many bits are diﬀerent in c1 and c2.
Let c1 = (0101010) and c2 =
(0111100), for example. Their Hamming distance is dH(c1, c2) = 3. It is easy
to see that the Hamming distance satisﬁes the axioms of distance (see the
next exercise).
EXERCISE 10.9 Let dH be the Hamming distance for a k-bit code space
C. Show that
(1) dH(c, c) ≥0 for any c ∈C.
(2) dH(c1, c2) = dH(c2, c1) for any c1, c2 ∈C.
(3) dH(c1, c3) ≤dH(c1, c2) + dH(c2, c3) for any c1, c2, c3 ∈C.
The minimal distance dH(C) of the code C is deﬁned as the minimum
Hamming distance between diﬀerent elements of C:
dH(C) = min
c,c′∈C dH(c, c′).
(10.26)
EXERCISE 10.10 Show that the minimal distance of the code (10.23) is 3.
A code which encodes k bits into a bit string (codeword) with length n and
having the minimal distance d is denoted as (n, k, d). The Hamming code is
thus characterized as (7, 4, 3).
A single bit ﬂip error generates a bit string whose Hamming distance from
the original codeword is 1. Therefore we can tell for sure which codeword
is closest to the bit string containing an error (see Fig. 10.8). The original
codeword is recovered by applying a NOT gate on an appropriate bit in the
string.
It is clear that a code with the minimal distance dH(C) is able to correct
⌊(dH(C) −1)/2⌋bits of errors, where ⌊x⌋denotes the ﬂoor function [6]. It is
known that the minimal distance dH(C) satisﬁes an inequality (the Single-
ton bound)
dH(C) ≤n −k + 1,
(10.27)
where n is the codeword length and k is the number of bits to be encoded. It
is also known for an error correcting code based on GF(2) that the bound is

Quantum Error Correcting Codes
213
FIGURE 10.8
The crosses (×) denote the closest codewords in a code C, and d is the minimal
distance dH(C). A single bit error sends the codeword to a point on a circle
with the radius 1, which does not belong to the code C. The minimal distance
d must be at least 3 for single-error detection to make sense. Similarly, n-bit
error correction requires the inequality d −1 ≥2n. Compare this ﬁgure with
Fig. 10.2.
never saturated and the above equality is further limited as
dH(C) ≤n −k.
(10.28)
Exercise 10.10 shows that the Hamming code saturates the inequality (10.28).
We need to introduce three redundancy bits to attain the minimal distance
of 3 in the code space C.
10.4.2
Seven-Qubit QECC
Steane [7] and Calderbank and Shor [8] proposed a seven-qubit QECC scheme
inspired by the wisdom of classical error correcting code (7, 4, 3). We index
the seven qubits as i = 0, 1, . . . , 6.
A possible error is the bit-ﬂip error X and the phase-ﬂip error Z acting
independently on one of seven qubits. They act as Y = XZ if they heppen to
operate on a common qubit. Therefore there are 7 + 7 + 7 × 7 + 1 = 64 = 26
error types, including 1 for no errors, and at least six bits are required to
classify the syndrome.
10.4.2.1
Encoding
Let us start with some algebra. Let
M0 = X4X3X2X1, M1 = X5X3X2X0, M2 = X6X3X1X0
(10.29)
and
N0 = Z4Z3Z2Z1, N1 = Z5Z3Z2Z0, N2 = Z6Z3Z1Z0.
(10.30)
It is obvious that they satisfy M 2
i = N 2
i = I and
Mi(I + Mi) = I + Mi, [Mi, Mj] = [Ni, Nj] = 0.
(10.31)
A little extra work is required to show
[Mi, Nj] = 0
(10.32)

214
QUANTUM COMPUTING
by noting that [XiXj, ZiZj] = 0 in spite of noncommutativity XiZi = −ZiXi.
We also deﬁne the following matrices,
¯X ≡X⊗7 = X0X1X2X3X4X5X6, ¯Z ≡Z⊗7 = Z0Z1Z2Z3Z4Z5Z6.
(10.33)
It is important to note that
[ ¯X, Mi] = [ ¯X, Ni] = 0, [ ¯Z, Mi] = [ ¯Z, Ni] = 0.
(10.34)
We encode |0⟩and |1⟩into superpositions of seven-qubit states
|0⟩L =
1
√
8
(I + M0)(I + M1)(I + M2)|0⟩⊗7
=
1
√
8
(|0000000⟩+ |1010101⟩+ |0110011⟩+ |1100110⟩
+|0001111⟩+ |1011010⟩+ |0111100⟩+ |1101001⟩)
(10.35)
and
|1⟩L =
1
√
8
(I + M0)(I + M1)(I + M2)|1⟩⊗7
=
1
√
8
(I + M0)(I + M1)(I + M2) ¯X|0⟩⊗7
=
1
√
8(|1111111⟩+ |0101010⟩+ |1001100⟩+ |0011001⟩
+|1110000⟩+ |0100101⟩+ |1000011⟩+ |0010110⟩).
(10.36)
Observe that they are normalized and the binary basis vectors which comprise
|0⟩L have even number of 1, while those which comprise |1⟩L have odd number
of 1, and hence they are orthogonal. Therefore they satisfy L⟨x|y⟩L = δxy. It
is important to note, using the commutation relations among {Mi, Ni, ¯X, ¯Z},
that |0⟩L and |1⟩L are eigenvectors of Mi and Ni with all the eigenvalues +1;
Mi|x⟩L = Ni|x⟩L = |x⟩L
(x ∈GF(2)).
(10.37)
It should be also noted that basis vectors comprises |0⟩L correspond to the
codewords given in Eq. (10.24) and those comprises |1⟩L are the rest of the
codewords in Eq. (10.23). Seven qubits must be required to encode a single
logical qubit since there are more types of errors compared to the classical
counterpart.
Let us consider the encoding circuit for the coding (10.35) and (10.36). Let
us analyze the circuit shown in Fig. 10.9 to begin with. The action of the
circuit on |0⟩|ψ⟩, where |ψ⟩is an arbitrary n-qubit state, is
1
√
2 [|0⟩|ψ⟩+ |1⟩(U|ψ⟩)] =
1
√
2 (I + X ⊗U) |0⟩|ψ⟩.
(10.38)

Quantum Error Correcting Codes
215
FIGURE 10.9
Hadamard gate UH ⊗I followed by the controlled-U gate acting on |0⟩|ψ⟩
produces
1
√
2(I + X ⊗U)|0⟩|ψ⟩, where |ψ⟩is an arbitrary n-qubit state and U
is an arbitrary n-qubit gate.
FIGURE 10.10
Encoding circuit for seven-qubit QECC [3]. H stands for the Hadamard gate.
This shows that
1
√
2(I + M0) =
1
√
2(I + X4X3X2X1),
for example, is implemented as a controlled-X3X2X1 gate where the control
bit is the fourth qubit in the state UH|0⟩.
Collecting these facts, we construct the encoding circuit depicted in
Fig. 10.10.
The right three controlled-X⊗3 gates together with the three
Hadamard gates in the left implement (I +M0)(I +M1)(I +M2), which maps
|0⟩⊗7 to |0⟩L. There is a controlled-X1X2 gate in the very beginning of the
circuit, which is inert when the input (the 0th qubit) is |0⟩.
Suppose the
input is |ψ⟩= |1⟩. Then the input state of the ﬁrst controlled-X⊗3 and the
Hadamard gates is X0X1X2|0⟩⊗7. Since Xi commutes with all Mi's, we may
move X0X1X2 to the very end of the circuit to ﬁnd the output state of this

216
QUANTUM COMPUTING
circuit is X0X1X2|0⟩L. However, we ﬁnd M0M1M2 = X3X4X5X6, and hence
X0X1X2 = M0M1M2 ¯X.
Now we show
X0X1X2|0⟩L = M0M1M2 ¯X 1
√
8(I + M0)(I + M1)(I + M2)|0⟩⊗7
=
1
√
8(I + M0)(I + M1)(I + M2) ¯
X|0⟩⊗7
= |1⟩L,
(10.39)
which proves the circuit is indeed the seven-qubit QECC encoder.
10.4.2.2
Error Detection
Now our task is to identify what error occured during transmission by manip-
ulating the received qubits. Note ﬁrst that Xi, Yi, Zi commute with some of
{Mj, Nj} and anticommute with the rest. Suppose noise X0 acts on the state
|0⟩L. Then the resulting state is an eigenstate of N1 with the eigenvalue −1,
N1X0|0⟩L = −X0N1|0⟩L = −X0|0⟩L.
It is also veriﬁed that
N2X0|0⟩L = −X0|0⟩L, N0X0|0⟩L = X0|0⟩L,
MiX0|0⟩L = X0|0⟩L (i = 0, 1, 2).
Therefore the disrupted state X0|0⟩L is characterized by the eigenvalues
(1, 1, 1; 1, −1, −1) of the operators (M0, M1, M2; N0, N1, N2). This fact sug-
gests that we may use the set of these operators as the syndrome to identify
the error occured in the received qubit. To justify this conjecture, we have
to show that the same eigenvalues are assigned to X0|1⟩L. It is easy to show
from [ ¯X, Ni] = 0 this is indeed the case since
N1X0|1⟩L = N1X0 ¯X|0⟩L = −X0 ¯XN1|0⟩L = −X0|1⟩L,
where we noted that |1⟩L = ¯X|0⟩L. These observations show that X0|Ψ⟩with
|Ψ⟩= a|0⟩L + b|1⟩L (∀a, b ∈C) is an eigenvector of (M0, M1, M2; N0, N1, N2)
with the eigenvalues (1, 1, 1; 1, −1, −1).
The eigenvalues associated with Xi|Ψ⟩are +1 for all Mi's while
X0 X1 X2 X3 X4 X5 X6
N0
∗
∗
∗
∗
N1 ∗
∗
∗
∗
N2 ∗
∗
∗
∗
(10.40)

Quantum Error Correcting Codes
217
where ∗stands for the eigenvalue −1 while the empty entry denotes the eigen-
value +1. Similarly the eigenvalues associated with Zi|Ψ⟩are +1 for all Ni's
while
Z0 Z1 Z2 Z3 Z4 Z5 Z6
M0
∗
∗
∗
∗
M1 ∗
∗
∗
∗
M2 ∗
∗
∗
∗
(10.41)
It follows from Y = XZ that the eigenvalues associated with Yi|Ψ⟩are
Y0 Y1 Y2 Y3 Y4 Y5 Y6
M0
∗
∗
∗
∗
M1 ∗
∗
∗
∗
M2 ∗
∗
∗
∗
N0
∗
∗
∗
∗
N1 ∗
∗
∗
∗
N2 ∗
∗
∗
∗
(10.42)
where use has been made of the relation Yi = XiZi. Note that Mi has an
eigenvalue −1 whenever Ni has −1 and vice versa. Suppose both Ni and Mj
(i ̸= j) have eigenvalues −1. This case corresponds to a two-qubit error XiZj,
with which we will not be concerned.
It was shown above that the set of operators (M0, M1, M2; N0, N1, N2) re-
veals the syndrome. Now let us consider how they are measured. Let us ﬁrst
consider a simpler case. The syndromes of the bit-ﬂip QECC are measured
as shown in Fig. 10.1 (b). It is easy to see the measurement outcome A cor-
responds to the eigenvalue of the operator Z1Z2, while B corresponds to that
of Z1Z3. It turns out to be convenient to switch the control qubit and the
target qubit by making use of the result of Exercise 4.5. Figure 10.11 shows
FIGURE 10.11
Switching the control qubits and the target qubit.
the equivalence of the two circuits;
UCNOT = (I ⊗UH)(I ⊗|0⟩⟨0| + Z ⊗|1⟩⟨1|)(I ⊗UH),
where use has been made of the identity UHXUH = Z. Now the error syn-
drome detection circuit in Fig. 10.1 (b) takes a suggestive form given in

218
QUANTUM COMPUTING
FIGURE 10.12
Error detection circuit of the bit-ﬂip QECC with inverted controlled gates.
Note that the controlled unitary gates are Z1Z2 and Z1Z3, whose eigenvalues
ﬁx the syndrome.
Fig. 10.12. Note that the ﬁrst gate is the controlled-Z1Z2 gate, while the
second one is the controlled-Z1Z3 gate.
The above observation leads to the seven-qubit error detection circuit shown
in Fig. 10.13. The column with a product of Z's corresponds to the operator
Ni as was shown for the bit-ﬂip QECC. Let us examine the controlled-X⊗4
gates next. We susupect that they might corresponds to the operators Mi.
Let us examine the ﬁrst controlled gate in Fig. 10.13. The relevant part of
the circuit is
(I ⊗UH)(I ⊗|0⟩⟨0| + M0 ⊗|1⟩⟨1|)(I ⊗UH)|Ψ⟩|0⟩
= 1
2(I + M0)|Ψ⟩|0⟩+ 1
2(I −M0)|Ψ⟩|1⟩,
(10.43)
where |Ψ⟩is an encoded seven-qubit state with a possible sigle-qubit error
and the last qubit is the ancilla.
Recall that |Ψ⟩is an eigenvector of Mi
with the eigenvalue +1 or −1. In case the eigenvalue is +1, the output of
this part is |Ψ⟩|0⟩, while it is |Ψ⟩|1⟩if the eigenvalue is −1. Accordingly the
measurement of the ancilla reveals the eigenvalue of M0. Similarly other two
gates evaluate the eigenvalues of M1 and M2. Now we have justiﬁed that the
set of eigenvalues (i.e., the syndrome) of the received state is evaluated by the
measurement of the six ancillary qubits in Fig. 10.13.
Correction of the disrupted encoded state can be done by consulting with
Eqs. (10.40), (10.41) and (10.42).
It was shown above that the code space is a subspace of the seven-qubit
Hilbert space, in which all the eigenvalues of the six operators {Mi, Ni} are
+1.
In other words, encoded state |Ψ⟩is left invaraint under the action
of these operators; Mi|Ψ⟩= Ni|Ψ⟩= |Ψ⟩.
An error operator Ek, which
disrupts the code, is a tensor product of Pauli matrices, which anticommutes
with some of Mi and Ni. Therefore the disrupted state has eigenvalue −1
for some operators in {Mi, Ni} that anticommute with Ek. The set of the

Quantum Error Correcting Codes
219
FIGURE 10.13
Error detecting circuit of the seven-qubit QECC. The unitary gates controlled
by the ancillary qubits correspond to {Mi, Ni}, as denoted at the top of the
circuit. The readout of the six ancillary qubits ﬁxes the set of syndromes.

220
QUANTUM COMPUTING
measurement outcomes of {Mi, Ni} (syndrome) tells us which error operator
acted on the encoded state.
The Abelian (commuting) group {Mi, Ni} is
called the stabilizer [9, 10], while the subspace C(S) = {|ψ⟩∈C2n| Mi|Ψ⟩=
Ni|Ψ⟩= |Ψ⟩} is called the stabilizer code associated with S.
10.4.2.3
Decoding
Once syndromes are detected and an appropriate correction is made, we have
to decode the logical qubit so as to extract the input state |ψ⟩. This is done
by applying gates in Fig. 10.10 one by one in the reversed order and the initial
state will be reproduced in the 0th qubit.
10.4.3
Gate Operations for Seven-Qubit QECC
It is shown in the next section that there exists more eﬃcient encoding scheme,
in which merely ﬁve qubits are required to encode a single qubit state. In spite
of this, the seven-qubit QECC is advantageous over the ﬁve-qubit QECC in
that gate operations for encoded qubits are easy to implement. Let us look
at a few examples.
10.4.3.1
One-Qubit Gates
Let us start with simple examples. Suppose we introduce the ˜X gate which
acts on |0⟩L and |1⟩L as
˜X|0⟩L = |1⟩L, ˜X|1⟩L = |0⟩L.
(10.44)
This gate is implemented by ¯X = X0X1X2X3X4X5X6 since
¯X|0⟩L = ¯X 1
√
8(I + M0)(I + M1)(I + M2)|0⟩⊗7
=
1
√
8(I + M0)(I + M1)(I + M2) ¯X|0⟩⊗7
= |1⟩L,
(10.45)
where use has been made of the commutativity [ ¯X, Mi] = 0. Application of
¯X on Eq. (10.45) proves ¯X|1⟩L = |0⟩L.
Let us ﬁnd ˜Z, which satisﬁes
˜Z|0⟩L = |0⟩L, ˜Z|1⟩L = −|1⟩L.
(10.46)
Again this is implemented by ¯Z = Z0Z1Z2Z3Z4Z5Z6 since
¯Z|0⟩L =
1
√
8(I + M0)(I + M1)(I + M2) ¯Z|0⟩⊗7
= |0⟩L
(10.47)

Quantum Error Correcting Codes
221
FIGURE 10.14
(a) Seven Hadamard gates applied on the logical qubit state |x⟩L.
(b) A
circuit equivalent with (a).
and
¯Z|1⟩L =
1
√
8(I + M0)(I + M1)(I + M2) ¯Z|1⟩⊗7
= −|1⟩L,
(10.48)
where we noted that [ ¯Z, Mi] = 0 and (−1)7 = −1.
Next, we consider the Haramard gate ˜H acting on the encoded states as
˜UH|0⟩L =
1
√
2
(|0⟩L + |1⟩L), ˜UH|1⟩L =
1
√
2
(|0⟩L −|1⟩L).
(10.49)
Surprisingly, this gate is also implemented by a tensor product of seven
Hadamard gates,
˜UH = U ⊗7
H
= W7,
(10.50)
where W7 is the Walsh-Hadamard transform acting on seven qubits.
Let us consider the action of W7 on |0⟩L ﬁrst. The circuit
W7|0⟩L = W7
1
√
8(I + M0)(I + M1)(I + M2)|0⟩⊗7
given in Fig. 10.14 (a) is put in the form given in (b) by making use of the
trick introduced in Fig. 10.9 and U 2
H = I. The resulting circuit is written as
W7|0⟩L = [C0(X6X5)][C1(X6X4)][C2(X5X4)]
×[C3(X6X5X4)]UH0UH1UH2UH3|0⟩⊗7
= [C0(X6X5)UH0][C1(X6X4)UH1][C2(X5X4)UH2]
×[C3(X6X5X4)UH3]|0⟩⊗7,
(10.51)

222
QUANTUM COMPUTING
where
CiU = |0i⟩⟨0i| ⊗I + |1i⟩⟨1i| ⊗U
is the controlled-U gate with the control bit i. (The vector |xi⟩denotes the
state |x⟩of the ith qubit.) By noting the identities M0M1M2 = X3X4X5X6
and (10.38), we obtain
W7|0⟩L = 1
4(I + X0X5X6)(I + X1X4X6)
×(I + X2X4X5)(I + M0M1M2)|0⟩⊗7
= 1
4(I + M0 ¯X)(I + M1 ¯X)(I + M2 ¯X)
×(I + M0M1M2)|0⟩⊗7.
(10.52)
After expansion and factorization of the last expression, we obtain
W7|0⟩L =
1
√
8
(I + M0)(I + M1)(I + M2) 1
√
2
(I + ¯X)|0⟩⊗7
=
1
√
2(|0⟩L + |1⟩L).
(10.53)
The action of W7 on |1⟩L is easily obtained by applying W7 on Eq. (10.53)
as
W 2
7 |0⟩L = |0⟩L =
1
√
2(W7|0⟩L + W7|1⟩L),
from which we obtain
W7|1⟩L =
√
2|0⟩L −1
√
2(|0⟩L + |1⟩L) =
1
√
2(|0⟩L −|1⟩L).
(10.54)
10.4.3.2
CNOT Gate
Another surprise is the CNOT gate acting on two logical qubits is also eas-
ily implmenented with the seven-qubit QECC. One simply introduces seven
CNOT gates, U ⊗7
CNOT, connecting corresponding physical qubits in two logical
qubits as shown in Fig. 10.15. Suppose the control bit is in the state
|0⟩L =
1
√
8
⎛
⎝I +

i
Mi +

i<j
MiMj + M0M1M2
⎞
⎠|0⟩⊗7.
It follows from the linearity of U ⊗7
CNOT that each term of the above expansion
acts on |0⟩L|x⟩L independently and outputs the same state since |x⟩L is a
simultaneous eigenvector of all Mi's with all the eigenvalues +1. Let us take
M0 = X4X3X2X1 for example. We ﬁnd
U ⊗7
CNOTM0|0⟩⊗7|x⟩L = U ⊗7
CNOT|0111100⟩|x⟩L
= |0111100⟩⊗X4X3X2X1|x⟩L
= M0|0⟩⊗7 ⊗M0|x⟩L = M0|0⟩⊗7 ⊗|x⟩L.

Quantum Error Correcting Codes
223
FIGURE 10.15
The CNOT gate acting on two logical qubits is simply a product of seven
CNOT gates acting on pairs of physical qubits.
On the other hand, the target state |x⟩L is ﬂipped if the control bit is in the
state
|1⟩L =
1
√
8
⎛
⎝I +

i
Mi +

i<j
MiMj + M0M1M2
⎞
⎠|1⟩⊗7.
Take the above example of M0 again.
We obtain for the component
M0|1111111⟩, the output
U ⊗7
CNOTM0|1111111⟩|x⟩L = U ⊗7
CNOT|1000011⟩|x⟩L
= |1000011⟩⊗X6X5X0|x⟩L
= M0|1111111⟩⊗¯XM0|x⟩L
= M0|1111111⟩⊗¯X|x⟩L.
Clearly the similar output is obtained for other components in the expansion
of |1⟩L.
In summary, we have proved that
U ⊗7
CNOT = |0⟩LL⟨0| ⊗I + |1⟩LL⟨1| ⊗¯X.
(10.55)
Note that logical one-qubit gates are made of seven single-qubit gates acting
on each physical qubit independently and the logical CNOT gates are made of
seven CNOT gates acting on pairs of two qubits, one from the logical control
bit and the other from the logical target bit. Since there are only one qubit
involved in each logical qubit, any single qubit error during the gate operation

224
QUANTUM COMPUTING
may be corrected by the QECC. This desirable property of non-propagating
error is called the fault tolerance, which is a key component in reliable
quantum computing.
10.5
Five-Qubit QECC
DiVincenzo and Shor further reduced the number of qubits required for QECC
[11].
Suppose n qubits are used to implement one logical qubit with the basis
states |0⟩L and |1⟩L. There are 3n operators Xi, Yi and Zi (0 ≤i ≤n −1)
and correspondingly 3n single-qubit errors. Each operator maps the basis
{|0⟩L, |1⟩L} to one of {Xi|0⟩L, Xi|1⟩L}, {Yi|0⟩L, Yi|1⟩L} and {Zi|0⟩L, Zi|1⟩L},
each of which deﬁnes a two-dimensional subspace of 2n-dimensional vector
space associated with the n-qubit system.
Therefore n must satisfy 2n ≥
2(3n + 1), 1 for the nondisrupted basis, or equivalently
2n−1 ≥3n + 1.
(10.56)
This inequality is saturated with n = 5. In other words, n = 5 is the optimal
number to correct all types of single-qubit errors.
10.5.1
Encoding
Our exposition goes almost parallel to the previous seven-qubit encoding. Let
us consider the algebra of the following operators,
M0 = X2X3Z1Z4, M1 = X3X4Z2Z0
M2 = X4X0Z3Z1 M3 = X0X1Z4Z2.
(10.57)
EXERCISE 10.11 (1) Show that M 2
i = I. The eigenvalues of these opera-
tors are therefore ±1.
(2) Show that [Mi, Mj] = 0 ∀i, j .
(3) Let M4 = X1X2Z0Z3. Show that M4 = M0M1M2M3. (M4 is not an inde-
pendent operator. The eigenvalues of M0, M1, M2 and M3 ﬁx the eigenvalue
of M4 uniquely.)
Now we introduce the following encoding of logical qubit basis vectors,
|0⟩L = 1
4(I + M0)(I + M1)(I + M2)(I + M3)|00000⟩
= 1
4

|00000⟩+ |11000⟩+ |01100⟩+ |00110⟩+ |00011⟩+ |10001⟩

Quantum Error Correcting Codes
225
−|10100⟩−|01010⟩−|00101⟩−|10010⟩−|01001⟩
−|11110⟩−|01111⟩−|10111⟩−|11011⟩−|11101⟩

(10.58)
and
|1⟩L = 1
4(I + M0)(I + M1)(I + M2)(I + M3)|11111⟩
= 1
4

|11111⟩+ |00111⟩+ |10011⟩+ |11001⟩+ |11100⟩+ |01110⟩
−|01011⟩−|10101⟩−|11010⟩−|01101⟩−|10110⟩
−|00001⟩−|10000⟩−|01000⟩−|00100⟩−|00010⟩

.
(10.59)
It is easy to see that these vectors are orthonormal. Moreover they are si-
multaneous eigenvectors of {Mi} with all the eigenvalues +1; Mi|x⟩L = |x⟩L.
An input state |ψ⟩= a|0⟩+ b|1⟩is encoded into the ﬁve-qubit state |Ψ⟩=
a|0⟩L + b|1⟩L.
Next, let us work out a quantum circuit which implements this encoding.
We again use the identity
(|0⟩⟨0| ⊗I + |1⟩⟨1| ⊗U)(UH ⊗I)|0⟩|Ψ⟩=
1
√
2(I + X ⊗U)|0⟩|Ψ⟩
(10.60)
depicted in Fig. 10.9. Let us consider encoding |0⟩L ﬁrst. We rewrite
1
√
2
(I + M3)|0⟩⊗5 =
1
√
2
(I + X0X1Z2Z4)|0⟩⊗5
=
1
√
2
(|01⟩⟨01| ⊗I + |11⟩⟨11| ⊗X0Z2Z4)UH1|0⟩⊗5
(10.61)
by making use of Eq. (10.60). Here UH1 is the Hadamard gate acting on qubit
1. Now
1
√
2(I + M3)|0⟩⊗5 has been implemented as the controlled-X0Z2Z4
gate with the control qubit 1.
Let us consider the action of
1
√
2(I + M2) next. We write the state
1
√
2(I +
M3)|0⟩⊗5 as |04⟩|φ⟩, where we noted that the state of qubit 4 is |0⟩and wrote
the state of the other qubits collectively as |φ⟩. It is also implemented as a
controlled gate as
1
2(I + M2)(I + M3)|0⟩⊗5 = 1
2(I + M2)|04⟩|φ⟩
= 1
2(I + X0X4Z1Z3)|04⟩|φ⟩
= (|04⟩⟨04| ⊗I + |14⟩⟨14| ⊗X0Z1Z3)
×UH4|04⟩|φ⟩.
(10.62)
Note that the fourth qubit has been chosen to be the control bit since the
initial control qubit state must be |0⟩for the identity (10.60) to be applicable.

226
QUANTUM COMPUTING
We write the resulting state of this gate operation as |03⟩|φ′⟩by noting that
the third qubit state is |0⟩. Here |φ′⟩collectively denotes the state of the other
qubits.
Now we repeat the above substitution further for
1
√
2(I + M1) and
1
√
2(I +
M0). The ﬁrst operation is replaced by
1
√
2
(|03⟩⟨03| ⊗I + |13⟩⟨13| ⊗X4Z0Z2)UH3|03⟩|φ′⟩
(10.63)
by taking the qubit 3 as the control bit. We write the state after this operation
as |02⟩|φ′′⟩by noting that the second qubit state is |0⟩.
Now the second
operation is replaced by
1
√
2(|02⟩⟨02| ⊗I + |12⟩⟨12| ⊗X3Z1Z4)UH2|02⟩|φ′′⟩.
(10.64)
Now we have shown how |0⟩L is obtained from |0⟩⊗5 by applying four con-
trolled gates.
We use the identity
M3M2M0 = −X1X2X3X4Z2Z3
(10.65)
to generate |1⟩L when the qubit 0 is in the state |1⟩. We note that
|11111⟩= −M3M2M0|10000⟩= M3M2M0Z0|10000⟩.
(10.66)
Suppose the encoding circuit for |0⟩L acts on a state
Z0(a|0⟩+ b|1⟩)|0000⟩= a|00000⟩−b|10000⟩.
Then the circuit outputs
1
4(I + M0)(I + M1)(I + M2)(I + M3)(a|0⟩−b|1⟩)|0⟩⊗4
= 1
4(I + M0)(I + M1)(I + M2)(I + M3)(a|00000⟩+ bM3M2M0|11111⟩)
= a1
4(I + M0)(I + M1)(I + M2)(I + M3)|00000⟩
+bM3M2M0
1
4(I + M0)(I + M1)(I + M2)(I + M3)|11111⟩
= a|0⟩L + bM3M2M0|1⟩L = a|0⟩L + b|1⟩L,
(10.67)
where we used the facts [Mi, Mj] = 0 and |1⟩L is an simultaneous eigenvector
of Mi with all the eigenvalues 1.
This shows that the circuit
U5-encoding = 1
4(I + M0)(I + M1)(I + M2)(I + M3)Z0,
(10.68)
depicted in Fig. 10.16 is the correct encoding circuit which acts as
U5-encoding(a|0⟩+ b|1⟩)|0000⟩= a|0⟩L + b|1⟩L.
(10.69)
.

Quantum Error Correcting Codes
227
FIGURE 10.16
Encoding circuit for ﬁve-qubit QECC.
10.5.2
Error Syndrome Detection
The eigenvalues of four operators {Mi} are used to discriminate possible
single-qubit disruptions in codewords. Let us recall that |0⟩L, |1⟩L and linear
combinations thereof are the eigenvectors of Mi with all the eigenvalues +1.
The eigenvalues of {Mi} corresponding to single-qubit errors are [11, 3]
I X0 X1 X2 X3 X4 Y0 Y1 Y2 Y3 Y4 Z0 Z1 Z2 Z3 Z4
M0
∗
∗
∗
∗
∗
∗
∗
∗
M1
∗
∗
∗
∗
∗
∗
∗
∗
M2
∗
∗
∗
∗
∗
∗
∗
∗
M3
∗
∗
∗
∗
∗
∗
∗
∗
(10.70)
where ∗denotes the eigenvalue −1, while the eigenvalue +1 is denoted by an
empty entry. The disrupted state X0(a|0⟩L + b|1⟩L), for example, produces
the syndrome (M0, M1, M2, M3) = (+1, −1, +1, +1).
The error detection circuit is constructed following the strategy employed in
the seve-qubit QECC. Figure 10.17 shows the error detection circuit associated
with our encoding scheme.
Correction of the disrupted encoded state can be done by consulting with
Eq. (10.70).
10.5.2.1
Decoding
Once syndrome is determined and an appropriate correction is made, we have
to decode the logical qubit so as to extract the input state |ψ⟩. This is done
by applying gates in Fig. 10.16 one by one in the reversed order and the initial
state will be reproduced in the 0th qubit.

228
QUANTUM COMPUTING
FIGURE 10.17
Error syndrome detecting circuit of the ﬁve-qubit QECC. The unitary gates
controlled by the ancillary qubits correspond to {Mi}, as denoted at the top
of the circuit. The readout of the four ancillary qubits detects the syndrome.
References
[1] M. A. Neilsen and I. L. Chuang, Quantum Computation and Quantum
Information, Cambridge University Press (2000).
[2] A. M. Steane, eprint, quant-ph/0304016 (2003).
[3] N. D. Mermin, Quantum Computer Science: An Introduction, Cam-
bridge University Press (2007).
[4] A. Hosoya, Lectures on Quantum Computation (in Japanese), Science
Sha (1999).
[5] P. W. Shor, Phys. Rev. A 52, 2493 (1995).
[6] F. J. MacWilliams and N. J. A. Sloane, The Theory of Error-Correcting
Codes, North-Holland, Amsterdam (1977).
[7] A. M. Steane, Phys. Rev. Lett. 77, 793 (1996).
[8] A. R. Calderbank and P. W. Shor, Phys. Rev. A 54, 1098 (1996).
[9] D. Gottesman, Phys. Rev. A 54, 1862 (1996).

Quantum Error Correcting Codes
229
[10] A. R. Calderbank et al., Phys. Rev. Lett. 78, 405 (1997).
[11] D. P. DiVincenzo and P. W. Shor, Phys. Rev. Lett. 77, 3260 (1996).


Part II
Physical Realizations of
Quantum Computing
231


11
DiVincenzo Criteria
11.1
Introduction
We have learned in Part I that information may be encoded and processed in
a quantum-mechanical way. This new discipline called quantum information
processing (QIP) is expected to solve a certain class of problems that current
digital computers cannot solve in a practical time scale. Although a small-
scale quantum information processor, such as quantum key distribution, is
already available commercially, physical realization of large-scale quantum
information processors is still beyond the scope of our currently available
technology.
Classical information is encoded in a bit, which takes on values 0 and 1.
We have seen in Part I that 0 and 1 in the classical information processing are
replaced by the orthonormal vectors |0⟩and |1⟩of a two-dimensional com-
plex vector space in the quantum information theory. Here information is
encoded in a quantum bit (qubit), which takes the form |ψ⟩= α|0⟩+ β|1⟩,
where |α|2 + |β|2 = 1. A quantum computer should have at least 102 ∼103
qubits to be able to execute algorithms that are more eﬃcient than their
classical counterparts. Although a quantum computer with several qubits is
already available for some physical systems, actual construction of a working
quantum computer is still a challenging task. DiVincenzo proposed necessary
conditions, the so-called DiVincenzo criteria, that any physical system has
to fulﬁll to be a candidate for a viable quantum computer [1]. In the next
section, we outline these conditions as well as two additional criteria for net-
workability. The DiVincenzo criteria have been analyzed for several physical
realizations, and the results of such analyses, as of the year 2004, are sum-
marized in [2]. The following sections summarize the overview article by M
Nakahara and M M Salomaa in [2].
233

234
QUANTUM COMPUTING
11.2
DiVincenzo Criteria
In his inﬂuential article [1], DiVincenzo proposed ﬁve criteria that any physical
system must satisfy to be a viable quantum computer. We summarize the
relevant parts of these criteria, which may be helpful in reading subsequent
chapters in Part II.
1. A scalable physical system with well-characterized qubits.
To begin with, we need a quantum register made of many
qubits to store information. Recall that a classical computer
also requires memory to store information. The simplest way
to realize a qubit physically is to use a two-level quantum
system. For example, an electron, a spin 1/2 nucleus or two
mutually orthogonal polarization states (horizontal and ver-
tical, for example) of a single photon can be a qubit.
We
may also employ a two-dimensional subspace, such as the
ground state and the ﬁrst excited state, of a multi-dimensional
Hilbert space, such as atomic energy levels. In the latter case,
special care must be taken to avoid leakage of the state to
the other part of the Hilbert space.
In any case, the two
states are identiﬁed as the basis vectors, |0⟩and |1⟩, of the
Hilbert space so that a general single qubit state takes the
form |ψ⟩= α|0⟩+ β|1⟩, where |α|2 + |β|2 = 1.
A multi-
qubit state is expanded in terms of the tensor products of
these basis vectors. Each qubit must be separately address-
able. Moreover it should be scalable up to a large number of
qubits. The two-dimensional vector space of a qubit may be
extended to be three-dimensional (qutrit) or, more generally,
d-dimensional (qudit).
A system may be made of several diﬀerent kinds of qubits.
Qubits in an ion trap quantum computer, for instance, may
be deﬁned as: (1) hyperﬁne/Zeeman sublevels in the electronic
ground state of ions (2) a ground state and an excited state of
a weakly allowed optical transition and (3) normal mode of ion
oscillation. A similar scenario is also proposed for Josephson
junction qubits, in which two ﬂux qubits are coupled through
a quantized LC circuit. Simultaneous usage of several types
of qubits may be the most promising way to achieve a viable
quantum computer.
2. The ability to initialize the state of the qubits to a simple ﬁducial state,
such as |00 . . .0⟩.

DiVincenzo Criteria
235
Suppose you are not able to reset your (classical) computer.
Then you will never trust the output of some computation
even though processing is done correctly. Therefore initial-
ization is an important part of both quantum and classical
information processing.
In many realizations, initialization may be done simply by
cooling to put the system in its ground state.
Let ΔE be
the diﬀerence between energies of the ﬁrst excited state and
the ground state. The system is in the ground state with a
good precision at low temperatures satisfying kBT ≪ΔE.
Alternatively, we may use projective measurement to project
the system onto a desired state. In some cases, we observe the
system to be in an undesired state upon such measurement.
Then we may transform the system to the desired ﬁducial
state by applying appropriate gates.
For some realizations, such as liquid state NMR, however, it
is impossible to cool the system down to extremely low tem-
peratures. In those cases, we are forced to use a thermally
populated state as an initial state. This seemingly diﬃcult
problem may be amended by several methods if some compu-
tational resources are sacriﬁced. We then obtain an "eﬀective"
pure state, the so-called pseudopure state, which works as an
initial state for most purposes.
A continuous fresh supply of qubits in a speciﬁed state, such as
|0⟩, is also an important requirement for successful quantum
error correction as we have seen in Chapter 10.
3. Long decoherence times, much longer than the gate operation time.
The hardware of a classical computer lasts long, on the order
of 10 years. It lasts so long that we often have a problem
giving up a healthy computer when the operating system is
superseded by a new one. Things are totally diﬀerent for a
quantum computer, which is fragile against external distur-
bance called decoherence, as we discussed in Chapter 9.
Decoherence is probably the hardest obstacle to building a
viable quantum computer. Decoherence means many aspects
of quantum state degradation due to interactions of the system
with the environment and sets the maximum time available
for quantum computation. Roughly speaking, this is the time
required for a pure state
ρ0 = (α|0⟩+ β|1⟩)(α∗⟨0| + β∗⟨1|)
to "decay" into a mixed state of the form
ρ = |α|2|0⟩⟨0| + |β|2|1⟩⟨1|.

236
QUANTUM COMPUTING
Decoherence time itself is not very important. What matters
is the ratio "decoherence time/gate operation time." For some
realizations, decoherence time may be as short as ∼μs. This
is not necessarily a big problem provided that the gate opera-
tion time, determined by the Rabi oscillation period and the
qubit-coupling strength, for example, is much shorter than the
decoherence time. If the typical gate operation time is ∼ps,
say, the system may execute 1012−6 = 106 gate operations be-
fore the quantum state decays. We quote the number ∼105
of gates required to factor 21 into 3 and 7 by using Shor's
algorithm [3].
There are several ways to eﬀectively prolong decoherence time.
A closed-loop control method incorporates quantum error cor-
recting codes (QECC) introduced in Chapter 10, while an
open-loop control method incorporates noiseless subsystem
[4] and decoherence free subspace (DFS) [5]. Both of these
methods, however, require extra qubits.
4. A "universal" set of quantum gates.
Suppose you have a classical computer with a big memory.
Now you have to manipulate the data encoded in the memory
by applying various logic gates. You must be able to apply
arbitrary logic operations on the memory bits to carry out
useful information processing. It is known that the NAND
gate is universal, i.e., any logic gates may be implemented
with NAND gates.
Let H(γ(t)) be the Hamiltonian of an n-qubit system under
consideration, where γ(t) collectively denotes the control pa-
rameters in the Hamiltonian. The time-development operator
of the system is
U[γ(t)] = T exp

−i
ℏ
 T
H(γ(t))dt

∈U(2n),
where T is the time-ordering operator. Our task is to ﬁnd the
set of control parameters γ(t), which implements the desired
gate Ugate as U[γ(t)] = Ugate. Although this "inverse prob-
lem" seems to be diﬃcult to solve, a theorem by Barenco et
al., presented in Chapter 4, guarantees that any U(2n) gate
may be decomposed into single-qubit gates ∈U(2) and CNOT
gates [6]. Therefore it suﬃces to ﬁnd the control sequences
to implement U(2) gates and a CNOT gate to construct an
arbitrary gate. Note that a general unitary gate in U(2n) is
written as a product of an SU(2n) gate and a physically irrel-
evant U(1)-phase. Therefore we do not have to worry about

DiVincenzo Criteria
237
the overall phase, and it suﬃces to concentrate on equiva-
lent SU(2n) gates. This observation is noteworthy since the
NMR Hamiltonian, for example, is traceless and is able to
generate SU(2n) matrices only. Single-qubit gates are easily
implemented if the one-qubit part of the Hamiltonian assumes
two of the su(2) generators by properly choosing the control
parameters, where su(2) stands for the Lie algebra of SU(2).
Implementation of a CNOT gate in any realization is consid-
ered to be a milestone in this respect. Note, however, that
any two-qubit gates, which are neither a tensor product of
two one-qubit gates nor a SWAP gate, work as a component
of a universal set of gates [7].
Quantum circuit implementation requires fewer steps if multi-
qubit gates acting on n (≥3) qubits are employed as modules
[3].
5. A qubit-speciﬁc measurement capability.
The result of classical computation must be displayed on a
screen or printed on a sheet of paper to readout the result.
Although the readout process in a classical computer is re-
garded as too trivial a part of computation, it is a vital part
in quantum computing.
The state after an execution of a quantum algorithm must
be measured to extract the result of the computation. The
measurement process depends heavily on the physical sys-
tem under consideration.
For most realizations, projective
measurements are the primary method to extract the out-
come of a computation.
In liquid state NMR, in contrast,
a projective measurement is impossible, and we have to re-
sort to ensemble averaged measurements.
This may cause
a problem in some cases. Suppose the system is in the state
|ψ⟩= (|00⟩+|11⟩)/
√
2, for example. The outcome of a projec-
tive measurement of |ψ⟩is |00⟩with the probability 1/2. The
ensemble averaged measurement, on the other hand, yields
both |00⟩and |11⟩with an equal weight. Another character-
istic of ensemble mesasurement is that it is possible to mea-
sure noncommuting observables, such as σx and σy, simulta-
neously.
Measurement in general has no 100% eﬃciency due to deco-
herence, gate operation error and many more reasons. If this
is the case, we have to repeat the same computation many
times to achieve reasonably high reliability.
Moreover, we should be able to send and store quantum information to
construct a quantum data processing network. This "networkability" requires

238
QUANTUM COMPUTING
following two additional criteria to be satisﬁed.
6. The ability to interconvert stationary and ﬂying qubits.
Some realizations are excellent in storing quantum informa-
tion, while long-distance transmission of quantum information
might require diﬀerent physical resources. It may happen that
some system has a Hamiltonian which is easily controllable
and is advantageous in executing quantum algorithms. Com-
pare this with a current digital computer, in which the CPU
and the system memory are made of semiconductors while a
hard disk drive is used as a mass storage device. Therefore
a working quantum computer may involve several kinds of
qubits and we are forced to introduce distributed quantum
computing. Interconverting ability is also important in long-
distance quantum teleportation using quantum repeaters.
7. The ability to faithfully transmit ﬂying qubits between speciﬁed locations.
Needless to say, this is an indispensable requirement for quan-
tum communication such as quantum key distribution. This
condition is also important in distributed quantum computing
mentioned above.
The DiVincenzo criteria are not necessarily the gospel, and some condi-
tions can be relaxed. For example, it is possible to replace unitary gates by
irreversible non-unitary gates generated by measurements. This idea is al-
ready implemented in linear optics quantum computation [8]. An extreme in
this approach must be the "one-way quantum computing," where conditional
measurements send an initial "cluster state" to the ﬁnal desired state [9].
There have also been active discussions concerning suﬃciency of the criteria
and what comes beyond the DiVincenzo criteria. Here is the list of some
proposals:
1. Implementation of decoherence-free subsystems/subspaces
2. Implementation of quantum error correction
3. Fault-tolerant quantum computing and
4. Topologically protected qubits.
Gottesman's article "Requirements and Desiderata for Fault-Tolerant
Quantum Computing: Beyond the DiVincenzo Criteria"[10] also discusses
requirements for fault-tolerant quantum computing such as
1. Low gate error rates
2. Ability to perform operations in parallel

DiVincenzo Criteria
239
3. A way of remaining in, or returning to, the computational Hilbert space
4. A source of fresh initialized qubits during the computation and
5. Benign error scaling: error rates that do not increase as the computer
gets larger, and no large-scale correlated errors.
It also lists "additional desiderata" for a practical quantum computer such as
1. Ability to perform gates between distant qubits
2. Fast and reliable measurement and classical computation
3. Little or no error correlation (unless the registers are linked by a gate)
4. Very low error rates
5. High parallelism
6. An ample supply of extra qubits and
7. Even lower error rates.
Many of the above conditions are necessary for quantum error corrections to
work reasonably well.
11.3
Physical Realizations
There are numerous physical systems proposed as possible candidates for a
viable quantum computer to date [11]. Here is the list of the candidates;
1. Liquid-state/solid-state NMR/ENDOR
2. Trapped ions
3. Neutral atoms in optical lattice
4. Cavity QED with atoms
5. Linear optics
6. Quantum dots (spin-based, charge-based)
7. Josephson junctions (charge, ﬂux and current-biased qubits)
8. Electrons on liquid helium surface

240
QUANTUM COMPUTING
and other unique realizations.
Subsequent chapters in this book give detailed accounts of some of these re-
alizations in the light of the DiVincenzo criteria. [12] also introduces the above
physical realizations. The ARDA QIST roadmap [11] evaluates each of these
realizations from the same viewpoints. The roadmap is extremely valuable
for the identiﬁcation and quantiﬁcation of progress in this multidisciplinary
ﬁeld.
References
[1] D. P. DiVincenzo, Fortschr. Phys. 48, 771 (2000).
[2] M. Nakahara, S. Kanemitsu, M. M. Salomaa and S. Takagi (eds.), Phys-
ical Realization of Quantum Computing: Are the DiVincenzo Criteria
Fulﬁlled in 2004? World Scientiﬁc, Singapore (2006).
[3] J. J. Vartiainen et al., Phys. Rev. A 70, 012319 (2004).
[4] E. Knill, R. Laﬂamme and L. Viola, Phys. Rev. Lett. 84, 2525 (2000);
P. Zanardi, Phys. Rev. A 63, 012301 (2001); W. G. Ritter, Phys. Rev.
A 72, 012305 (2005).
[5] G. M. Palma, K. A. Suominen and A. K. Ekert, Proc. R. Soc. London A
452, 567 (1996); L. M. Duan and G. C. Guo, Phys. Rev. Lett. 79, 1953
(1997); P. Zanardi and M. Rasetti, Phys. Rev. Lett. 79, 3306 (1997);
D. A. Lidar, I. L. Chuang and K. B. Whaley, Phys. Rev. Lett. 81, 2594
(1998); P. Zanardi, Phys. Rev. A 60, R729 (1999); D. Bacon, D. A.
Lidar and K. B. Whaley, Phys. Rev. A 60, 1944 (1999).
[6] A. Barenco et. al., Phys. Rev. A 52, 3457 (1995).
[7] D. P. DiVincenzo, Phys. Rev. A 51, 1015 (1995).
[8] E. Knill, R. Laﬂamme and G. J. Milburn, Nature 409, 46 (2001).
[9] R. Raussendorf and H. J. Briegel, Phys. Rev. Lett. 86, 5188 (2001).
[10] D. Gottesman,
http://www.perimeterinstitute.ca/personal/dgottesman/FTreqs.ppt.
See also D. Aharonov and M. Ben-Or, quant-ph/9906129 and J. Preskill,
quant-ph/9712048.
[11] http://qist.lanl.gov/
[12] G. Chen et al., Quantum Computing Devices; Principles, Designs, and
Analysis, Chapman & Hill/CRC (2007).

12
NMR Quantum Computer
12.1
Introduction
The NMR quantum computer is one of the most established systems among
many physical realizations of a quantum computer. In spite of its peculiar
character associated with mixed states and lack of scalability, it still works
as a prototypical quantum computer with at most 10 qubits.
We should
point out that it is the only quantum computer commercially available at the
time of writing this book. For these reasons, an NMR quantum computer is
introduced as one of the ﬁrst examples of a physical system on which we can
execute small-scale quantum algorithms. Qubits in this realization are nuclei
with spin 1/2. Molecules with a certain number of such nuclei are employed
as a quantum register. The system is made of a macroscopic number (∼1020)
of moleclues in thermal equilibrium, and we have to take care of these aspects
in preparation of a state and measurements as explained in this chapter. Our
exposition follows [1] and [2]. Other useful review is [3].
We employ the symbol
Ik = σk
2
(k = x, y, z)
(12.1)
throughout this chapter, which is a standard notation in the NMR community.
We restrict ourselves within liquid state NMR in the present chapter.
12.2
NMR Spectrometer
NMR is a popular measurement instrument in physics, chemistry, pharma-
cology, medicine and many other areas. Recently it has been recognized that
NMR is also the most convenient system on which we can execute quantum al-
gorithms. In the present section, we introduce the relevant aspects of an NMR
spectrometer so that the reader may construct his/her own NMR quantum
computer.
241

242
QUANTUM COMPUTING
12.2.1
Molecules
Molecules with a certain number of spin 1/2 nuclei are required to construct
an NMR quantum computer. It is tempting to think that a spin 1 nucleus or
a higher spin nucleus realizes a qutrit or a qudit more generally. It is known,
however, that these higher spin nuclei have very short decoherence times and
are not suitable as computational resources. Table 12.1 lists typical molecules
used in NMR quantum computer experiments to date. It also lists relevant
references. It should be noted that the nucleus of an ordinary carbon atom
12C has no spin and it must be replaced by 13C, whose nucleus has spin 1/2.
TABLE 12.1
Molecules often used in liquid state NMR quantum computation.
Their molecular structures are shown in Fig. 12.1.
Two-qubit molecules
Molecule
Qubits
References
13C-labelled chloroform
H and 13C
[4], [5]
Partially deuterated cytosine
Two 1H
[6], [7]
Three-qubit molecules
Molecule
Qubits
References
13C labelled carbons in alanine
Three 13C
[8], [9]
Trichloroethylene
Two 13C and one 1H
[8], [10]
Bromotriﬂuoroethylene
Three 19F
[11]
Five-qubit molecules
Molecule
Qubits
Reference
Pentaﬂuorobutadienl
cyclopentadienyldicar-
bonyliron complex
Five 19F
[12]
Seven-qubit molecules
Molecule
Qubits
Reference
Perﬂuorobutadienyl
iron
complex with inner two
carbons 13C-labelled
Five 19F and two 13C
[13]
Molecules have to be put in a glass tube before they are loaded in the
sample chamber of the equipment. Figure 12.2 shows a sample of carbon-13
labelled chloroform in a test tube. It is diluted in a solvent d-6 acetone.
12.2.2
NMR Spectrometer
A test tube containing molecules is placed in an NMR spectrometer. It is un-
der a strong magnetic ﬁeld B0 on the order of 10 T, which deﬁnes well-deﬁned
spin-up and spin-down eigenstates of each nucleus. The energy diﬀerence be-
tween two spin states is ℏγB0 ≡ℏω0, where γ is the gyromagentic ratio of

NMR Quantum Computer
243
FIGURE 12.1
Structure of molecules listed in Table 12.1. Nuclei working as qubits are in-
dicated in boldface. (a) Chloroform. (b) Partially deuterated cytosine. (c)
13C labelled carbons in alanine. (d) Trichloroethylene. (e) Pentaﬂuorobu-
tadienl cyclopentadienyldicarbonyliron complex. (f) Perﬂuorobutadienyl iron
complex with the inner two carbons 13C-labelled.
the nucleus and ω0 is called the Larmor frequency. The direction of B0 is
taken as the z-axis throughout this chapter.
A radio frequency (rf) magnetic ﬁeld B1(t) perpendicular to B0 is applied
through a coil to control the spin state of a nucleus. It has been shown in §2.2
that a resonant rf ﬁeld induces the Rabi oscillation which controls the spin
state. It selectively accesses each spin by tuning its rf frequency ωrf with the
Larmor frequency of the target nucleus. The amplitude B1, the frequency ωrf,
the phase φ and the pulse shape (square-well, Gaussian and so on) are control-
lable parameters. The same coil is also used to pick up signals from rotating
spins through magnetic induction when measurement is done. See §12.6 for
details of measurements. This measurement is not a projective measurement,
as was remarked in the beginning of this chapter. The measurement outcome
is an ensemble average of an observable and is called an ensemble measure-
ment. It should be noted that ensemble measurement is non-demolishing.
Moreover, quantum mechanically non-commuting variables may be measured
simultaneously if ensemble measurement is employed. Taking advantage of
this fact, Grover's search algorithm may be further accelerated if ensemble
measurements are available [14]. We can arrange several coils when operating
several nuclear species simultaneously. Each coil produces rf pulses for a par-
ticular nuclear species and receives induction signals from them. Figure 12.3
shows the schematic diagram of the setup.

244
QUANTUM COMPUTING
FIGURE 12.2
Trichloroethylene molecules in a test tube diluted in d-6 acetone. Courtesy of
Yasushi Kondo, Kinki University, Japan.
FIGURE 12.3
Test tube with a macroscopic number of molecules is placed in a strong static
ﬁeld B0 and an rf magnetic ﬁeld B1(t) generated by a pair of rf coils.
Figure 12.4 shows the whole system of an NMR spectrometer. The pa-
rameters (amplitude, frequency, phase and pulse shape) of rf pulses to control
spins are speciﬁed by the sequencer in the spectrometer. A sequence of pulses,
namely a sequence of these parameters, is programmed beforehand according
to a quantum algorithm to be executed and fed to the host computer in the
beginning of an experiment.
Figure 12.5 shows the actual NMR spectrometer used to obtain the exper-
imental data shown in this chapter.

NMR Quantum Computer
245
FIGURE 12.4
Schematic diagram of an NMR spectrometer. The test tube and the coils in
Fig. 12.3 are in the right-most unit.
12.3
Hamiltonian
12.3.1
Single-Spin Hamiltonian
We are exclusively concerned with room-temperature liquid state NMR in
this chapter. Due to rapid random motion of molecules in a liquid at room
temperature, both rotational and translational intermolecular interactions are
averaged to vanish, and each molecule may be regarded as being isolated from
other molecules.
Let us consider a nucleus with spin 1/2 in a strong static magnetic ﬁeld
B0. A typical value of B0 employed for quantum computing is on the order
of 10 T. Its direction is ﬁxed along the z-axis as we mentioned previously.
The Hamiltonian of this nucleus is
H0 = −ℏγB0 · I = −ℏω0Iz,
(12.2)
where γ is the nuclear gyromagnetic ratio and ω0 = γB0 is called the Larmor
frequency. The eigenvalues of the Hamiltonian are E0 = −ℏω0/2 and E1 =
ℏω0/2, and the corresponding eigenstates are
|0⟩=

1
0

,
|1⟩=

0
1

,
(12.3)
respectively. Note that the state |0⟩(|1⟩) denotes the spin up (down) state.
Table 12.2 shows the Larmor frequencies of several nuclei which are often
utilized in NMR quantum computing.
The spin state of a nucleus can be controlled by applying a radio frequency
(rf) magnetic ﬁeld in the xy-plane. Here we take its direction along the −x-
axis as
B1(t) = −B1(t) cos(ωrft −φ)ˆx,
(12.4)

246
QUANTUM COMPUTING
FIGURE 12.5
JEOL ECA-500 NMR spectrometer at Kinki University. The metal cylinder
in the right is a superconducting magnet generating B0. It also contains the
test tube and the rf coils. The large box in the left is the spectrometer. The
host computer is not shown in this picture.
TABLE 12.2
Larmor frequecies of typical nuclei
at B0 = 11.74 T.
Nucleus
1H
13C
19F
31P
ω0[MHz]
500
126
470
202
where ˆx is the unit vector along the x-axis and ωrf and −φ are the angular
frequency and the initial phase of the rf ﬁeld, respectively. This ﬁeld induces
an extra term in the Hamiltonian of the form
Hrf = 2ℏω1 cos(ωrft −φ)Ix,
(12.5)
where 2ℏω1 = ℏγB1.
The factor 2 has been multiplied to make the cor-
responding Hamiltonian simpler. The total Hamiltonian in the laboratory
frame (i.e., ﬁxed coordinate axes) is therefore
H = H0 + Hrf = −ℏω0Iz + 2ℏω1 cos(ωrft −φ)Ix.
(12.6)
The parameters ω1, ωrf and φ are controllable as functions of time, while ω0
(i.e., B0) is ﬁxed. It is always assumed in the following that the condition
ω0 ≫ω1 is satisﬁed. Therefore a nuclear spin has two well-deﬁned eigenstates

NMR Quantum Computer
247
|0⟩= | ↑⟩, and |1⟩= | ↓⟩and the rf ﬁeld acts as a perturbation to control the
spin states.
The ratio kBT/ℏω0 is on the order of 8 × 104, at room temperature of
T ∼300 K, for ω0 ∼500 MHz, which is the hydrogen Larmor frequency at
B0 = 11 T. Therefore, the liquid is in a thermal mixed state. For this reason,
we use density matrices rather than wave functions to describe NMR quantum
states. The one-spin density matrix of a thermal equilibrium state is
ρ(T ) = e−H/kBT
Z(T )
,
(12.7)
where T is the temperature and Z(T ) = tr e−H/kBT is the partition function.
The density matrix in the absence of an rf ﬁeld is
ρ(T ) =
eℏω0Iz/kBT
tr eℏω0Iz/kBT = 1
2

I + ℏω0
kBT Iz + O
 ℏω0
kBT
2
.
(12.8)
The dynamics of a density matrix is given by the Liouville-von Neumann
equation
iℏdρ
dt = [H, ρ].
(12.9)
The Hamiltonian (12.6) has explicit time-dependence through coupling with
an rf ﬁeld. This is inconvenient in integrating the Liouville-von Neumann
equation. This problem is solved if we change the frame of reference from the
laboratory frame to a frame rotating with the Larmor frequency around the
z-axis. Let
UR = e−iℏωIzt
(12.10)
be a unitary transformation to a rotating frame with the angular velocity ω in
general (we put ω = ω0 later). Here we regard Iz as the generator of rotations
around the z-axis. The density matrix is now transformed into
ρR = URρU †
R.
(12.11)
The Hamiltonian is also transformed to ˜H, whose form is derived below. The
Liouville-von Neumann equation in the rotating frame takes the same form
as Eq. (12.9) and is given by
iℏdρR
dt
= [ ˜H, ρR].
(12.12)
We substitute Eq. (12.10) into the above equation to obtain
˜H = URHU †
R −iℏUR
dU †
R
dt
= ℏ

−(ω0 −ω)/2
ω1e−iωt cos(φ −ωrft)
ω1eiωt cos(φ −ωrft)
(ω0 −ω)/2


248
QUANTUM COMPUTING
= ℏ
2

−ω0 + ω
ω1

ei[(ω−ωrf)t+φ] + ei[(ω+ωrf)t−φ]
ω1

e−i[(ω−ωrf)t+φ] + e−i[(ω+ωrf)t−φ]
ω0 −ω

.
(12.13)
Note that the main contribution −ℏω0Iz in the laboratory frame disappears
under this transformation if we set ω = ω0, which we will assume hereafter.
Now we further simplify this Hamiltonian (12.13) by taking the "resonance
condition" ωrf = ω0.
Namely, we take ωrf in resonance with the Larmor
frequency ω0 of the spin. Moreover, we note that the terms oscillating rapidly
with the frequency 2ω0 are averaged to vanish if we are interested in the time
scale much longer than 1/ω0. This approximation is known as the rotating
wave approximation. We will see later that ﬂipping a spin by angle π by
making use of the Rabi oscillation takes time ∼1/ω1, and this is much longer
than 1/ω0 due to the assumition ω1 ≪ω0. Therefore it is legitimate to replace
the Hamiltonian (12.13) with a simpler time-independent Hamiltonian
˜H = ℏω1(cos φIx + sin φIy) = ℏω1
 0 e−iφ
eiφ
0

.
(12.14)
Note that this Hamiltonian is traceless: tr ˜H = 0. A traceless Hamiltonian
generates only elements of SU(2). In fact, let {λi} be the set of eigenvalues
of ˜H and let U = e−i ˜
Ht be the time-evolution operator which ˜H generates.
Suppose V is another unitary matrix which diagonalizes ˜H, and hence U.
Then we ﬁnd V UV † = diag(e−iλjt) and
det U = det V UV † =

j
e−iλjt = e−i P
j λjt = e−i tr ˜
Ht = 1.
Therefore, the one-qubit NMR Hamiltonian generates SU(2) gates only. Note,
however, that this is by no means a restriction. Any U ∈U(2) may be mapped
to eiαU ∈SU(2) by multiplying a proper phase factor. Since this extra overall
phase is not observable, we may replace a U(2) gate U with an equivalent
SU(2) gate ˜U. This remains true for a multi-qubit unitary gate; see the next
subsection.
12.3.2
Multi-Spin Hamiltonian
Molecules with n spins are required to execute n-qubit quantum algorithms.
Let us consider a linear molecule in which each spin is coupled only to its
nearest neighbor spins to simplify our argument. Although a more compli-
cated spin network will be advantageous in saving the number of gates and the
execution time, actual implementation requires more elabolated techniques in
this case. We will take the natural unit in which ℏ= 1 hereafter to simplify
mathematical expressions. It will be recovered whenever necessary.

NMR Quantum Computer
249
Let us consider a molecule with two spins to begin with. We denote the
Larmor frequency of the ith spin by ω0,i (i = 1, 2). We assume there is a
Heiseberg type interaction of the form
Hint = J

k=x,y,z
Ik ⊗Ik
(12.15)
between spins, where J is the coupling strength.
In fact there are other
types of interaction including inter-molecular interaction. These interactions
are averaged out, thanks to rapid translational and rotational motions of
molecules at room temeparatures, and give no contribution to the Hamiltonian
(12.15).
Suppose there are two oscillating magnetic ﬁelds along the −x-axis with fre-
quency ωrf,i and amplitude B1,i (i = 1, 2). The Hamiltonian in the laboratory
frame is
H = H0 + Hrf,1 + Hrf,2,
(12.16)
where
H0 = −ω0,1Iz ⊗I −ω0,2I ⊗Iz + J

k=x,y,z
Ik ⊗Ik,
(12.17)
while
Hrf,1 = 2ω1,1 cos(ωrf,1t −φ1)(Ix ⊗I + gI ⊗Ix)
(12.18)
and
Hrf,2 = 2ω1,2 cos(ωrf,2t −φ2)(g−1Ix ⊗I + I ⊗Ix),
(12.19)
where 2ω1,i = γiB1,i and g = γ2/γ1 is the ratio of the gyromagnetic ratios of
two nuclei. Here I is the unit matrix of dimension 2. The ﬁrst (second) term
in the parentheses in Eqs. (12.18) and (12.19) is the interaction Hamiltonian
describing the coupling between the ﬁrst (second) spin and the oscillating
ﬁelds.
The transformation to a rotating frame of respective spin proceeds similarly
to the single-spin case. Let us introduce the transformation
UR = e−iω0,1Izt ⊗e−iω0,2Izt.
(12.20)
The Hamitonian ˜H of the spins in respective rotating frames is deﬁned as
before as
˜H = ˜H0 + ˜Hrf,1 + ˜Hrf,2,
(12.21)
where
˜H0 = URH0U †
R −iUR
d
dtU †
R
= J
 
e−iω0,1Izt ⊗e−iω0,2Izt!

k=x,y,z
Ik ⊗Ik
 
eiω0,1Izt ⊗eiω0,2Izt!
= πJ
⎛
⎜
⎜
⎝
0
0
0
0
0
0
eiΔω0t 0
0 e−iΔω0t
0
0
0
0
0
0
⎞
⎟
⎟
⎠+ JIz ⊗Iz.
(12.22)

250
QUANTUM COMPUTING
Here Δω0 ≡ω0,2−ω0,1 is the diﬀerence in the Larmor frequencies of the spins.
The matrix elements e±iΔω0t are averaged to vanish for the time scale τ satis-
fying Δω0τ ≫2π. Table 12.3 shows relevant parameters for typical two-qubit
TABLE 12.3
Physical parameters of two-spin molecules, 13C labelled
chloroform and cytosine. The magnetic ﬁeld is set to
B0 = 11.74[T].
ω0,1
ω0,2
Δω0
J
Chloroform
500 MHz
100 MHz
400 MHz
200 Hz
Cytosine
500 MHz
500 MHz
765 Hz
7.1 Hz
molecules, 13C labelled chloroform and cytosine. 13C labelled chloroform is a
heteronucleus molecule whose qubits are hydrogen and 13C nuclei. Cyto-
sine is a homonucleus molecule, both qubits of which are hydrogen nuclei.
It seems impossible at ﬁrst glance to address a particular spin in the presence
of other spins of the same species since they have the same resonance fre-
quency. However, selective addressing is made possible through the so-called
chemical shift. The Larmor frequency of a nucleus in a molecule depends
not only on the nuclear species but also on its position in the molecule. The
electron density at each nucleus varies according to the bonds around it, and
therefore the eﬀective magnetic ﬁeld depends on where a particular nucleus
sits in the molecule. This shift in the Larmor frequency is called the chemical
shift and allows us to selectively address each nucleus of a properly designed
molecule. We cannot employ methane (CH4) as a four-qubit molecule since
all the hydrogen nuclei sit in equivalent positions and therefore have the same
chemical shift. Symmetry of the molecule must be broken to produce diﬀerent
chemical shifts.
The pulse width for one-qubit control is typically τ ∼10 μs for 13C labelled
chloroform for which Δω0τ ∼4000 ≫1. For cytosine, the one-qubit control
pulse width τ cannot be too short.
Let τ be the pulse width.
Then its
Fourier transform has a width ∼1/τ in the frequency domain. Therefore
selective addressing to each spin is impossible unless τ satisﬁes the condition
1/τ ≪Δω0, In actual implementation, the pulse width τ is taken such that
the condition
Δω0τ ≫1 ≫Jτ
(12.23)
is satisﬁed. The second inequality must be satisﬁed for the eﬀect of the J-
coupling to be negligible during the one-qubit operation. Due to a large ratio
Δω0/J ∼102 for cytosine, there always exists such τ which satisﬁes the
condition (12.23). We have to resort to numerical optimization if one of the
inequalities is not satiﬁed.

NMR Quantum Computer
251
Now the interaction Hamiltonian takes a simple Ising form
˜H0 = JIz ⊗Iz
(12.24)
for both heteronucleus and homonucleus molecules, where a time scale τ ≫
1/Δω0 is assumed in the latter case. Disappearance of Ix ⊗Ix and Iy ⊗Iy is
understood intuitively as follows. Suppose the rf ﬁelds are turned oﬀ. Then
the i-th spin executes free precession with frequency ω0,i around the z-axis.
Since ω0,1 and ω0,2 diﬀer by Δω0, their x- and y-axes in the rotating frames
rotate with relative angular frequencey Δω0. Therefore, for a time scale τ
such that Δω0τ ≫1, the contribution from Ix ⊗Ix and Iy ⊗Iy is averaged
out to vanish. The term Iz⊗Iz does not vanish since the z-axes in the rotating
frame remain the same as the laboratory frame for both spins. Application
of rf ﬁelds merely introduces slow motions of spins in the rotating frames and
it does not alter this conclusion.
As for Hrf,1, we obtain
˜Hrf,1 = URHrf,1U †
R
= ω1,1
# 
ei(ωrf,1t−φ1) + e−i(ωrf,1t−φ1) 6 
e−iω0,1IztIxeiω0,1Izt!
⊗I
7
+g

ei(ωrf,1t−φ1) + e−i(ωrf,1t−φ1) 6
I ⊗
 
e−iω0,2IztIxeiω0,2Izt!7 $
.
Now we take the resonance condition ωrf,i = ω0,i (i = 1, 2). Then ˜Hrf,1 is
simpliﬁed as
˜Hrf,1 = ω1,1
2
#  0
e−iφ1
eiφ1
0

⊗I
+gI ⊗

0
e−i(Δω0t+φ1) + e−i(Ω0t−φ1)
ei(Δω0t+φ1) + ei(Ω0t−φ1)
0
 $
,
where Ω0 ≡ω0,1 + ω0,2.
The second matrix vanishes for τ such that
Ωτ, Δω0τ ≫1, and ﬁnally we obtain
˜Hrf,1 = ω1,1 [cos φ1Ix ⊗I + sin φ1Iy ⊗I] .
(12.25)
Similarly we prove that
˜Hrf,2 = ω1,2 [cos φ2I ⊗Ix + sin φ2I ⊗Iy] .
(12.26)
In summary, the Hamiltonian for a two-qubit molecule in the rotating
frames with respective Larmor frequency is
˜H = JIz ⊗Iz + ω1,1 [cos φ1Ix ⊗I + sin φ1Iy ⊗I]
+ω1,2 [cos φ2I ⊗Ix + sin φ2I ⊗Iy] .
(12.27)
From a control theoretical point of view, the ﬁrst term is out of our control
and is called the drift term, while the second and the third terms, altogether,
are called the control terms since ω1,i and φi are controllable.

252
QUANTUM COMPUTING
Generalization of the above two-qubit Hamiltonian to an n-qubit Hamil-
tonian is straightforward. For a molecule with n spins coupled linearly, the
Hamiltonian in the rotating frame of each spin with angluar frequency ω0,i
takes the form
˜H =
n−1

i=1
Ji,i+1Iz,i ⊗Iz,i+1 +
n

i=1
ω1i(cos φiIx,i + sin φiIy,i),
(12.28)
where Ji,i+1 stands for the coupling strength between spins i and i + 1 and
Ik,i = I ⊗. . . ⊗Ik ⊗. . . ⊗I with Ik in the ith position.
The resonance
condition ωrf,i = ω0,i and linear conﬁguration of n spins are understood in
deriving Eq. (12.28).
We will work exclusively with Hamiltonians in the rotating frame of each
spin in the rest of this chapter.
12.4
Implementation of Gates and Algorithms
The Hamiltonians introduced in the previous section are employed to imple-
ment quantum gates.
Here we consider one-, two-, and multi-qubit gates
separately.
12.4.1
One-Qubit Gates in One-Qubit Molecule
The Hamiltonian
˜H = ω1(cos φIx + sin φIy)
contains only Ix and Iy as SU(2) generators. This is not a problem though
since rotations generated by Iz can be implemented with Ix,y generators as
we see below. Let us deﬁne SU(2) gates which are often employed as building
blocks of quantum circuits.
Let X, Y, Z, ¯X, ¯Y and ¯Z be rotations by π/2
around ˜x-, ˜y-, ˜z-, −˜x-, −˜y- and −˜z-axes respectively. Their explicit forms as
SU(2) matrices are
X = e−i(π/2)Ix =
1
√
2

1 −i
−i 1

, Y = e−i(π/2)Iy =
1
√
2

1 −1
1 1

,
Z = e−i(π/2)Iz =
1
√
2

1 −i
0
0
1 + i

, ¯X = ei(π/2)Ix =
1
√
2

1 i
i 1

,
¯Y = ei(π/2)Iy =
1
√
2

1 1
−1 1

, ¯Z = ei(π/2)Iz =
1
√
2

1 + i
0
0
1 −i

.
(12.29)

NMR Quantum Computer
253
It is useful for later purposes to write down the explicit form of a gate R(θ, φ),
whose rotation angle is θ and phase angle is φ in the xy-plane,
R(θ, φ) = e−iθ(cos φIx+sin φIy) = cos θ
2I −2i sin θ
2(cos φIx + sin φIy)
=
⎛
⎜
⎜
⎝
cos θ
2
−i sin θ
2e−iφ
−i sin θ
2eiφ
cos θ
2
⎞
⎟
⎟
⎠.
(12.30)
Let us consider implementing X, for example. We need to ﬁnd parameters
φ, ω1 and τ such that
e−i
R τ
0
˜
Hdt = e−iω1τ(cos φIx+sin φIy) = e−iπIx/2.
It is easily found that a pulse with phase φ = 0, amplitude ω1 and duration
τ satisfying ω1τ = π/2 does the job.
We assume here the pulse shape is
square and express it graphically as in Fig. 12.6. The parameter τ is called
the pulse width. More sophisticated pulses are available, but we restrict
ourselves within square pulses to simplify our calculation. Similarly Y , ¯X, ¯Y
are obtaind by applying pulses with φ = π/2, π and −π/2 and pulse duration
τ = π/2ω1, respectively. A typical value for ω1 is ∼100 kHz for heteronucleus
molecules, and the above operation is implemented with the pulse width τ ∼
1/ω1 ∼10 μs.
FIGURE 12.6
Square pulse. Amplitude of a continuous wave with frequency ωrf is modulated
by this pulse. The amplitude corresponds to ω1 and the pulse width to τ.
They satisfy ω1τ = π/2.
EXERCISE 12.1 Let φ = π/4 in ˜H and write down the unitary matrix
which ˜H generates when ω1τ = π/2. Apply this unitary matrix to |0⟩and |1⟩
and ﬁnd the states obtained.

254
QUANTUM COMPUTING
The Hamiltonian lacks the generator Iz. This does not imply Z and ¯Z
cannot be implemented with the Hamiltonian ˜H. There are three ways to
implement U = e−iαIz with ˜H.
The simplest one is to shift the clock of
the NMR by a certain amount of time τz. The frame is rotating with the
angular velocity ω0 around the z-axis, and if we shift the clock of the NMR
sequencer by τz, we will obtain a rotation equivalent with U = e−iω0τzIz.
Thus shifting the clock by τz = α/ω0 implements the gate e−iαIz. The second
one is to literally generate U = e−iαIz with Ix,y.
By noting the identity
Iz = e−i(π/2)IxIyei(π/2)Ix we immediately obtain
e−iαIz = e−i(π/2)Ixe−iαIyei(π/2)Ix.
(12.31)
The third one is applicable only in the end of the computation and when the
spin is in one of the eigenstates of Iz. It is clear that e−iαIz|j⟩∼|j⟩if the
phase is ignored since σz|j⟩= ±|j⟩. Therefore if we can shift some of the Iz
rotation matrices toward the very end of the algorithm, we may ignore them
at all. Now we have shown that ˜H generates all SU(2) rotations.
The following relations are useful in designing pulse sequences for NMR
quantum computing:
XY ¯X = Z,
¯Y XY = Z,
¯X ¯Y X = Z,
Y ¯X ¯Y = Z
¯XY X = ¯Z,
Y X ¯Y = ¯Z,
X ¯Y ¯X = ¯Z,
¯Y ¯XY = ¯Z
XY = ZX,
XY = Y Z,
¯Y X = XZ,
Y ¯X = ZY
XZ = Z ¯Y ,
¯Y Z = Z ¯X,
¯XZ = ZY,
Y Z = ZX
XZZ = ZZ ¯X,
Y ZZ = ZZ ¯Y .
(12.32)
By making use of these relations, it becomes possible to replace Z and ¯Z with
other rotations. It also becomes possible to eliminate some of Z and ¯Z by
sending them to the both ends of a pulse sequence.
EXERCISE 12.2 Verify the above relations.
It is clear that the Hamiltonian ˜H is independent of t so far as ω1 and φ are
time-independent. In general, ω1 and φ may change as functions of time. In
actual experiments, they are often taken to be piecewise constant, for which
case the time-evolution operator is given by
U = T e−i R T
0
˜
H(t)dt ≡e−i ˜
H(tn)Δtne−i ˜
H(tn−1)Δtn−1 . . . e−i ˜
H(t1)Δt1,
(12.33)
where T stands for the time-ordered product and
˜H(tk) = ω1(tk) [cos φ(tk)Ix + sin φ(tk)Iy]
is the Hamiltonian at the kth step whose temporal duration is Δtk.
EXAMPLE 12.1 Let us consider implementing the Hadamard gate
UH =
1
√
2

1 1
1 −1


NMR Quantum Computer
255
with our Hamiltonian ˜H. Since det UH = −1, we have to multiply i to UH
to make it an element of SU(2). (The factor −i also does the job.) We are
tempted to use Eq. (1.44) to ﬁnd parameters ω1, φ and τ such that
˜Hτ = −π
√
2(Ix + Iz),
which certainly satisﬁes e−i ˜
Hτ = UH. However, this does not work since we
do not have an Iz term in ˜H. Therefore, we have to implement UH using the
formula (cf. Lemma 4.2)
e−iαIxe−iβIye−iγIx
=
⎛
⎜
⎝
cos

β
2

cos
 α+γ
2
!
−i sin

β
2

sin
 α−γ
2
!
cos
 α−γ
2
!
sin

β
2

−i cos

β
2

sin
 α+γ
2
!
−cos
 α−γ
2
!
sin

β
2

−i cos

β
2

sin
 α+γ
2
!
cos

β
2

cos
 α+γ
2
!
+ i sin

β
2

sin
 α−γ
2
!
⎞
⎟
⎠.
(12.34)
Comparison between UH and the above expression immediately leads to the
following solution:
α = −π, β = π
2 , γ = 0,
(12.35)
for example. Therefore UH is implemented by two square pulses as
UH = eiω1τ2Ixe−iω1τ1Iy = ¯X2Y,
(12.36)
where ω1τ1 = π/2 and ω1τ2 = π. The amplitude ω1 need not be the same for
the two pulses, but there is no reason to employ diﬀerent amplitude either.
The amplitude should be large to implement a gate with a shorter pulse
width. However, a large amplitude pulse leads to overcurrent in the rf coil
and eventually damages the coil. A typical pulse width for a π-pulse is on the
order of 10 μs as mentioned before.
Using the symbols introduced above, this pulse sequence is conveniently
expressed as
UH : −Y −¯X2 −.
(12.37)
The time ﬂows from left to right as before. We also describe the pulse sequence
graphically as in Fig. 12.7.
EXERCISE 12.3 Implement the phase shift gate
U(θ) =
1
0
0 e−iθ

(12.38)
using the Hamiltonian ˜H. Here θ is a real constant. Note that U ̸∈SU(2)
and a phase must be multiplied to make it an element of SU(2).

256
QUANTUM COMPUTING
FIGURE 12.7
Control pulse sequence to implement the Hadamard gate H. ¯X2 is a π-pulse
around −x-axis. The time ﬂows from left to right.
12.4.2
One-Qubit Operation in Two-Qubit Molecule: Bloch-
Siegert Eﬀect
Let us consider the eﬀect of an oﬀ-resonance pulse on a qubit. We have to
consider this eﬀect when we have a multi-qubit molecule with several nuclei
of the same species; addressing to one qubit may aﬀect the other qubits of
the same species since they have close resonance frequencies.
We ﬁrst consider the eﬀect of an oﬀ-resonance pulse on a one-qubit molecule.
Let ωrf = ω0 + δ, δ being the detuning parameter.
Then we ﬁnd from
Eqs. (12.13) and (12.14) that
˜H = δIz + ω1 (cos φIx + sin φIy) = δ (ϵ cosφIx + ϵ sin φIy + Iz)
= δ

1 + ϵ2 ˆn · I,
(12.39)
where ϵ = ω1/δ and
ˆn =
1
√
1 + ϵ2 (ϵ cosφ, ϵ sin φ, 1)t
(12.40)
is a unit vector. The time-development operator is
U(t) = e−i ˜
Ht = e−iδ
√
1+ϵ2 ˆn·It.
(12.41)
Suppose the detuning is large enough compared to ω1 so that |ϵ| ≪1. Then
it follows that ˆn ≃(0, 0, 1)t, and we have an approximation
U(t) ≃e−iδ
√
1+ϵ2Izt.
(12.42)
In fact, the rotation axis ˆn is slightly tilted from the z-axis and the spin
precesses around this axis, which remains near the z-axis. This observation
justiﬁes the negligence of components Ix,y in Eq. (12.42). However, the eﬀect
of ϵ in the square root is not negligible if we are concerned with a long-
term behavior of the spin, in which tδϵ2 is sizeable.
This eﬀect is called
the Bloch-Siegert eﬀect [15], and this shift in the reference phase must be

NMR Quantum Computer
257
taken into account when designing pulse sequences which involve detuned rf
ﬁelds. Suppose, for example, that ϵ = 10−1 and δt = 20π. Then we obtain
δ
√
1 + ϵ2t −δt ≃0.31 rad ≃18◦, which is not negligible at all.
EXERCISE 12.4 Suppose a spin is in the state | ↑⟩at t = 0 and its time-
development is driven by the operator (12.41). Find the spin wave function
at later time t > 0. Find when the spin comes back to the initial state up to
an overall phase.
Next we consider manipulating a single qubit in a two-qubit molecule. In
case of a heteronucleus molecule, an rf ﬁeld in resonance with one of the
qubits has no eﬀect on the other qubit. In this case, ϵ = ω1/δ is typically
on the order of 10−3. For δt = 20π as before, we obtain δ
√
1 + ϵ2t −δt ≃
3 × 10−5 rad ≃1.8 × 10−3 deg. If, in contrast, a homonucleus molecule is
considered, we have to take a small amplitude pulse with ω1 ≪Δω0, Δω0
being the diﬀerence in the Larmor frequencies of two nuclei of the same species,
for selective addressing to a particular qubit. This makes the pulse width τ
longer, since ω1τ speciﬁes the rotation angle. The eﬀect of the J-coupling
may not be negligible if τ ≳1/J.
Let us consider the opposite limit in which δ ≪ω1.
This takes place
when we apply a hard pulse (i.e., very short pulse) in resonance with one of
the qubits, qubit 2, say, in a homonucleus molecule. Equation (12.39) with
δ ≪ω1 leads to a Hamiltonian ˜H ≃ω1(cos φIx + sin φIy) acting on qubit 1.
Therefore qubit 1 also gets rotated by the same amount as qubit 2. In other
words, by applying a hard pulse in resonance with one of the qubits, both
qubits are rotated similtaneously by the same angle. Therefore a gate I ⊗U,
which is meant to act on the second qubit, works as U ⊗U if it is implemented
with a hard pulse.
12.4.3
Two-Qubit Gates
Any n-qubit gate may be implemented with single-qubit gates and the CNOT
gates according to the universality theorem by Barenco et al. [16]. We have
shown in the previous subsection how single-qubit gates are implemented. Let
us consider the CNOT gate here. We recall that
UCNOT =
⎛
⎜
⎜
⎝
1 0 0 0
0 1 0 0
0 0 0 1
0 0 1 0
⎞
⎟
⎟
⎠.
Note again that det UCNOT = −1 and we have to multiply UCNOT by e±iπ/4,
for example, to make it an element of SU(4). We must employ the J-coupling
term to implement the CNOT gate since it cannot be decomposed into a
tensor product of two SU(2) gates. A standard implementation of the CNOT

258
QUANTUM COMPUTING
gate is [2]
UCNOT = Z1 ¯Z2X2UJ(π/J)Y2,
(12.43)
where Xj is a π/2-rotation around the x-axis of the jth qubit while ¯Xj is a
π/2-rotation around the −x axis of the jth qubit, for example. Explicitly,
X1 = e−iπIx/2 ⊗I,
¯X2 = I ⊗e−iπIx/2,
for example. The matrix UJ(τ) is generated solely by the J-coupling term,
without any rf pulses applied during period of time τ, as
UJ(τ) = e−iJIz⊗Izτ =
⎛
⎜
⎜
⎝
e−iJτ/4
0
0
0
0
eiJτ/4
0
0
0
0
eiJτ/4
0
0
0
0
e−iJτ/4
⎞
⎟
⎟
⎠.
(12.44)
Therefore
UJ(π/J) = e−iπIz⊗Iz =
⎛
⎜
⎜
⎝
e−iπ/4
0
0
0
0
eiπ/4
0
0
0
0
eiπ/4
0
0
0
0
e−iπ/4
⎞
⎟
⎟
⎠.
(12.45)
Then it is easy to ﬁnd that the LHS of Eq. (12.43) takes the form
Z1 ¯Z2X2UJ(π/J)Y2 = e−iπ/4
⎛
⎜
⎜
⎝
1 0 0 0
0 1 0 0
0 0 0 1
0 0 1 0
⎞
⎟
⎟
⎠
as promised.
EXERCISE 12.5 Implement the "inverted" CNOT gate
UCNOT′ =
⎛
⎜
⎜
⎝
1 0 0 0
0 0 0 1
0 0 1 0
0 1 0 0
⎞
⎟
⎟
⎠
with the two-qubit NMR Hamiltonian.
It is clear from the construction that the expansion such as Eq. (12.43)
requires certain degrees of expertise in NMR pulse programming and/or trial
and error to adjust all the matrix elements. We introduce in §12.5 a remark-
able technique fully utilizing the theory of Lie algebras and Lie groups to
obtain implementations of any two-qubit unitary gates. Although this tech-
nique is model independent, it is best suited for NMR quantum computing
due to the reasons to be clariﬁed below.
In principle, therefore, an NMR quantum computer is universal, and any
U(2n) gate may be implemented by properly choosing the control parameters.
One might wonder how a one- or two-qubit gate is embedded in a multi-qubit
molecule. This is the subject of the next subsection.

NMR Quantum Computer
259
12.4.4
Multi-Qubit Gates
Suppose we have a molecule with many qubits coupled linearly. Clearly we
cannot turn oﬀinter-qubit couplings even when we do not need them. This
is rather inconvenient if we want to employ one-qubit gates and CNOT gates
as building blocks of quantum algorithms. One-qubit operations are executed
faster compared to 1/J, and the eﬀect of J-couplings is safely negligible.
In contrast, a two-qubit operation involves a particular J-coupling, and we
have to get rid of the time-evolution of the state due to other J-couplings.
This "interaction on demand" is possible if a technique called refocusing is
employed. Refocusing cancels unwanted inter-qubit couplings.
12.4.4.1
Three-Qubit Case
This is best understood from the following example of a three-qubit molecule.
Suppose there are three spins 1, 2 and 3 in the molecule, each with the Larmor
frequency ω0,i, (i = 1, 2, 3). The coupling strength between 1 and 2 is J12 and
that between 2 and 3 is J23. It is assumed that the spins are linear so that
J31 = 0. The Hamiltonian in the rotating frame of each qubit is
˜H = J12Iz ⊗Iz ⊗I + J23I ⊗Iz ⊗Iz + ω11(cos φ1I1x + sin φ1I1y)
+ω12(cos φ2I2x + sin φ2I2y) + ω13(cos φ3I3x + sin φ3I3y),
(12.46)
where I1x = Ix ⊗I ⊗I, for example.
Suppose we want to implement a gate
Uα = exp(−iαIz ⊗Iz ⊗I).
(12.47)
If it were not for the J23 coupling, we just need to turn oﬀall the rf pulses and
wait for a duration τ = α/J12. In our case, however, the coupling between
qubits 2 and 3 is also active, producing unwanted contribution
exp (−iJ23(α/J12)I ⊗Iz ⊗Iz) ,
which must be somehow nulliﬁed. The trick is to use the identity
eiπIxIze−iπIx = ¯X2IzX2 = −Iz.
To get rid of undesirable time evolution due to J23, we apply the ﬁrst π-pulse
e−iπIx3 on the third qubit at τ/2 and then allow the molecule to evolve freely
for another duration τ/2. The extra contribution cancels out by this ﬂipping
of the third qubit. Finally apply the second π-pulse eiπIx3 on the third qubit
so that it comes back to its correct history.
More explicitly we verify that
U = T exp

−i
 τ
0
˜H(t)dt


260
QUANTUM COMPUTING
= (I ⊗I ⊗¯X) exp

−iτ
2
˜H0

(I ⊗I ⊗X) exp

−iτ
2
˜H0

= exp
#
−iτ
2 (J12Iz ⊗Iz ⊗I −J23I ⊗Iz ⊗Iz)
$
× exp
#
−iτ
2 (J12Iz ⊗Iz ⊗I + J23I ⊗Iz ⊗Iz)
$
= exp (−iαIz ⊗Iz ⊗I) ,
(12.48)
where ˜H0 is the Hamiltonian (12.46) without rf pulses and use has been made
of the identity
[Iz ⊗Iz ⊗I, I ⊗Iz ⊗Iz] = 0.
This result shows that we can eliminate the eﬀect of J23 coupling by ap-
plying a pair of π-pulses to qubit 3. This technique is called refocusing or
decoupling. Refocusing is also used to cancel ﬁeld inhomogeneity and reduce
transverse relaxation.
12.4.4.2
More-Qubit Case
Eliminating J-couplings in a molecule with more qubits requires some con-
sideration. We look at the previous example of a three-qubit molecule from
a slightly diﬀerent viewpoint. We have seen the a pair of π-pulses introduces
a change in the interaction Hamiltonian Iz ⊗Iz →−Iz ⊗Iz. This change is
equivalent with reversing the direction of time; τIz ⊗Iz →−τIz ⊗Iz. Un-
wanted time-evolution has been cancelled by this reversed direction of time
as
eiJIz⊗Izτ/2e−iJIz⊗Izτ/2 = I.
Take a qubit and assign a number 1 if the time ﬂows in a normal direction
and −1 if it ﬂows in a reversed direction. Then we obtain the following table
for the three-qubit refocusing scheme;
τ/2
τ/2
Qubit 1
1
1
Qubit 2
1
1
Qubit 3
1
−1
We notice the the inner product of the ﬁrst and the second rows is nonvan-
ishing, while that of the second and the third rows vanish. We infer that it
is necessary to have a vanishing inner product of rows of the relevant qubits
for refocusing of the J-coupling. If we want to get rid of all the J-coupling
evolution for a duration τ, we may have
τ/2
τ/2
Qubit 1
1
−1
Qubit 2
1
1
Qubit 3
1
−1

NMR Quantum Computer
261
for example. Note that this pulse sequence applies only for a linear chain
with nearest-neighbor couplings. Even in the presence of a coupling between
qubit 1 and qubit 3, all the J-coupling evolutions are eliminated by taking
τ/4
τ/4
τ/4
τ/4
Qubit 1
1
1
1
1
Qubit 2
1
−1
−1
1
Qubit 3
1
−1
1
−1
for example. Note that we need to divide τ into at least four intervals to
cancel all J-couplings. This is easily extended to a four-qubit molecule with
J-couplings between arbitary pairs as
τ/4
τ/4
τ/4
τ/4
Qubit 1
1
1
1
1
Qubit 2
1
1
−1
−1
Qubit 3
1
−1
−1
1
Qubit 4
1
−1
1
−1
for example. This table deﬁnes a matrix whose elements are ±1 as
H(4) =
⎛
⎜
⎜
⎝
1 1
1
1
1 1 −1 −1
1 −1 −1 1
1 −1 1 −1
⎞
⎟
⎟
⎠.
(12.49)
Note that this matrix has entries ±1, and an arbitrary pair of rows has a
vanishing inner product. Such a matrix is called a Hadamard matrix [17,
18, 19, 20]. Those Hadamard matrices whose ﬁrst row and ﬁrst column have
entires 1 only are called normalized. Now we have learned it is possible to
eliminate all the J-coupling evolutions by ﬂipping qubits by a pair of π-pulses
following the prescription given by an n × n Hadamard matrix H(n).
Suppose we want to introduce a coupling between a pair of nearest neighbor
qubits, i and i + 1, for example. Then we only need to replace the i + 1st
row by the ith row in H(n). For example, qubit 2-qubit 3 coupling in the
four-qubit example above is introduced by taking the matrix
⎛
⎜
⎜
⎝
1 1
1
1
1 1 −1 −1
1 1 −1 −1
1 −1 1 −1
⎞
⎟
⎟
⎠.
(12.50)
It is also possible to kill precession of each qubit by applying a pair of π-
pulses. Precession of a qubit for a duration τ is nulliﬁed by a pair of π-pulses
using the identity
¯Xeiω0Izτ/2Xeiω0Izτ/2 = eiω0Izτ/2e−iω0Izτ/2 = I.
(12.51)

262
QUANTUM COMPUTING
To eliminate one-qubit time-evolution due to precession, we need to have equal
numbers of 1 and −1 in each row. We need to extend the n × n Hadamard
matrix H(n) to incorporate precession nulliﬁcation in a refocusing program.
Let us consider normalized Hadamard matrix H(n + 2) ﬁrst. The ﬁrst row is
made of 1 only and must be removed. We also remove the second row and are
left with an n × (n + 2) matrix, in which the matrix elements of each row add
up to vanish, and any two rows have a vanishing inner product. An example
for a two-qubit molecule is obtained from H(4) as
1 −1 −1 1
1 −1 1 −1

.
(12.52)
Precessions as well as J-coupling have been nulliﬁed with the above Hadamard
matrix.
EXERCISE 12.6 Show, by explicitly evaluating the time-evolution matrix,
that the above matrix (12.52) indeed nulliﬁes time-evolution of the spins.
12.5
Time-Optimal Control of NMR Quantum Com-
puter
We have implemented the CNOT gate in the end of §12.4.3. Although CNOT
plays a particularly important role in the universality theorem, almost any
two-qubit gate not in SU(2) ⊗SU(2) does the job, an important exception
being the SWAP gate.
In the present section, we consider a general strategy to implement any
two-qubit gate. Our implementation is also optimal in terms of gate execution
time. Let us start with some mathematical background materials.
12.5.1
A Brief Introduction to Lie Algebras and Lie Groups
It is assumed that the reader has some familiarity with the elementary theory
of Lie algebras and Lie groups, such as SO(3) and SU(2). See [21] and [22],
for example.
A Lie group G is a group equipped with a structure of an analytic manifold,
where the group operations G × G →G, G →G deﬁned by
xy 	→xy, x 	→x−1,
(12.53)
respectively, are analytic with respect to local coordinates [22, 23].
Given a Lie group G, consider the tangent space g of G at the unit element
I ∈G. In other words, g is nothing but the vector space TI(G), which is

NMR Quantum Computer
263
constructed as follows [23]. Consider a curve c : (a, b) →G such that c(0) = I
and c′(0) = Xc, where it is assumed that a < 0 < b and the curve belongs to
C1 class. For each choice of c, there exists a tangent vector Xc.∗Suppose we
take all the curves that pass I at t = 0 and consider the set of tangent vectors
g = {Xc|c(0) = I, c ∈C1}. Then the set g has a structure of a vector space,
in which an addition and a scalar multiplication are well deﬁned:
∀X, Y ∈g, ∀ck ∈R ⇒c1X + c2Y ∈g.
(12.54)
Moreover, being a tangent vector space g a Lie group G, the Lie bracket is
well deﬁned too:
X, Y ∈g →[X, Y ] ∈g,
(12.55)
where [X, Y ] = XY −Y X is the Lie bracket of X and Y . The vector space
g is called the Lie algebra associated with a Lie group G.
It is common
to denote the Lie algebra of a Lie group G by the corresponding lower case
German letter: the Lie algebra of SU(n) is denoted as su(n), for example.
Alternatively, the exponential map exp : g →G, X 	→exp X maps g to a
component G0 of G, which contains the unit element I. By deﬁnition, this
means that G0 = G for a simply connected Lie group G.
Let us work out an example G = SU(n). Consider a curve c(t) : (a, b) →
SU(n). It satisﬁes c(t)†c(t) = I and det c(t) = 1 for any t ∈(a, b). There
exists a vector X ∈g such that c(t) = exp(Xt) in the vicinity of t ∼0. The
vector X satisﬁes the corresponding conditions
det eXt = exp(tr X)t = 1, eXteX†t = e(X+X†)t = I.
It is found from these conditions that
tr X = 0
and
X + X† = 0,
(12.56)
that is, X is traceless and skew-Hermitian. Conversely, any traceless skew-
Hermitian matrix X deﬁnes U = eXt, which satisﬁes det U = 1 and U †U = I.
In summary
su(n) = {X ∈M(n, C)|tr X = 0, X + X† = 0}.
(12.57)
The set M(n, C) of n×n complex matrices has 2n2 real free parameters. The
conditions X = −X† reduces this down to n2. In particular, the diagonal
elements di of X must be pure imaginary. The condition tr X = 0 introduces
an additional condition 
i di = 0, which reduces the degrees of freedom to
n2 −1 and hence dim su(n) = n2 −1. Let Xk (1 ≤k ≤n2 −1) be the
generators of su(n). Any element U ∈SU(n) is then expressed as
U = exp
⎛
⎝
n2−1

k=1
αkXk
⎞
⎠.
(12.58)
∗More formally, a tangent vector is deﬁned as an equivalence class of curves that satisﬁes
the conditions (12.53); see [23] for example.

264
QUANTUM COMPUTING
For SU(2), for example, the vector space su(2) is spanned by three traceless
anti-Hermitian matrices, which we often take iσk (k = x, y, z).
We note that the condition det U = 1 does not apply for U ∈U(n), and
accordingly the corresponding Lie algebra is
u(n) = {X ∈M(n, C)|X + X† = 0},
(12.59)
for which dim u(n) = n2.
It is convenient to take the set of generators of U(2n) as
Ik1 ⊗Ik2 ⊗. . . ⊗Ikn,
(12.60)
where Ik ∈{I, Ix, Iy, Iz}. The generator I ⊗I ⊗. . . ⊗I must be excluded as
a generator of su(2n) since it does not satisfy the traceless condition. In this
way, we ﬁnd there are 4n −1 generators for su(2n).
EXAMPLE 12.2 Generators of su(22) are
Ik ⊗I, I ⊗Ik, Ij ⊗Ik
(j, k = x, y, z).
Observe that there are 3 + 3 + 9 = 42 −1 generators.
12.5.2
Cartan Decomposition and Optimal Implementation
of Two-Qubit Gates
We have seen in the preceeding sections that one-qubit operation takes a short
time on the order 10 μs for a heteronucleus molecule, while a two-qubit en-
tangling operation takes time typically ∼1/J ∼10 ms. Therefore one-qubit
operation time may be neglected in estimating the total execution time of
a quantum algorithm [24]. Let us consider a molecule with two heteronu-
cleus spins for deﬁniteness, whose Hamiltonian, in the rotating frame with
respective Larmor frequency, is given in Eq. (12.27), in which ω1,i and φi are
control parameters. Typically we have ω1,i ≫J, which justiﬁes the above
assumption of negligible one-qubit operation time compared to two-qubit op-
eration time. This Hamiltonian generates a unitary matrix Ualg ∈SU(4) via
the time-evolution equation
Ualg = T e−i
R τ
0
˜
H(t)dt.
(12.61)
One may naively think that the path providing the shortest execution time
corresponds to the shortest path connecting the unit matrix I (at t = 0) and
Ualg at t = T . Note however that the one-qubit operation time is negligible
and we may use one-qubit gates as many times as necessary. Thus we may
identify U1, U2 ∈SU(4) which diﬀer by an element of K ≡SU(2) ⊗SU(2).
This means that the relevant space for evaluating the time-optimal path is the
coset space SU(4)/SU(2) ⊗SU(2) in which U1 and U2 = KU1 are identiﬁed.

NMR Quantum Computer
265
To ﬁnd the time-optimal path connecting the unit matrix I and the matrix
Ualg, therefore, amounts to ﬁnding the time-optimal path connecting cosets
[I] and [Ualg], where [U] ≡{kU|k ∈K}. The Lie algebra su(4) is decomposed
as su(4) = k ⊕p [24, 25, 26], where
k = Span({iI ⊗Ik, iIk ⊗I}),
(k = x, y, z),
(12.62)
p = k⊥= Span({iIj ⊗Ik}),
(j, k = x, y, z).
(12.63)
They satisfy the commutation relations
[k, k] ⊂k,
[p, k] ⊂p,
[p, p] ⊂k.
(12.64)
Decomposition of a Lie algebra g into k and p, satisfying the above commuta-
tion relations, is called a Cartan decomposition. The Cartan subalgebra
h = Span({iIj ⊗Ij}) ⊂p plays an important role in our construction. A gen-
eral theorem of Lie algebras proves that any element Ualg ∈SU(4) has a KP
decomposition Ualg = kp with k ∈K ≡exp k and p ∈P ≡exp p. Moreover,
any matrix p ∈P is rewritten in a conjugate form p = k†
1hk1, where k1 ∈K
and h is an element of the Cartan subgroup H of SU(4) deﬁned as
H ≡exp h =
8
exp

i

j=x,y,z
αjIj ⊗Ij
--- αj ∈R
9
.
(12.65)
Therefore we have a corresponding Cartan decomposition of a group element
as Ualg = kp = kk†
1hk1 = k2hk1, where ki ∈K, h ∈H and k2 = kk†
1. The
quantum algorithm Ualg is now decomposed into one-qubit operations k1,
k2 and a two-qubit entangling operation h. This decomposition determines
an optimized pulse sequence of the NMR quantum computer as discussed in
[24, 25, 26].
Cartan decomposition of an arbitrary U ∈SU(4) proceeds explicitly as
follows. We take the magic basis [27] deﬁned as
|Ψ0⟩=
1
√
2(|00⟩+ |11⟩),
|Ψ1⟩=
i
√
2(|01⟩+ |10⟩),
|Ψ2⟩=
1
√
2(|01⟩−|10⟩),
|Ψ3⟩=
i
√
2(|00⟩−|11⟩),
(12.66)
which is diﬀerent from an ordinary Bell basis by phase.
The transfor-
mation rule of a matrix U with respect to the standard binary basis
{|00⟩, |01⟩, |10⟩, |11⟩} into that with the magic basis {|Ψi⟩} is U →UB ≡

266
QUANTUM COMPUTING
FIGURE 12.8
Implementation of the Grover database search algorithm for n = 2 qubits
case. H is the Hadamard gate, W2 = U ⊗2
H , while Rz = I −2|z⟩⟨z|.
Q†UQ, where
Q =
1
√
2
⎛
⎜
⎜
⎝
1 0 0
i
0 i 1
0
0 i −1 0
1 0 0 −i
⎞
⎟
⎟
⎠.
(12.67)
The matrix Q deﬁnes an isomorphism (1:1 linear map preserving the group
product) between K = SU(2) ⊗SU(2) and SO(4) and is used to classify two-
qubit gates [25, 27]. In fact, it is easy to verify that Q†kQ is an element of
SO(4) for k ∈K. Moreover, Q diagonalizes elements of the Cartan subgroup,
viz Q†hQ = diag(eiθ0, eiθ1, eiθ2, eiθ3) for h ∈H. We ﬁnd for U = k2hk1 that
UB = Q†UQ = Q†k2Q · Q†hQ · Q†k1Q = O2hDO1,
where Oi ≡Q†kiQ is an element of SO(4) and hD ≡Q†hQ is a diagonal
matrix. From U t
BUB = Ot
1h2
DO1, we notice that U t
BUB is diagonalized by O1
and its eigenvalues form the diagonal elements of h2
D. Finally O2 is found as
O2 = UB(hDO1)−1.
EXAMPLE 12.3 Let us consider implementing two-qubit Grover's database
search algorithm Uz as a concrete example. The data are encoded in one of
the basis vectors |00⟩, |01⟩, |10⟩, |11⟩, and the gate Uz picks out a particular
binary basis vector |z⟩= |ij⟩as a "target ﬁle" upon acting on |00⟩[33, 34].
Figure 12.8 shows the actual quantum cirucit implementation of the Grover al-
gorithm. Here H is the Hadamard gate and Rz = I −2|z⟩⟨z|, R0 = I −2|0⟩⟨0|,
cf Fig. 7.2. Here we do not explicitly give oracle cirucits Rz and R0, but they
are treated as black boxes.
Here we consider U10 which picks out the ﬁle |10⟩with a single step. The

NMR Quantum Computer
267
unitary matrix representing this algorithm takes the form
U10 = W2R0W2R10W2 =
⎛
⎜
⎜
⎝
0 1 0
0
0 0 0 −1
−1 0 0
0
0 0 −1 0
⎞
⎟
⎟
⎠.
(12.68)
We apply the above strategy and ﬁnd the Cartan decomposition of U10 =
k2hk1 as
k1 = I2 ⊗I2,
h = eiπ(Ix⊗Ix−Iy⊗Iy),
(12.69)
k2 = e−i(π/2)Iz ⊗ei(π/
√
2)(Ix+Iy).
Actually, the decomposition is not unique, and we choose a solution that
minimizes the execution time of an NMR quantum computer. To implement
this decomposition with NMR, such terms as eiπ(Ix⊗Ix) must be rewritten
in favor of the subset of generators of SU(4) contained in the Hamiltonian
(12.27). We verify, for example, that
eiπ(Ix⊗Ix)
= [e−i(π/2)Iy ⊗ei(π/2)Iy] · e−iπ(Iz⊗Iz) · [ei(π/2)Iy ⊗e−i(π/2)Iy]. (12.70)
Table 12.4 shows the pulse sequence to implement U10 with an NMR quantum
computer. We call the hydrogen nucleus and the carbon nucleus qubit 1 and
qubit 2, respectively.
The time-optimal path requires the execution time
of 1/J, which happens to be the same as that for the conventional pulse
sequence [35].
TABLE 12.4
Time-optimal pulse sequences for Grover's algorithm U10. The
number 1 (2) denotes the ﬁrst (second) qubit. Here X ( ¯X) and Y ( ¯Y )
denote π/2-pulse around x (−x) and y (−y) axis, respectively. The
symbol Pi(θ) denotes a π-pulse around a direction (cos θ, sin θ, 0) in
the Bloch sphere. The symbol (1/2J) indicates the length of the idle
time, during which no external pulses are applied.
Pulse sequence
Execution time
1:
X
(1/2J)
Xm
Y
(1/2J)
X
Ym
1/J
2:
X
(1/2J)
Xm
Ym
(1/2J)
Y
Pi(π/4)
EXERCISE 12.7 Find a Cartan decomposition of the controlled-Z gate
UZ = |0⟩⟨0| ⊗I + |1⟩⟨1| ⊗σz

268
QUANTUM COMPUTING
and implement the solution with an NMR pulse sequence which implements
the decomposition.
EXERCISE 12.8 Find a Cartan decomposition of UCNOT. Find an NMR
pulse sequence which implements the decomposition.
12.6
Measurements
12.6.1
Introduction and Preliminary
We have concentrated on the NMR Hamiltonian and unitary gates so far
and hardly discussed the states. We will be concerend with state measure-
ment in this section. The NMR quantum computer is diﬀerent from other
candidates of quantum computer in that the qubit measurement is not a pro-
jective measurement but an ensemble measurement. Moreover, it has already
been mentioned that the system works at room temperatures T , for which
ℏω0 ≪kBT . The system is, therefore, in an almost maximally mixed state.
Let ρth be a density matrix of a single nucleus without the rf ﬁeld at thermal
equilibrium;
ρth = e−H0/kBT
Z(T )
,
Z(T ) = tr e−H0/kBT .
(12.71)
It follows from the assumption ℏω0 ≪kBT that
ρth ≃1
2

I + ℏω0
kBT Iz

,
(12.72)
in the basis | ↑⟩= |0⟩and | ↓⟩= |1⟩. The density matrix in the rotating frame
of the spin is
˜ρth = UρthU † = ρth,
(12.73)
where U = exp(iω0Izt).
It is depicted in Fig. 12.3 that an NMR spectrometer has a pair of rf coils,
which also measure the transverse magnetization of the sample molecules
through the induced electromotive force. Suppose the coils measure the x-
component of the spin magnetization, which is proportional to ⟨Ix⟩= tr (Ixρ).
Clearly ⟨Ix⟩= 0 for ρ = ρth since the averaged magnetization points in the
z-direction, which is free from precession. We must "tilt" the magnetization
somehow to pick up the signal and measure the state of the molecules. Suppose
an π/2-pulse along the x-axis X = exp(−iπIx/2) has been applied at t = 0
in the rotating frame of the sample. The resulting state is
˜ρX = X ˜ρthX† = 1
2

I −ℏω0
kBT Iy

(12.74)

NMR Quantum Computer
269
in the rotating frame. Now this state must be transformed back to the labo-
ratory frame since the pickup coils are ﬁxed in the laboratory. We obtain
ρX = U †˜ρXU = 1
2

I −ℏω0
kBT [sin(ω0t)Ix + cos(ω0t)Iy]

.
(12.75)
Mx, the x-component of the magnetization of the molecules, is now evalu-
ated as
Mx(t) ∝⟨Ix⟩= tr (IxρX) = −ℏω0
4kBT sin(ω0t).
(12.76)
Note that the prefactor ℏω0/2kBT originates from a tiny diﬀerence between
the populations of the states |σy = +1⟩and |σy = −1⟩resulting after the
π/2-pulse X is applied, reﬂecting an initial population diﬀerence between
the states | ↑⟩and | ↓⟩. The magnetic ﬂux threading the coils oscillates as
∼sin ω0t, and the induced electromotive force as ∼cos ω0t.
12.6.2
One-Qubit Quantum State Tomography
Let
˜ρ = 1
2I + cxIx + cyIy + czIz
(12.77)
be a density matrix which resulted after some quantum gate operation. Here
we temporarily assume that this qubit is not entangled with other qubits in
the register. A more general case will be analyzed subsequently.
Our task is to measure ck to identify the state ˜ρ. Measurement of a density
matrix is known as quantum state tomography. We ﬁrst transform ˜ρ back
to the laboratory frame,
ρ = U †˜ρU
= 1
2

1 + cz
(cx −icy)eiω0t
(cx + icy)e−iω0t
1 −cz

.
(12.78)
Measurement of the magnetization Mx yields
Mx(t) ∝tr (Ixρ) = 1
2 (cx cos ω0t + cy sin ω0) .
(12.79)
The coeﬃcients cx and cy are read out by making a Fourier transform of the
received signal as will be shown in the next subsection.
We further need to evaluate cz to identify ρ completely. The density matrix
is "modiﬁed" to this end by operating an X pulse,
˜ρX = X ˜ρX† = 1
2I + cxIx −czIy + cyIz
(12.80)
in the rotating frame. The density matrix in the laboratory frame is
ρX = U †˜ρXU = 1
2

1 + cy
(cx + icz)eiω0t
(cx −icz)e−iω0t
1 −cy

.
(12.81)

270
QUANTUM COMPUTING
Measurement of Mx yields
M X
x (t) ∝tr (IxρX) = 1
2(cx cos ω0t −cz sin ω0t).
(12.82)
EXERCISE 12.9 Suppose Y = exp(−i(π/2)Iy) acts on ˜ρ.
(1) Find ˜ρY = Y ˜ρY †.
(2) Find ρY = U †˜ρY U.
(3) Show the expectation value of Ix with respect to the state ρY is
tr (IxρY ) = 1
2(cz cos ω0t + cy sin ω0t).
(12.83)
The components cos ω0 and sin ω0 behave diﬀerently under Fourier trans-
form, and their coeﬃcients can be separated after Fourier-transforming the
induced electromotive force. It is therefore possible to identify all of ck from
measurements of {Mx(t), M X
x (t)} or {Mx(t), M Y
x (t)} with calibration of the
signal strengths with the thermal equilibrium state rotated by X, for example.
12.6.3
Free Induction Decay (FID)
It has been shown in the previous subsection that the measurement of
Mx(t) yields an outcome ∝cx cos ω0t + cy sin ω0t = A cos(ω0 + α), where
A =

c2x + c2y and tan α = −cy/cx.
In fact, precession of the magnetization does not last forever. Precession
decays due to various reasons, such as ﬁeld inhomogeneity in B0, for example,
and actual signal is approximately given by
f(t) = Ae−t/T2 cos(ω0t + α),
(12.84)
where T2 is a parameter characterizing the decay time constant. Figure 12.9
shows the cosine-Fourier transform
˜fα(ω) =
*
2
π
 ∞
0
dtAe−t/T2 cos(ω0t + α) cos ωt
= AT2
√
2π
cos α −(ω −ω0)T2 sin α
(ω −ω0)2T 2
2 + 1
+ cos α −(ω + ω0)T2 sin α
(ω + ω0)2T 2
2 + 1

(12.85)
for α = 0, ±π/4 and π/2. The second term in the bottom equation is negligible
in the vicinity of ω ∼ω0.

NMR Quantum Computer
271
FIGURE 12.9
Cosine-Fourier transform of the FID signal. ˜f(ω)/AT2 is plotted against ωT2
for ω0T2 = 103 and (a) α = 0, (b) α = π/4, (c) α = π/2 and (d) α = −π/4.
12.6.4
Two-Qubit Tomography
The density matrix
˜ρ of two-qubit molecules in a rotating frame is
parametrized as
˜ρ = I
2 ⊗I
2 +
⎛
⎜
⎜
⎝
a00
a01 + ib01 a02 + ib02 a03 + ib03
a01 −ib01
a11
a12 + ib12 a13 + ib13
a02 −ib02 a12 −ib12
a22
a23 + ib23
a03 −ib03 a13 −ib13 a23 −ib23
a33
⎞
⎟
⎟
⎠. (12.86)
The ﬁrst term I/2 ⊗I/2 is introduced for normalization and does not con-
tribute to NMR signals. The number of independent parameters is 16−1 = 15,
because the constraint tr˜ρ = 1 leads to a relation 
i aii = 1 among {aii}.
We identify the state ˜ρ completely if all aij and bij are measured by quan-
tum state tomography. FID signal of each spin is measured by the NMR
spectrometer at t > 0. Note, however, that the state ˜ρ has its own intrinsic
time-development due to the interspin J-coupling. Let UJ(t) be the time-

272
QUANTUM COMPUTING
development operator due to the J-coupling
UJ(t) = e−iJIz⊗Izt.
(12.87)
Then the density matrix in the rotating frame at t > 0 is
˜ρ(t) = UJ(t)˜ρU †
J(t)
(t > 0).
(12.88)
The density matrix ρ(t) in the laboratory frame is
ρ(t) = U †
R˜ρ(t)UR,
(12.89)
where UR is given by Eq. (12.20). The x-component of the magnetization in
the laboratory frame is measured as
tr [(Ix ⊗I + I ⊗Ix)ρ(t)]
= 1
2
#
a01 cos

ω0,2 −J
2

t + a23 cos

ω0,2 + J
2

t
+a02 cos

ω0,1 −J
2

t + a13 cos

ω0,1 + J
2

t
$
−1
2
#
b01 sin

ω0,2 −J
2

t + b23 sin

ω0,2 −J
2

t
+b02 sin

ω0,1 −J
2

t + b13 sin

ω0,1 −J
2

t
$
.
(12.90)
Therefore a01, a23, a02, a13 are measured from the cosine part of the spectrum
and b01, b23, b02, b13 from the sine part. The cosine-Fourier transforms of these
sine and cosine functions have diﬀerent peaks at ω0,i ± J/2 with diﬀerent
phases. Clearly the measurement of ⟨Ix⊗I+I⊗Ix⟩is not suﬃcient to ﬁx ρ. We
have to deform ρ somehow so that other coeﬃcients appear in the measured
results. Of course, it is desirable that the number of the measurements is
as small as possible. This is somewhat similar to describing a convex three-
dimensional object by using photographs. A single-shot photograph is not
suﬃcient to describe the object, and one has to rotate the object and take a
couple of photographs to completely describe the object.
Suppose next that a π/2-pulse Y1 along the y-axis of the rotating frame is
applied to the spin 1 at t = 0. The density matrix after this operation is
Y1˜ρY †
1 .
(12.91)
The resulting state in the laboratory frame is
ρ(t) = U †
RUJ(t)Y1 ˜ρY †
1 UJ(t)†UR.
(12.92)
The spectrometer measures the x-component of the magnetization of ρ(t) as
tr [(Ix ⊗I + I ⊗Ix)ρ(t)

NMR Quantum Computer
273
1
2
a01
2 −a03
2 −a12
2 + a23
2

cos

ω0,2 −J
2

t
+
a01
2 + a03
2 + a12
2 + a23
2

cos

ω0,2 + J
2

t
+
a00
2 −a22
2

cos

ω0,1 −J
2

t +
a11
2 −a33
2

cos

ω0,1 + J
2

t

+ 1
2

−
b01
2 −b03
2 + b12
2 + b23
2

sin

ω0,2 −J
2

t
+b13 sin

ω0,2 + J
2

t −b02 sin

ω0,1 −J
2

t
+

−b01
2 −b03
2 + b12
2 −b23
2

sin

ω0,1 + J
2

t

.
(12.93)
We extract from Eq. (12.93) new information on
a00 −a22,
a11 −a33,
a03 + a12,
b03 −b12.
Similary, measurement after a Y2-pulse provides
a00 −a11,
a22 −a33,
a03 + a12,
b03 + b12,
while measurement after an X1-pulse provides
b03 + b12,
a00 −a22,
a11 −a33,
a03 −a12.
Therefore, all aij and bij can be determined experimentally in four measure-
ments. Although there are other combinations to measure {aij} and {bij},
four is the minimal number of measurements required to ﬁx
˜
ρ(t) completely
in general. This number may be reduced if ˜ρ has a more restricted form as
we show in the next example.
EXAMPLE 12.4 Let us consider a simple case in which ˜ρ = diag(a00, a11,
a22, a33). Application of a Y1-pulse yields a00 −a22 and a11 −a33, while a Y2-
pulse yeilds a00 −a11 and a22 −a33, from which all the diagonal components
are found.
If, furthermore, it is known that only one of aii is nonvanishing, it can be
identiﬁed by a single measurement with a Y1-pulse, for example. It follows
from Eq. (12.93) that the FID sigal is peaked at ω0,1 −J/2 if either a00 or a22
is nonvanishing. The peak is positive if a00 = 1, while it is negative if a22 = 1.
Similarly it is found from the signature of the peak at ω0,1 + J/2 whether a11
or a33 is nonvanishing.
Figure 12.10 (a) summarizes the above statements, where J is taken as
positive. Let P(ij) (i, j ∈{0, 1}) be the population of the state |ij⟩. It is
easy to see P(00) > P(01), P(10) > P(11), where the order of P(01) and

274
QUANTUM COMPUTING
FIGURE 12.10
(a) Positions of the four peaks aii. The ket |jk⟩denotes the corresponding
nuclear state.
The positive peaks have slightly more amplitude than the
negative peaks at thermal equilibrium. (b) Actual FID signal obtained with
cytosine molecules. Courtesy of Y. Kondo, Kinki University, Japan.
P(10) depends on whether ω0,1 is smaller or larger than ω0,2. If we apply the
reading pulse Y1 to a thermal equilibrium state ρ ∝e−H/kBT , we will obtain
a superposition of the peaks as shown in Fig. 12.10 (b). It follows from the
population diﬀerences P(00) > P(10) and P(01) > P(11) that both peak
heights are positive. Figure 12.10 (b) is an actual FID signal from cytosine
molecules whose qubits are two protons.
12.7
Preparation of Pseudopure State
Liquid state NMR at room temperature is diﬀerent from other realizations in
that the states are thermally populated. Therefore we must introduce various
techniques to single out contributions from a ﬁducial initial state, |00 . . . 0⟩,
for example. In the following subsections, we study these methods in detail.
Note that the signal from a particular initial state reduces exponentially as
a function of the number of qubits. This is one of the obstructions against
scalablity of a liquid state NMR quantum computer. The other prominent
future of NMR is that the measurement is not projective measurement but
ensemble measurement with respect to a large number of molecules. Therefore
it is possible to measure two noncummuting observables simultaneously.
We will be concerned mostly with two-qubit molecules in this section for
deﬁniteness. The Larmor frequencies of nuclei are denoted as ω0,i and the cou-
pling strength as J. Relevant references will be cited whenever generalization
to more-qubit molecules is nontrivial.

NMR Quantum Computer
275
An ensemble of two-qubit molecules at temperature T distributes according
to the Bolzmann distribution
ρ(T ) =
e−H/kBT
tr e−H/kBT ≃1
4I ⊗I + ω0,1Iz ⊗I + ω0,2I ⊗Iz
4kBT
= 1
4I ⊗I +
1
8kBT
⎛
⎜
⎜
⎝
ω0,1 + ω0,2
0
0
0
0
ω0,1 −ω0,2
0
0
0
0
−ω0,1 + ω0,2
0
0
0
0
−ω0,1 −ω0,2
⎞
⎟
⎟
⎠,
(12.94)
where we used inequalities ω0,i/kBT ≪1 to reach the approximate form. For
a hydrogen nucleus at B0 = 11.74 T and T = 300 K, for example, we have
ℏω0 = 5.27 × 10−26 J while kBT = 4.14 × 10−21 J, justifying our assumption.
Morevoer, ω0,i are several orders of magnitude greater than J, and hence the
contribution of J-coupling to ρ(T ) is virtually negligible.
If the molecule is homonucleus, in which Δω0 ≡ω0,2 −ω0,1 ≪ω0,i, the
density matrix further simpliﬁes as
ρ(T ) = 1
4I ⊗I +
1
8kBT
⎛
⎜
⎜
⎝
ω0,1 0 0
0
0
0 0
0
0
0 0
0
0
0 0 −ω0,1
⎞
⎟
⎟
⎠.
(12.95)
Our aim is to prepare an eﬀective pure state out of the thermal equilibrium
state. Let us write the equilibrium density matrix as
ρ(T ) =
I
2
⊗2
+ Δρ.
(12.96)
The ﬁrst term represents a uniformly mixed ensemble of all possible states,
|00⟩, |01⟩, |10⟩and |11⟩, while the second term denotes a tiny deviation from
a uniformly mixed ensemble.
It has been shown in §12.6.3 that there is no FID signal if the spin-up
component and spin-down component populate equal amounts.
Therefore
the uniform part (I/2)⊗n has no contribution to the FID signal. Suppose we
have a density matrix
ρ =
I
2
⊗n
+ α diag(1, 0, . . . , 0).
(12.97)
It follows from the above observation that ρ eﬀectively yields the FID signal
from the pure state ρ00 = |00⟩⟨00|, albeit the amplitude is multiplied by the
factor α. It is shown below that α is on the order of ω0,1/2nkBT , where n
is the number of qubits. The eﬀective pure state thus obtained is called the
pseudopure state.

276
QUANTUM COMPUTING
Molecules in the liquid state NMR are in a thermal equilibrium state, and
it seems, at ﬁrst sight, impossible to initialize the system in a ﬁducial pure
state, such as |00⟩. However, we may introduce an eﬀective pure state if the
density matrix is put in the form (12.97) by one way or another.
Note that a naive method to cool the molecules down to very low temper-
atures does not work since the sample is frozen and ceases to be a liquid.
Then hidden interactions, which are averaged out in a liquid state, will be
in action to render the Hamiltonian in a formidably complicated form. It
should be also noted that nonunitary operations are required to produce an
eﬀective pure state out of a thermal distribution (12.94). This is because a
thermal equilibrium density matrix has rank 4, while a pure state density
matrix has rank 1, and any unitary transformation preserves the matrix rank;
rankA = rank(UAU †).
We will introduce two methods to produce a pseudopure state in this sec-
tion: temporal averaging method [28] and spatial averaging method [29, 30].
It is also possible to generate a pseudopure state using logical labelling. How-
ever, this method requires ancillary qubits and will not be treated here [31, 32].
12.7.1
Temporal Averaging
Molecules in NMR have a relatively long transverse relaxation time T1, and a
state out of thermal equilibrium maintains its distribution for a considerably
long time. Then by preparing 2n −1 diﬀerent state populations, n being the
number of qubits, we may execute a given quantum algorithm on each state
population. It is possible to generate a pseudopure state by taking the average
of the spectra over the diﬀerent state populations. This is best illustrated for
a two-qubit system.
Let us consider a two-qubit heteronuclear molecule for deﬁniteness. Let
ω0,1 and ω0,2 be the Larmor frequencies of the ﬁrst and the second spins,
respectively. The interqubit coupling may be ignored in evaluating the Bolz-
mann factor of the state population as was already pointed out. The thermal
equilibrium density matrix is then given by Eq. (12.94), which we write as
ρ0 ≡ρ(T ) = diag(ρ00, ρ11, ρ22, ρ33).
(12.98)
Now let us consider unitary gates which permutate the matrix elements
ρ11, ρ22, ρ33 cyclically leaving ρ00 ﬁxed. This is done by the following permu-
tation matrices
Ucp =
⎛
⎜
⎜
⎝
1 0 0 0
0 0 0 1
0 1 0 0
0 0 1 0
⎞
⎟
⎟
⎠,
U 2
cp =
⎛
⎜
⎜
⎝
1 0 0 0
0 0 1 0
0 0 0 1
0 1 0 0
⎞
⎟
⎟
⎠.
(12.99)
We note that these permutations are implemented with two CNOT gates as
Ucp = U 12
CNOTU 21
CNOT,
U 2
cp = U 21
CNOTU 12
CNOT,
(12.100)

NMR Quantum Computer
277
where U ij
CNOT stands for a CNOT gate with the control bit i and the target
bit j.
The density matrix ρ0 transforms under the action of these permutations
as
ρ1 ≡Ucpρ0U †
cp = diag(ρ00, ρ33, ρ11, ρ22),
ρ2 ≡U 2
cpρ0U 2†
cp = diag(ρ00, ρ22, ρ33, ρ11),
(12.101)
respectively. Carrying out a given quantum algorithm with these three state
populations and then averaging the three data is equivalent to executing the
algorithm once for all with an eﬀective initial state population
ρave = 1
3(ρ0 + ρ1 + ρ2) = diag(ρ00, s, s, s)
= sI4 + 4ρ00 −1
3
|00⟩⟨00|.
(12.102)
Here s ≡(ρ11 + ρ22 + ρ33)/3 and we have used the fact 
i ρii = 1. The
spectral contribution from the ﬁrst term, being proportional to I4, cancels
exactly, and we can pick up a contribution from the state |00⟩only. Since
ρ00 ≃1 + ℏ(ωa + ωb)/kBT
4
is very close to 1/4 at room temperature, the coeﬃcient (4ρ00−1)/3 ≃4ℏ(ω1+
ω2)/3kBT is very small. Therefore the signal from the eﬀective initial state
|00⟩considerably reduces in this process.
Figure 12.11 shows the actual spectra employed for temporal averaging.
12.7.2
Spatial Averaging
Any NMR spectometer has a set of magnets which produces a ﬁeld gradient
along the static magnetic ﬁeld B0.
Molecules in a sample cell are under
spatially varying ﬁeld strength with which some components of a density
matrix may be eliminated after averaging over the sample.
We conﬁne ourselves to molecules with a small number of qubits for def-
initeness. Let us start with a single-qubit molecule. The Hamiltonian in a
strong magnetic ﬁeld along the z-axis takes the form
H0(z) = −ω0(1 + b′z)Iz,
(12.103)
where b′ is a parameter specifying the ﬁeld gradient. Let us assume the sample
extends in the region |z| ≤L/2, L being the sample extension along the z-
axis. By transforming to the rotating frame with the unitary transformation
(12.10) with ω = ω0, we obtain a residual Hamiltonian
˜H0 = −ω0b′zIz.
(12.104)

278
QUANTUM COMPUTING
FIGURE 12.11
Spectrum of the qubit 1 obtained with each state population.
Molecules
employed are homonucleus cytosine, for which the density matrix elements
satisfy ρ11 = ρ22. (a) shows the spectrum obtained with the density matrix
ρ0. Peaks take positive values since ρ00 > ρ22 and ρ11 > ρ33. (b) is an FID
spectrum obtained with ρ1. Peak 1 is positive since ρ00 > ρ11 while peak 2 is
negative since ρ33 < ρ22. (c) is an FID signal obtained with ρ2 where peak 1
is positive since ρ00 > ρ33, while peak 2 disappears since ρ11 −ρ22 = 0. These
three contributions adds up to comprise the peak 1 in (d). This peak indicates
that the pseudopure state |00⟩has been obtained after temporal averaging.
Courtesy of Yasushi Kondo, Kinki University, Japan.
which generates the time-evolution operator
UFG(z, t) = e−i R t
0 ˜
H0dt = exp (iω0b′ztIz)
(12.105)
after applying the ﬁeld gradient for a duration t. Then the density matrix in
the co-rotating frame develops as
˜ρFG(z, t) = UFG˜ρU †
FG
= I
2 + czIz +

0
(cx −icy)eiω0b′zt
(cx + icy)e−iω0b′zt
0

,
(12.106)
where we have expanded the initial density matrix as ˜ρ = I/2 + cxIx + cyIy +
czIz). The FID signal consists of contributions from the whole sample. There-
fore the eﬀective density matrix is obtained by averaging ˜ρFG(z, t) over z as
˜ρFG(t) = 1
L
 L/2
−L/2
˜ρFG(z, t)dz.
(12.107)
Suppose the condition Lω0b′t ≫1 is satisﬁed. Then the oﬀ-diagonal compo-
nents in Eq. (12.106) average out to yield
˜ρFG(t) = I
2 + czIz = 1 −cz
2
I + cz|0⟩⟨0|.
(12.108)

NMR Quantum Computer
279
The ﬁrst term is the uniformly mixed state and does not contribute to the
FID spectrum, while the second term behaves as an eﬀective pure state |0⟩.
Let us turn to a two-qubit molecule next. The Hamiltonian in the labora-
tory frame is
H0 = −ω0,1(1 + b′z)Iz ⊗I −ω0,2(1 + b′z)I ⊗Iz + J

k=x,y,z
Ik ⊗Ik. (12.109)
Transformation to the co-rotating frame produces the Hamiltonian
˜H0 = −ω0,1b′zIz ⊗I −ω0,2b′zI ⊗Iz + JIz ⊗Iz,
(12.110)
which generates a local time-development operator
UFG(z, t) = exp [i(ω0,1b′z + ω0,2b′z −JIz ⊗Iz)t] .
(12.111)
Let ˜ρ = (ρij) be the initial density matrix in the rotating frame. After appli-
cation of the ﬁeld gradient for an interval t, we end up with a local density
matrix
˜ρFG(z, t) = UFG(z, t)˜ρU †
FG(z, t)
=
⎛
⎜
⎜
⎝
ρ11
∗
∗
∗
∗
ρ22
e−iΔω0b′ztρ23 ∗
∗eiΔω0b′ztρ32
ρ33
∗
∗
∗
∗
ρ44
⎞
⎟
⎟
⎠,
(12.112)
where Δω0 = ω0,2 −ω0,1 and ∗stands for a matrix element which con-
tains ei2ω0,ib′zt or ei(ω0,1+ω0,2)b′zt.
Typical values of the parameters are
ω0,i ∼109 Hz, b′ ∼10−2 T/m and z ∼10−2 m. The exponent with t ∼10−3 s
is ∼102 ∼16 × 2π. Therefore matrix elements denoted with * vanish if the
ﬁeld gradient is applied for t > 10−3 s and averaged over z.
We ﬁnd Δω0 ∼ω0,i for a heteronucleus molecule, in which case the 23- and
32-matrix elements also vanish after averaging over z and we obtain
˜ρFG(t) = 1
L
 L/2
−L/2
˜ρFG(z, t)dz
= diag(ρ11, ρ22, ρ33, ρ44).
(12.113)
For a homonucleus molecule, in contrast, Δω0 may be as small as 103 Hz,
and the phase multiplying ρ23 and ρ32 is ∼1 for suﬃciently small t. Therefore
we obtain
˜ρFG(t) =
⎛
⎜
⎜
⎝
ρ11 0
0
0
0 ρ22 ρ23 0
0 ρ32 ρ33 0
0
0
0 ρ44
⎞
⎟
⎟
⎠.
(12.114)

280
QUANTUM COMPUTING
Now we are ready to consider a pseudopure state generated with the ﬁeld
gradient technique. Suppose we have a thermal equilibrium density matrix
˜ρ(T ) = e−H/kBT
Z(T )
=
ℏ
8kBT diag(ω0,1 + ω0,2, ω0,1 −ω0,2, −ω0,1 + ω0,2, −ω0,1 −ω0,2).
= ℏω0,1
4kBT Iz ⊗I + ℏω0,2
4kBT I ⊗Iz,
(12.115)
where we have dropped the irrelvant term I/4 in ˜ρ(T ). Deﬁne an angle η
by cos η = ω0,2/2ω0,1, assuming ω0,2 ≤2ω0,1, and operate an η-pulse with
φ2 = π/2 on qubit 2 to yield
Uπ/2,2(η)˜ρ(T )Uπ/2,2(η)†
=
ℏ
8kBT
⎛
⎜
⎜
⎝
3ω0,2/2 ω0,1 sin η
0
0
ω0,1 sin η
ω0,2/2
0
0
0
0
−ω0,2/2 ω0,1 sin η
0
0
ω0,1 sin η −3ω0,2/2
⎞
⎟
⎟
⎠.
(12.116)
We then get rid of oﬀ-diagonal matrix elements by applying the ﬁeld gradient
to obtain
˜ρ1 = ℏω0,2
4kBT (2Iz ⊗I + I ⊗Iz).
(12.117)
We need to eliminate ρ22, ρ33 and ρ44 to obtain the pseudopure state |00⟩⟨00|,
which is done by applying (1) a π/4-pulse along the x-axis on qubit 1, (2)
free evolution without pulses for t = π/4J, (3) a π/4-pulse along −y-axis on
qubit 1 and ﬁnally (4) the ﬁeld gradient again. A staightforward but tedious
calculation shows that the density matrix obtained by applying operations (1)
through (3) is
˜ρ2 = ℏω0,2
8kBT
⎛
⎜
⎜
⎝
3 0
0
0
0 −1 0 −2
0 0 −1 0
0 −2 0 −1
⎞
⎟
⎟
⎠.
(12.118)
Finally the ﬁeld gradient (4) eliminates the oﬀ-diagonal components to yield
˜ρ3 = ℏω0,1
2kBT (Iz ⊗Iz + 1
2Iz ⊗I + 1
2I ⊗Iz)
= ℏω0,1
2kBT |00⟩⟨00|,
(12.119)
where a term proportional to the unit matrix has been dropped.
EXERCISE 12.10 (1) Elaborate on the above steps (1) through (4) to de-
rive Eq. (12.119).
(2) It has been assumed in the above analysis that ω0,i satisﬁes the condition
ω0,2 ≤2ω0,1. Repeat the above analysis by assuming ω0,2 > 2ω0,1.

NMR Quantum Computer
281
It should be noted that oﬀ-diagonal components ρ23 and ρ32 do not appear
in the density matrices throughout the above calculation; see Eqs. (12.116)
and (12.118).
Therefore the above prescription to generate a pseudopure
state using the spatial averaging is also applicable to homonucleus molecules
provided that η is set to cos−1(1/2) = π/3.
See [29, 30] for generation of pseudopure states for general n-qubit systems
by the spatial averaging method.
12.8
DiVincenzo Criteria
DiVincenzo criteria for an NMR quantum computer are evaluated as follows.
1. A scalable physical system with well-characterized qubits:
Spin 1/2 nuclei in a molecule are used as qubits. They cannot be cooled
down to ultralow temperature since a molecule must be solved in a liquid
to simplify nucleus-nucleus interaction.
Selective addressing to each
spin is possible by taking advantage of Larmor frequency diﬀerences.
Chemical shifts among the same nuclear spices make it possible to access
spins selectively even in a homonucleus molecule. However, selective
addressing becomes harder and harder as the number of the same nuclei
grows. The initialization outlined in §12.7 is also diﬃcult for a large
number of spins, and the estimated upper bound in the number of qubits
in an NMR quantum computer is ∼10.
2. The ability to initialize the state of the qubits to a simple ﬁducial state,
such as |00 . . . 0⟩:
Molecules in a liquid solvent at room temperature are in a thermal
equilibrium state, which is quite close to the uniform mixture of all
possible spin states. Since any unitary transformation cannot map a
mixed state to a pure state, we need to employ nonunitary operations,
such as temporal averaging, spatial averaging or logical labelling, to
prepare a pseudopure state |00 . . .0⟩, for example. The number of steps
(the number of pulses, say) required to prepare the pseudopure state
diverges exponentially as a function of the number of qubits n. The
number of steps cannot be too large for an NMR quantum computer
because of a ﬁnite decoherence time. The maximum number of qubits
is estimated to be ∼10 from this viewpoint too.
3. Long decoherence times, much longer than the gate operation time:
Decoherence time depends on the molecule employed as a quantum com-
puter. It may be as large as 102 ∼103 s. Single-qubit gate operation
time can be as short as ∼10−5 s, while two-qubit gate operation time,

282
QUANTUM COMPUTING
making use of the J-couplings, takes ∼10−2 ∼10−1 s. It has been
shown in [36] that a faithful implementation of Shor's algorithm pro-
viding the factorization 21 = 3 × 7 requires approximately 105 gate
operations, among which ∼104 are two-qubit gate operations. There-
fore we need at least ∼10−2 × 104 = 102 s decoherence time to execute
this modest factorization.
4. A "univeral" set of quantum gates:
One-qubit operations are implemented with rf pulses, by making use of
the Rabi oscillations. Two-qubit operations are realized by using the
J-coupling between nuclei. Some important two-qubit gates, such as
the CNOT gate and the SWAP gate, are realized. In fact, a simpliﬁed
version of Shor's factorization algorithm has already been demonstrated
[13].
5. A qubit-speciﬁc measurement capability:
Measurement of qubit states with the free induction decay (FID) is a
well-established measurement technique in NMR, having several decades
of history. It is also possible to measure the density matrix itself (quan-
tum state tomography) and the unitary gate (quantum process tomog-
raphy) within the current technology. However, the signal to noise ratio
scales as ne−an, a ∼1 being a constant, and the readout becomes more
and more diﬃcult as the number of qubits grows.
In addition to the diﬃculties listed above, thermal density matrix at room
temperature is not entangled, and it is often criticized that NMR is not a
true quantum computer. However, it works as a simulator to a real quantum
computer on which we can execute quantum algorithms. Several important
techniques have been developed from these standpoints in the past. It should
also be addressed that NMR is the only quantum computer which is com-
mercially available. An NMR quantum computer is expected to remain an
important tool to develop various techniques necessary to materialize a real
working quantum computer to come.
References
[1] Y. Kondo, M. Nakahara and S. Tanimura, in Physical Realizations of
Quantum Computing: Are the DiVincenzo Criteria Fulﬁlled in 2004?,
ed. M. Nakahara et al., World Scientiﬁc, Singapore (2006).
[2] L. M. K. Vandersypen and I. L. Chuang, Rev. Mod. Phys. 76, 1037
(2004).

NMR Quantum Computer
283
[3] J. Jones, in Quantum Entanglement and Information Processing: Lec-
ture Notes of the les Houches Summer School 2003, eds. J.-M. Raimond,
J. Dalibard and D. Esteve, Elsevier Science and Technology (2004).
[4] E. Knill, I. L. Chuang and R. Laﬂamme, Phys. Rev. A 57, 3348 (1998).
[5] I. L. Chuang et al., Nature 393, 143 (1998).
[6] J. A. Jones, M. Mosca and R. H. Hansen, Nature 393, 344 (1998).
[7] J. A. Jones and M. Mosca, Phys. Rev. Lett. 83, 1050 (1999).
[8] D. G. Cory et al., Phys. Rev. Lett. 81, 2152 (1998).
[9] M. D. Price et al., Phys. Rev. A 60, 2777 (1999).
[10] B. R. Laﬂamme et al., Phil. Trans. R. Soc. Lond. A 356, 1941 (1998).
[11] L. M. K. Vandersypen et al., Phys. Rev. Lett. 83, 3085 (1999).
[12] L. M. K. Vandersypen et al., Phys. Rev. Lett. 85, 5452 (2000).
[13] L. M. K. Vandersypen et al., Nature 414, 883 (2001).
[14] R. Br¨uschweiler, Phys. Rev. Lett. 85, 4815 (2000).
[15] F. Bloch and A. Siegert, Phys. Rev. 57, 522 (1940).
[16] A. Barenco et al., Phys. Rev. A 52, 3457 (1995).
[17] J. J. Sylvester, Phil. Mag. 34, 461 (1867).
[18] J. Hadamard, Bull. Sci. Math. 17, 240 (1893).
[19] J. A. Jones and E. Knill, J. Magn. Reson., Ser. A 141, 322 (1999).
[20] D. W. Leung et al., Phys. Rev. A 61, 042310 (2000).
[21] W. Rossmann, Lie Groups, Oxford Univ. Press, New York (2002).
[22] S. Helgason, Diﬀerential Geometry, Lie Groups and Symmetric Spaces,
Academic Press, New York (1978).
[23] M. Nakahara, Geometry, Topology and Physics (2nd ed.), Taylor and
Francis, Boca Raton, Ann Arbor, London, Tokyo (2003).
[24] N. Khaneja, R. Brockett and S. J. Glaser, Phys. Rev. A 63, 032308
(2001).
[25] J. Zhang et al., Phys. Rev. A 67, 042313 (2003).
[26] M. Nakahara et al., Phys. Lett. A 350, 27 (2006).
[27] Y. Makhlin, Quant. Info. Proc. 1, 243 (2002).
[28] E. Knill, I. L. Chuang and R. Laﬂamme, Phys. Rev. A 81, 5672 (1998).
[29] U. Sakaguchi, H. Ozawa and T. Fukumi, Phys. Rev. A 61, 042313 (2000).

284
QUANTUM COMPUTING
[30] D. G. Cory, A. F. Fahmy and T. F. Havel, Proc. Natl. Acad. Sci. USA
94, 1634 (1997).
[31] N. A. Gershenfeld and I. L. Chuang, Science 275, 350 (1997).
[32] L. M. K. Vandersypen et al., Phys. Rev. Lett. 83, 3085 (1999).
[33] L. K. Grover, in Proceedings of the 28th Annual ACM Symposium on
the Theory of Computation, 212, ACM Press, New York (1996).
[34] L. K. Grover, Phys. Rev. Lett. 79, 325 (1997).
[35] I. L. Chuang, N. Gershenfeld and M. Kubince, Phys. Rev. Lett. 80, 3408
(1998).
[36] J. J. Vartiainen et al., Phys. Rev. A 70, 012319 (2004).

13
Trapped Ions
Cirac and Zoller proposed in their seminal paper [1] published in 1995 to use
ions trapped in an external potential as qubits. Trapped ions are expected to
be scalable to a large number of qubits if the trap is segmented into several
subtraps. Currently the largest trapped ion register comprises eight qubits,
which is the largest among all proposed physical realizations.
Excellent review articles are [2] and [3], which we follow in this chapter.
13.1
Introduction
It has become possible to cool atoms and ions down to submicro Kelvins
thanks to progress in laser cooling technology. Let us consider an ion with
two energy levels, the ground state |g⟩with energy ℏωg and an excited state
|e⟩with ℏωe. Let ℏω0 = ℏωe −ℏωg be the diﬀerence between their energy
levels. Suppose an ion, with optical absorption curve Fig. 13.1 (a), is mov-
ing along the x-axis with speed v as shown in Fig. 13.1 (b). There are two
counterpropagating laser beams along ±x-directions with the frequency ωL,
which is red-detuned from ω0;∗see Fig. 13.1 (a). Then the laser beam propa-
gating in the −x-direction is blue-shifted for the ion so that the frequency is
shifted to ω′
L > ωL, while the laser beam in the x-direction is red-shifted to
ω′′
L < ωL. These frequencies are also shown in Fig. 13.1 (a), which shows that
the photons with ω′
L are more likely to be absorbed by the ion than those
with ω′′
L. In contrast, the spontaneous emission is isotropically distributed.
As a result, the ion absorbs more head-on photons than follow-up photons and
ﬁnally stops moving along the x-axis. If three pairs of laser beams along the
±x, ±y and ±z directions are applied to the atom, it will give up all the ki-
netic energy eventually, set aside possible thermal motions. Neutral atom gas
and ion gas at submicro Kelvins will be obtained with this Doppler cooling
technique [4]. Evaporative cooling is used for further cooling a gas down to
nano Kelvin regime [5].
∗A laser is "red-detuned" if its frequency ωL is slightly lower than a resonance frequency
ω0. It is "blue-detuned" if its frequency is slightly higer than ω0.
285

286
QUANTUM COMPUTING
FIGURE 13.1
(a) The absorption coeﬃcient of an ion (atom) in the vicinity of some reso-
nance frequency ω0. The width of the resonance is denoted as Γ. The atom
is irradiated by a red-detuned laser beam with the frequency ωL in the lab-
oratory frame. (b) An ion (atom) moving along the x-axis with velocity v.
Two red-detuned laser beams with frequency ωL are applied along the ±x-
directions. The laser frequency ωL is blue-shifted to a frequency ω′
L closer to
ω0 for an ion moving toward the laser beam, while it is red-shifted to ω
′′
L for
an atom moving away from the laser beam. It follows from the absorption
coeﬃcient in (a) that photons having head-on collision with the ion are more
likely to be absorbed than the photons following-up with the ion. Sponteneous
emissions of the absorbed photons are isotropic. As a result, the ion gives up
its linear momentum.

Trapped Ions
287
FIGURE 13.2
Relevant energy levels of a 40Ca+ ion. The numbers in nm denote the wave
lengths of the transition frequency.
The ﬁrst two letters denote the orbit
which is occupied by the last electron (4s for the ground state, for example).
The next two letters denote LJ, where L is the orbital angular momentum of
the last electron, while J is the quantum number of J = L + S.
In the following exposition, ions cooled in this way and stored in a linear
trap, as well as the vibrational normal modes of the ion crystal in the trap,
are used to encode information.
An eight-qubit entangled state has been realized with an ion trap [6]. At
the writing of this book, it seems the ion trap is one of the most promising
candidates of a scalable quantum computer. The deﬁnition of qubits, how to
conﬁne them in a trap, and control of one and two qubits are outlined in the
present chapter.
13.2
Electronic States of Ions as Qubits
Let us start with an example of a 40Ca+ ion to make our discussion concrete.
40Ca atom has electron conﬁguration 1s22s22p63s23p64s2. Note that the 3d
orbitals are empty in the ground state. We are interested in an ion 40Ca+,
whose electron conﬁguration in its ground state is 1s22s22p63s23p64s. The
orbitals except for 4s form a closed shell. Figure 13.2 shows the energy levels
of a 40Ca+ ion. The states 4 2S1/2 and 3 2D5/2, abbreviated simply as S1/2 and

288
QUANTUM COMPUTING
FIGURE 13.3
Initialization of ion qubit state by optical pumping. Those ions in the state |1⟩
are pumped to the P3/2 state by a laser beam in resonance with the transition
frequency D5/2 →P3/2. Excited ions decay to |0⟩with the lifetime of τ ∼7 ns,
while a small number of ions decay back to |1⟩. They are excited again to
P3/2 and decay mainly to |1⟩. Repeating this cycle many times eventually
transforms all the qubits in |1⟩to |0⟩.
D5/2 hereafter, denote the qubit states |0⟩and |1⟩, respectively. The transition
between S1/2 and D5/2 is dipole-forbidden, and the metastable state D5/2 has
a lifetime ∼1 s. Transition from D5/2 to S1/2 is made possible via the 4p P3/2
state. The D5/2 state is ﬁrst excited to the 4p P3/2 state by an 854 nm laser,
and then it decays to the S1/2 state spontaneously.
It is assumed that ions are well-separated in space from each other so that
selective addressing to each ion is possible with a well-focused laser beam. A
linear chain of N ions works as a register. The chain also supports 3N normal
modes, which may be employed as bus qubits connecting separate ions. The
above mentioned transition is also employed for sideband cooling of the linear
chain normal modes to the ground state, which we will learn more about later.
The transition S1/2 ↔4p P1/2, with λ = 397 nm and width Γ ≃20 MHz,
is used for Doppler cooling, in which a red detuned laser with ∼10 MHz
detuning is applied. This transition is also used for readout. Let the qubit
under measurement be in the state |0⟩= |S1/2⟩. Then irradiation of a laser
beam of λ = 397 nm leads to resonance ﬂuorescence. On the other hand,
the laser beam has no eﬀect if the qubit is in the state |1⟩= |D5/2⟩, and
no ﬂuorescence is observed. In case the qubit state is a superposition |ψ⟩=
a0|0⟩+ a1|1⟩, it is possible to read out the ratio |a0|2/|a1|2 by repeating the
measurement many times and counting the number of times ﬂuorescence was
observed.
Initialization of the ioninc qubit state is achieved by depleting the ions in
the D5/2 level (|1⟩) by optical pumping as shown in Fig. 13.3.
This is
done by making use of the transition D5/2 →P3/2 with an 854 nm pumping

Trapped Ions
289
laser. The ions in the state P3/2 subsequently decay mainly to the S1/2 state
(|0⟩). Ions which decay to the D5/2 state will be excited to P3/2 again and
the occupancy of P3/2 will eventually vanish. A sharply focused laser beam
initializes an individual ion, while a broad laser beam initializes all the ions.
Initialization of the phonon modes is achieved by sideband cooling; see
§13.4.2.
13.3
Ions in Paul Trap
13.3.1
Trapping Potential
There are several variants of ion traps available. In the present section, we will
analyze the linear Paul trap for concreteness [7, 8]. Earnshaw's theorem claims
that a point charge cannot be maintained in stable stationary equilibrium in
a static electric ﬁeld.
This is most easily seen from the Laplace equation
ΔΦ = 0, where Φ is the potential energy acting on a charge.
Φ may be
expanded around a local extremum, which is chosen to be the origin, as Φ =
ax2+by2+cz2. Substituting this into the Laplace equation leads to a+b+c =
0, from which we know at least one of a, b and c must be negative, and
the potential takes a local maximum at the origin along the corresponding
direction.
If we want to conﬁne a collection of charges, therefore, we have to ﬁnd a
way out of this theorem. A possible loophole is to introduce a time-dependent
electric ﬁeld. The Paul trap shown in Fig. 13.4 (a) is made of four bars and
a set of endcap electrodes. Figure 13.5 shows an actual ion trap.
Let us look at the potential produced by the four bars, which attains radial
conﬁnement of ions. Let a be the distance between the center of the trap and
that of the axes of the bars as shown in Fig. 13.4 (b). We take the trap axis
as the z-axis as depicted in Fig. 13.4 (a). The potential produced by the bar
A is
VA(x, y) = V0
2 cos(Ωt)

ln

x2 + (y −a)2
d
+ 1

= V0
2 cos(Ωt)

ln

x2 + (y −a)2
a
+ ln a
d + 1

,
where (V0/2) cosΩt is the applied voltage and d is the radius of the electrode
bar. By adding all the contributions from the four bars we obtain
V⊥(x, y) = V0
4 cos(Ωt)

ln x2 + (y −a)2
a2
+ ln x2 + (y + a)2
a2

290
QUANTUM COMPUTING
FIGURE 13.4
(a) Schematic diagram of a Paul trap. (b) Oscillating voltage (V0/2) cosΩt is
applied to bars A and C while −(V0/2) cosΩt is applied to bars B and D for
radial conﬁnement. A voltage Vcap is applied to a pair of endcaps in (a) for
axial conﬁnement.
FIGURE 13.5
Actual ion trap. Courtesy of Shinji Urabe, Osaka University, Japan.

Trapped Ions
291
−ln (x −a)2 + y2
a2
−ln (x + a)2 + y2
a2

≃V0 cos(Ωt)x2 −y2
a2
,
(13.1)
where we assumed |x|, |y| ≪a in the expansion. Moreover, we have ignored
the mirror image contribution due to the presence of other bars by assuming
d ≪a. Including the mirror images to the potential introduces a multiplica-
tive factor to V⊥(x, y), but its functional form remains the same.
The four bars have been shown to produce a quadrupole oscillating ﬁeld
(13.1) around the origin. We need to study the equation of motion of an ion
to show that it is radially conﬁned under this potential. Let Q be the charge
and M be the mass of the ion. Then the radial equations of motion are
M d2x
dt2 = −2QV0
a2
cos(Ωt)x
(13.2)
M d2y
dt2 = 2QV0
a2
cos(Ωt)y.
(13.3)
By dividing the above equations by M and introducing the parameter
q =
4QV0
MΩ2a2 ,
(13.4)
we obtain
d2x
dt2 + q Ω2
2 cos(Ωt)x = 0
(13.5)
d2y
dt2 −q Ω2
2 cos(Ωt)y = 0.
(13.6)
These equations are called the Mathieu equations, and their mathematical
properites are well known. General motion of an ion in the xy-plane is sepa-
rated into a slow secular harmonic motion, called guiding center motion,
around the origin with the angular frequencies
ω⊥0 ≡Ωq
2
√
2
(13.7)
and fast oscillation, called the micromotion, with the frequency Ω. To show
this, we separate the coordinate x as x = x0 + δx, where x0 denotes secular
motion, while δx describes the micromotion. If this separation is substituted
into Eq. (13.2), we obtain
¨x0 + δ¨x = −q Ω2
2 cos(Ωt)(x0 + δx).
(13.8)
We assume here that |¨x0| ≪|δ¨x| and |x0| ≫|δx|. Then δx satisﬁes
δ¨x = −q Ω2
2 cos(Ωt)x0.

292
QUANTUM COMPUTING
FIGURE 13.6
Motion of an ion in a trap with q = 0.1. (a) The x- and y-coordinates of an
ion as functions of Ωt. (b) The trajectory in the xy-plane.
Assume that x0 oscillates slowly compared to δx and substitute the ansatz
δx ∝cos(Ωt) in the above equation to ﬁnd
δx = q
2 cos(Ωt)x0.
(13.9)
Substituting this into Eq. (13.8), we ﬁnd x0 satisﬁes the equation of motion
¨x0 = −q Ω2
2 cos(Ωt)δx = −q2
4 Ω2 cos2(Ωt)x0.
(13.10)
Assume x0 ∝cos(ω⊥0t) and ω⊥0 ≪Ω. Then we may replace cos2(Ωt) in the
above equation by ⟨cos2(Ωt)⟩= 1/2 to obtain
¨x0 = −q2Ω2
8
x0,
(13.11)
from which we ﬁnd
ω⊥0 = Ωq
2
√
2.
(13.12)
Figure 13.6 shows the trajectory of an ion in the trap.
Now we introduce the axial-conﬁnement potential Vcap to the endcap elec-
trodes. Let L be the distance between the two endcaps, whose tips are at
z = ±L/2. Then the z-dependence of the potential in the vicinity of the
z-axis takes the form c1[z2 −(x2 + y2)/2] + c2 in the lowest order approxi-
mation in z. Here the x- and y-dependences are added to satisfy the Laplace

Trapped Ions
293
equation. From the condition c1(L/2)2 + c2 = Vcap, we may put the potential
produced by the endcaps as
Vz(x, y, z) = c1

z2 −1
2(x2 + y2) −
L
2
2
+ Vcap.
The coeﬃcient c1 is a constant ﬁxed by the geometry of the trap. For later
convenience, we write c1 = 4Vcapα/L2, where α is a dimensionless constant.
We then ﬁnd
Vz(x, y, z) = 4Vcapα
L2

z2 −1
2(x2 + y2)

,
(13.13)
where constant terms are dropped.
By adding the radial and the axial potentials, we ﬁnally obtain the total
potential
V (x, y, z) = V0 cos(Ωt)x2 −y2
a2
+ 4Vcapα
L2

z2 −1
2(x2 + y2)

.
(13.14)
The equations of motion are derived from Eq. (13.14) as
M d2x
dt2 −Q
4Vcapα
L2
−2V0
a2 cos(Ωt)

x = 0
(13.15)
M d2y
dt2 −Q
4Vcapα
L2
+ 2V0
a2 cos(Ωt)

y = 0
(13.16)
M d2z
dt2 + Q8Vcapα
L2
z = 0.
(13.17)
By dividing the above equations by M and introducing the parameters
b = QαVcap
ML2Ω2 , q = 2QC0
Mr2
0Ω2 ,
we obtain the equations of motion
d2x
dt2 + Ω2
4 [b −2q cos(Ωt)] x = 0,
(13.18)
d2y
dt2 + Ω2
4 [b + 2q cos(Ωt)] y = 0,
(13.19)
d2z
dt2 + bΩ2
2 z = 0.
(13.20)
The x- and y-components are described again by the Mathieu equations.
Equations (13.5) and (13.5) are special cases of (13.18) and (13.19), respec-
tively, in which b is set to 0.
The equation of motion along the z-axis is
nothing but that of a simple harmonic oscillator with the angular frequency
ωz =
*
b
2Ω.
(13.21)

294
QUANTUM COMPUTING
FIGURE 13.7
Four ions in a trap. Photo courtesy of Shinji Urabe, Osaka University, Japan.
The transverse frequencies ωx,y are still given by ω⊥0 in Eq. (13.12) since we
assume b ≪q.
Figure 13.7 shows the image of four ions trapped in the apparatus shown
in Fig. 13.5.
13.3.2
Lattice Formation
Suppose there are N ions of the same species along the z-axis of the Paul
trap. Let zn be the z coordinate of the nth ion. We also assume, as before,
that the ions are trapped tightly in the radial (xy) direction. The potential
energy of this system is
U = 1
2Mω2
z
N

j=1
z2
j + Q2
8πϵ0
N

j,k=1 (j̸=k)
1
|zk −zj|,
(13.22)
where we have put xj = yj = 0 (1 ≤j ≤N). The equilibrium positions of
the ions are ﬁxed by solving the potential minimization equations
∂U
∂zi
= 0
(1 ≤i ≤N).
(13.23)
A few examples are in order. Let N = 2. The condition (13.23) yields
Mω2
zz1 +
Q2
4πϵ0(z2 −z1)2 = Mω2
zz2 −
Q2
4πϵ0(z2 −z1)2 = 0,
where we assumed z1 < 0 < z2. The above equations have a solution
z2 = −z1 =
1
4
1/3
l ≃0.630 l,
l3 =

Q2
4πϵ0Mω2z

.
(13.24)
The parameter l characterizes the interionic distance.
Let us consider the case N = 3, for which we take z1 < z2 < z3. Equa-
tion (13.23) yields
z1 + l3

1
(z2 −z1)2 +
1
(z3 −z1)2

= 0

Trapped Ions
295
FIGURE 13.8
Equilibrium positions of ions for 2 ≤N ≤10.
z2 + l3

−
1
(z2 −z1)2 +
1
(z3 −z1)2

= 0
z3 −l3

1
(z3 −z2)2 +
1
(z3 −z1)2

= 0.
By substituting a symmetry ansatz z3 = −z1, z2 = 0, we immediately ﬁnd the
solution
z3 = −z1 =
5
4
1/3
l ≃1.077 l, z2 = 0.
(13.25)
We have to resort to numerical solutions for general N. We obtain the
results
N = 4 : z4 = −z1 = 1.437 l, z3 = −z2 = 0.454 l
N = 5 : z5 = −z1 = 1.743 l, z3 = −z2 = 0.822 l, z3 = 0
(13.26)
N = 6 : z6 = −z1 = 2.012 l, z5 = −z2 = 1.136 l,
z4 = −z3 = 0.370 l,
where we have arranged the coordinates in such a way that zi < zj for i < j. It
is found from the above solutions and Fig. 13.8 that the interionic distance for
a ﬁxed ion number N is least at the center, and this distance is a monotonically
decreasing function of N.
A numerical estimate shows that the interionic
distance Δz(N) at the trap center scales as
Δz(N) ≃2.018 l
N 0.59
(13.27)
with a good precision [9].

296
QUANTUM COMPUTING
13.3.3
Normal Modes
It will be shown below that normal modes of the one-dimensional crystal play
a very important role in an ion trap quantum computer. Low-frequency modes
act as a qubit bus connecting ionic qubits.
Suppose the ions oscillate with small amplitudes around their equilibrium
positions. Let us expand the potential energy U around the equilibrium po-
sition of each ion as
Ujj ≡∂2U
∂z2
j
= Mω2
z + Q2
4πϵ0
N

k=1(k̸=j)
1
|zk −zj|3
= Mω2
z
⎛
⎝1 + l3
N

k=1(k̸=j)
1
|zk −zj|3
⎞
⎠,
(13.28)
Ujk ≡
∂2U
∂zj∂zk
= −Q2
4πϵ0
1
|zk −zj|3 = −Mω2
z
l3
|zk −zj|3 .
(13.29)
Let z0
j be the equilibrium position of the jth ion and expand zj as zj = z0
j +δzj.
The Lagrangian is then expanded as
L = M
2

j
˙z2
j −M
2 ω2
z

j
z2
j −Q2
8πϵ0

j,k(j̸=k)
1
|zk −zj|
≃M
2

j
˙δz
2
j −1
2
N

j,k=1
Ujkδzjδzk.
(13.30)
The Euler-Lagrange equation derived from this Lagrangian is
d
dt
∂L
∂δ ˙zj
−∂L
∂zj
= Mδ¨zj +

k̸=j
Ujkδzk.
(13.31)
Substituting the ansatz δzj = Aje−iνt into the above equation, we obtain
−Mν2Aj + 
k UjkAk = 0 for 1 ≤j ≤N or
det(Ujk −Mν2δjk) = 0.
(13.32)
Let us introduce a dimensionless eigenvalue λ by ν2 = ω2
zλ. By inspecting the
characteristic equation

k
Ujku(p)
k
= Mω2
zλpu(p)
j ,
(13.33)
we ﬁnd that
u(1) =
1
√
N
(1, 1, . . . , 1)t
(λ1 = 1),
u(2) =
1

j z2
j
(z1, z2, . . . , zN)t
(λ2 = 3)
(13.34)

Trapped Ions
297
are normalized eigenvectors. The ﬁrst mode with the frequency ωz has no
nodes. It is the motion of the ion lattice as a whole and is called the center
of mass mode (COM). The second mode, with a single node, with the
frequency
√
3ωz is called the breathing mode. Note that the eigenvalues as
well as the form of the eigenvectors are independent of N. All the other modes
have higher energies, and their explicit forms must be obtained numerically.
It follows from orthogonality between eigenvectors of a symmetric matrix Ujk
that
N

k=1
u(p)
k
=
√
Nu(p) · u(1) = 0
(2 ≤p ≤N).
(13.35)
All the modes are evaluated explicitly for a small number of ions.
For
example,
u(1) =
1
√
2(1, 1)t
λ1 = 1
u(2) =
1
√
2(−1, 1)t
λ2 = 3
(13.36)
for N = 2 and
u(1) =
1
√
3(1, 1, 1)t
λ1 = 1
u(2) =
1
√
2(−1, 0, 1)t
λ2 = 3
u(3) =
1
√
6
(1, −2, 1)t
λ3 = 29
5
(13.37)
for N = 3. See [9] for normal modes up to N = 10. Modes u(1) and u(2) are
the only relevant modes we are concerned with at low enough temperatures.
EXERCISE 13.1 Verify that u(3) in Eq. (13.37) for N = 3 is indeed an
eigenvector with a proper eigenvalue λ3 = 29/5.
Now the displacement δzj from the equilibrium position z0
j is expanded in
terms of the normal modes as
δzj(t) =
N

p=1
Qp(t)u(p)
j
(1 ≤j ≤N).
(13.38)
Substitution of this expansion into the Lagrangian (13.30) yields decoupled
Lagrangian
L = M
2
N

p=1

˙Q2
p −ω2
zλpQ2
p

.
(13.39)

298
QUANTUM COMPUTING
The coodinate zj of the jth ion is
zj = z0
j + Re
 N

p=1
Cpu(p)
j e−iωz√
λpt

,
(13.40)
where we put Qp = Cpe−iωz√
λpt. Suppose only the lowest mode u(1) (COM
mode) is excited. The coordinate then simpliﬁes as
zj = z0
j + Re
 C1
√
N
e−iωzt

.
(13.41)
These modes are treated as a quantized harmonic oscillator in the following.
13.4
Ion Qubit
13.4.1
One-Spin Hamiltonian
Let us consider 40Ca+ ions for deﬁniteness in which states 42S1/2 and 32D5/2
form the qubit basis vectors. These states are coupled through quadrupole
interaction, whose Hamiltonian is
Hint = e
2

a,b=x,y,z
rarb
∂Ea
∂Rb
(σ+ + σ−),
σ± = 1
2(σx ± iσy),
(13.42)
where R is the position of the ion, r is the position of the valence electron with
respect to the nucleus and E is the electric ﬁeld of the laser beam propagating
with the wave vector k, which is written as
E = E0 sin(k · x −ωLt −φ)
(13.43)
assuming it is linearly polarized.
The Rabi oscillation frequency in this case is
ℏΩ = e
2⟨32D5/2|(k · r)(E0 · r)|42S1/2⟩.
(13.44)
We assume the laser beam is focused so that it irradiates the jth ion only and
has no eﬀect on the other ions in the chain. The interaction between the laser
and the jth ion at Rj = (0, 0, zj) is
Hint = ℏΩ cos(kzj cos θ −ωLt −φ)(σ+ + σ−),
(13.45)
where θ is the angle between k and the z-axis and we assume θ is independent
of j, i.e., the distance between the laser and an ion is much larger than the
ion lattice size.

Trapped Ions
299
Let us consider the pth normal mode of the lattice vibration. The quantized
Hamiltonian and the normal coordinate are
Hh = ℏνpa†
pap,
Qp =

ℏ
2Mνp
(a†
p + ap),
(13.46)
where νp =

λpωz. The correspondence between the normal coordinate Qp
and the actual displacement zj of the jth ion is
δzj = u(p)
j Qp.
(13.47)
We drop the index p from Qp, ap and νp hereafter to simplify the notation.
Now the interaction Hamiltonian is put in the form
Hint = ℏΩ cos

ηj
 
a + a†!
−ωLt −φj

(σ+ + σ−),
(13.48)
where
ηj = ujk
*
ℏ
2Mν cos θ,
and φj is the phase of the laser beam at the position of the jth ion. The
dimensionless quantity
η ≡k
*
ℏ
2Mν
(13.49)
is called the Lamb-Dicke parameter. Note that

ℏ/2Mν is on the order
of

⟨δz2
j ⟩in the pth normal mode, and hence the Lamb-Dicke parameter η
denotes the approximate ratio of

⟨δz2
j ⟩and the laser wave length when N
is suﬃciently small.
Let us introduce the interaction picture in which the main part of the
Hamiltonian is Hh + Hion, where
Hion = −ℏ
2ω0σz
(13.50)
and ℏω0 = ℏωD −ℏωS is the diﬀerence between the energies of the excited
state D and the ground state S. Transformation to the interaction picture is
realized by the unitary matrix
U(t) = exp

−i
ℏ(Hh + Hion)t

.
(13.51)
The interaction Hamiltonian in this picture is
H′
int(t) = U(t)†HintU(t)
= ℏ
2Ω
#
σ+eiη(ae−iνt+a†eiνt)ei(φ−δt) + Hermitian conjugate
$
,
(13.52)

300
QUANTUM COMPUTING
where δ = ωL−ω0 and we have dropped rapidly oscillating terms proportional
to e±i(ωL+ω0) (rotating wave approximation). We have set uj = 1 and
cos θ = 1 in the Hamiltonian to simplify our argument.
It is possible to couple a lattice vibrational mode to a particular ionic state
by controlling the detuning δ. There appear terms of the form σ+aka†l and
σ−ala†k in the interaction Hamiltonian H′
int if the exponential function con-
taining a and a† is expanded. These terms introduce coupling between the
states |0⟩|n⟩and |1⟩|n + s⟩when δ ∼sν, where s = k −l. Here |n⟩is the
eigenvector of the operator a†a with the phonon number n ∈{0, 1, 2, . . .}.
The laser frequency ωL is detuned toward the blue side from the resonance
fequency δ in case s > 0.
Accordingly this transition is called the blue
sideband transition. If it is shifted toward the red side (s < 0), on the other
hand, the corresponding transition is called the red sideband transition.
The laser changes the internal electronic states while leaving the vibration
mode unchanged when s = 0. This transition is called the carrier transition.
Suppose the quantum number of the harmonic mode is n. Then the size of
the wave function scales as ∼√2n + 1a0, where a0 ≃

ℏ/2Mν. Consider the
Lamb-Dicke limit η2(2n + 1) ≪1, in which the laser ﬁeld may be treated
as slowly varying over the range of ion's oscillatory motion. The interaction
Hamiltonian H′
int is expanded in terms of η, in this case, and reduces to
HLD = ℏ
2Ωσ+

1 + iη(ae−iνt + a†eiνt)

ei(φ−δt) + Hermitian conjugate.
(13.53)
Suppose ωL is in tune with ω0 (carrier transition) so that δ = 0. Then
HLD further simpliﬁes, by dropping terms oscillating with time, to a time-
independent form as
HCT = ℏ
2Ω(σ+eiφ + σ−e−iφ).
(13.54)
This Hamiltonian introduces the transitions |0⟩|n⟩↔|1⟩|n⟩with the Rabi
frequency Ω.
Let us consider the red sideband transition, for which δ < 0, next. We take
δ = −ν as an example, for which s = −1. Then HLD becomes
HRST = iℏ
2ηΩ
 
aσ+eiφ −a†σ−e−iφ!
,
(13.55)
again by dropping time-dependent terms. This Hamiltonian gives rise to the
transitions |0⟩|n⟩↔|1⟩|n −1⟩with Rabi frequency Ωn,n−1 = Ωη√n as shown
in the next section.
Similarly blue-sideband transtion with δ = ν (s = +1) simpliﬁes the Hamil-
tonian to
HBST = iℏ
2ηΩ
 
a†σ+eiφ −aσ−e−iφ!
,
(13.56)
where only terms with no time dependence have been kept. It introduces the
transitions |0⟩|n⟩↔|1⟩|n + 1⟩with Rabi frequency Ωn,n+1 = Ωη√n + 1; see
the next section.

Trapped Ions
301
FIGURE 13.9
(a) Ionic and vibrational energy levels. A state |m⟩|n⟩stands for the tensor
product of an ionic energy eigenstate |m⟩and phonon eigenstate |n⟩, where
|m = 0⟩= |S1/2⟩and |m = 1⟩= |D5/2⟩, respectively, and n = 0, 1, 2, . . . is the
phonon number eigenvalue. The energy diﬀerence between the two ionic states
is ℏω0 = ℏωD −ℏωS. Each ionic eigenstate has a tower of phonon eigenstates,
separately by equal distance ℏν. The phonon energy quantum ℏν (≪ℏω0)
is exaggerated in the ﬁgure. The transition |0⟩|n⟩↔|1⟩|n + s⟩(s ∈Z) is
called a carrier transition if s = 0, a red-sideband transition if s < 0 and a
blue-sideband transition if s > 0. (b) Sideband cooling mechanism. An ion is
irradiated by a laser beam of the frequency ω0 −ν. An excited phonon state
|0⟩|2⟩, for example, absorbs a photon and is excited to |1⟩|1⟩. The excited
state then decays, by emitting a photon with frequencey ω0, to |0⟩|1⟩. The
ion is excited to |1⟩|0⟩in the next cycle and decays into the phonon vacuum
state |0⟩|0⟩. It is impossible to excite this ion state any more since there is no
state to which |0⟩|0⟩is excited by a red-sideband laser beam.
13.4.2
Sideband Cooling
It is possible to cool an ionic system by employing the Doppler cooling such
that the average number of residual phonons is approximately 15. The number
of phonons is further reduced to ∼0 if sideband cooling is introduced [10].
As a result, it is possible to employ phonon eigenstates |0⟩, a state with no
phonons, and |1⟩, a state with a single phonon, to construct a phonon qubit.
Let Γ be the natural line width of the excited state and ν be the angular
frequency of the phonon. They must satisfy the inequality ν ≫Γ for the
phonon levels to be resolved and sideband cooling to work; see Fig. 13.9. The
transition between the ground state S1/2 and the excited state D5/2 with a
very long natural lifetime ∼1 s is employed to satisfy this condition in a Ca+
ion. The line width of this transition is Γ ∼20 MHz, and it is easy to conﬁne

302
QUANTUM COMPUTING
FIGURE 13.10
Eﬃcient sideband cooling of a vibrational mode. D5/2 state with a long life-
time is further excited to an auxiliary state |aux⟩which decays fast.
a lattice in a trap with ν ≫Γ. The resonance transition between the states
|S⟩|n⟩and |D⟩|n + s⟩, i.e., between the phonon number eigenstates |n⟩and
|n+s⟩is realized if we take δ = νs. Processes with s ̸= 0 are called sideband
resonance transitions to discriminate them from the transition with s = 0.
The process |S⟩|n⟩→|D⟩|n −1⟩is driven if the laser is set to red-detuned
frequency with s = −1. Subsequently the ionic state decays from |D⟩to |S⟩
by spontaneous photon emission. The matrix element of the phonon number
changing process is proportional to η, which is very small in the Lamb-Dicke
limit. Therefore the phonon number preserving process |D⟩|n−1⟩→|S⟩|n−1⟩
is the dominant one in this limit. As a result the phonon number reduces as
|S⟩|n⟩to |S⟩|n −1⟩in the end of these processes. The state with vanishing
phonon number is reached if this process is repeated many times.
The very long lifetime ∼1 s of the D5/2 state is an obstacle against eﬃcient
cooling in the above process. To avoid this diﬃculty, the ion in the state D5/2
is excited to P3/2, which decays to S1/2 with a very short life time ∼8 ns,
leading to eﬃcient cooling of the vibrational mode as shown in Fig. 13.10.
13.5
Quantum Gates
13.5.1
One-Qubit Gates
13.5.1.1
Carrier Transition
The time-development operator for the carrier transition is
UCT(t) = e−i
ℏHCTt = exp

−iΩt
2
 
σ+eiφ + σ−e−iφ!

Trapped Ions
303
=
∞

k=0
1
(2k)!

−iΩt
2
2k 
(σ+σ−)k + (σ−σ+)k
+
∞

k=0
1
(2k + 1)!

−iΩt
2
2k+1 
(σ+σ−)kσ+eiφ + (σ−σ+)kσ−e−iφ
.
(13.57)
We implicitly assume that the harmonic oscillator mode stays in an eigenstate
and no transition to diﬀerent phonon number states takes place, which implies
that only operators of the form |n⟩⟨n| appear in the expansion of UCT(t). Now
UCT(t) takes the form
∞

n=0
cos Ωt
2 [|0⟩⟨0| ⊗|n⟩⟨n| + |1⟩⟨1| ⊗|n⟩⟨n|]
−i
∞

n=0
sin Ωt
2

|1⟩⟨0| ⊗|n⟩⟨n|eiφ + |0⟩⟨1| ⊗|n⟩⟨n|e−iφ
.
(13.58)
However, it follows from these observations that any unitary rotation of the
form
R(θ, φ) = cos
θ
2

I −i sin
θ
2
  0 e−iφ
eiφ
0

= e−i(θ/2)(cos φσx+sin φσy)
(13.59)
in the subspace spanned by {|0⟩|n⟩, |1⟩|n⟩} is realized by irradiating an ion
with a laser beam in the carrier frequency for a duration t, where θ = Ωt.
Note that any SU(2) rotation may be implemented with σx and σy rotations.
13.5.1.2
Red Sideband Transition
Let us consider the red sideband transition next.
The time development
operator is
URST = e−iHRSTt = exp

−iηΩt
2
 
iaσ+eiφ −ia†σ−e−iφ!
=
∞

k=0
1
(2k)!

−iηΩt
2
2k # 
aσ+a†σ−
!k +
 
a†σ−aσ+
!k$
+
∞

k=0
1
(2k + 1)!

−iηΩt
2
2k+1
×
# 
aσ+a†σ−
!k iaσ+eiφ −
 
a†σ−aσ+
!k ia†σ−e−iφ$
.
(13.60)
The transformation URST(t) takes the form
∞

n=0
cos Ωnt
2
[|0⟩⟨0| ⊗|n⟩⟨n| + |1⟩⟨1| ⊗|n −1⟩⟨n −1|]

304
QUANTUM COMPUTING
+
∞

n=0
sin Ωnt
2

|1⟩⟨0| ⊗|n −1⟩⟨n|eiφ −|0⟩⟨1| ⊗|n⟩⟨n −1|e−iφ
,
(13.61)
where Ωn = √nηΩ. Let us restrict ourselves within the subspace spanned by
{|0⟩|n⟩, |1⟩|n −1⟩}. Then the matrix URST generates a rotation
R−
n (θ, φ) = cos
√nθ
2
I + sin
√nθ
2
 0 −e−iφ
eiφ
0

,
(13.62)
where θ = ηΩt.
13.5.1.3
Blue-Sideband Transition
Finally let us consider the blue-sideband transition. The time development
operator is
URST = e−iHBSTt = exp

−iηΩt
2
 
ia†σ−eiφ −iaσ−e−iφ!
=
∞

k=0
1
(2k)!

−iηΩt
2
2k # 
a†σ+aσ−
!k +
 
aσ−a†σ+
!k$
+
∞

k=0
1
(2k + 1)!

−iηΩt
2
2k+1
×
# 
a†σ+aσ−
!k ia†σ+eiφ −
 
aσ−a†σ+
!k iaσ−e−iφ$
. (13.63)
The transformation UBST(t) takes the form
∞

n=0
cos Ωnt
2
[|0⟩⟨0| ⊗|n −1⟩⟨n −1| + |1⟩⟨1| ⊗|n⟩⟨n|]
+
∞

n=0
sin Ωnt
2

|1⟩⟨0| ⊗|n⟩⟨n −1|eiφ −|0⟩⟨1| ⊗|n −1⟩⟨n|e−iφ
.
(13.64)
It generates a rotation
R+
n (θ, φ) = cos
√nθ
2
I + sin
√nθ
2

0 −e−iφ
eiφ
0

(13.65)
in the subspace spanned by {|0⟩|n −1⟩, |1⟩|n⟩}, where θ = ηΩt.
13.5.2
CNOT Gate
The CNOT gate proposed by Cirac and Zoller [1] has been realized by
Schmidt-Kaler et al. [11]. The pulse sequence the latter employed was slightly

Trapped Ions
305
FIGURE 13.11
Pulse sequence to implement the CNOT gate experimentally [11]. The ﬁrst
and the last pulses are applied to ion 1, while six pulses are applied to ion
2. Note that the Rabi frequencies for R(θ, φ) and R+(θ, φ) are diﬀerent, and
hence the pulse widths are also diﬀerent.
diﬀerent from one in the origial proposal in [1]. It is given as
R+
1 (π, π)R2(π/2, π)Φc
2R2(π/2, 0)R+
1 (π, 0),
(13.66)
where the subscript j ∈{1, 2} in Rj refers to which ion the pulse acts on and
Φc
2 is a composite single ion phase gate
Φc
2 = R+
2 (π/
√
2, π/2)R+
2 (π, 0)R+
2 (π/
√
2, π/2)R+
2 (π, 0)
(13.67)
acting on ion 2. Here Rj(θ, φ) and R+
j (θ, φ) are rotation operators associated
with carrier and blue-sideband transitions, respectively. Figure 13.11 shows
the pulse sequence to implement the CNOT gate experimentally. Let us see
how the basis vectors
{|0⟩1|0⟩2|0⟩, |0⟩1|1⟩2|0⟩, |1⟩1|0⟩2|0⟩, |1⟩1|1⟩2|0⟩}
transform under the above gate operations, where |n⟩denotes the phonon
states, while |0⟩j and |1⟩j (j ∈{1, 2}) denote the jth ion states S and D,
respectively. We ﬁnd
R+
1 (π, 0)
R2(π/2, 0)
|0⟩1|0⟩2|0⟩
→
|1⟩1|0⟩2|1⟩
→
|1⟩1 1
√
2(|0⟩2 −i|1⟩2)|1⟩
|0⟩1|1⟩2|0⟩
→
|1⟩1|1⟩2|1⟩
→
|1⟩1 1
√
2(|1⟩2 −i|0⟩2)|1⟩
|1⟩1|0⟩2|0⟩
→
|1⟩1|0⟩2|0⟩
→
|1⟩1 1
√
2(|0⟩2 −i|1⟩2)|0⟩
|1⟩1|1⟩2|0⟩
→
|1⟩1|1⟩2|0⟩
→
|1⟩1 1
√
2(|1⟩2 −i|0⟩2)|0⟩.
(13.68)

306
QUANTUM COMPUTING
The composite single ion phase gate Φc
2 is applied next to the second ion.
There are second-ion states |0⟩2|0⟩, |0⟩2|1⟩, |1⟩2|0⟩, |1⟩2|1⟩participating in
Eq. (13.68). The state |1⟩2|0⟩does not change under the operation of Φc
2.
The states |0⟩2|0⟩and |1⟩2|1⟩correspond to the subspace with n = 1 in
Eq. (13.65), where Φc
2 is explicitly given as Φc
2 = −I, where I is the unit
matrix of order 2. The state |0⟩2|1⟩and its companion state |1⟩2|2⟩corre-
spond to the n = 2 subspace in Eq. (13.65), where Φc
2 is again given by
−I. Therefore the states {|0⟩2|0⟩, |0⟩2|1⟩, |1⟩2|0⟩, |1⟩2|1⟩} are transformed into
the states {−|0⟩2|0⟩, −|0⟩2|1⟩, |1⟩2|0⟩, −|1⟩2|1⟩} under the action of Φc
2. As a
result, the output states in Eq. (13.68) are further trasformed as
Φc
2
R2(π/2, π)
R+
1 (π, π)
→|1⟩1 1
√
2(−|0⟩2 + i|1⟩2)|1⟩
→
−|1⟩1|0⟩2|1⟩
→
|0⟩1|0⟩2|0⟩
→|1⟩1 1
√
2(−|1⟩2 + i|0⟩2)|1⟩
→
−|1⟩1|1⟩2|1⟩
→
|0⟩1|1⟩2|0⟩
→|1⟩1 1
√
2(−|0⟩2 −i|1⟩2)|0⟩
→
−i|1⟩1|1⟩2|0⟩
→
−i|1⟩1|1⟩2|0⟩
→|1⟩1 1
√
2(|1⟩2 + i|0⟩2)|0⟩
→
i|1⟩1|0⟩2|0⟩
→
i|1⟩1|0⟩2|0⟩.
(13.69)
In summary, the two-qubit gate obtained by the operation of the pulse
sequences (13.68) and (13.69) is
U =
⎛
⎜
⎜
⎝
1 0 0 0
0 1 0 0
0 0 0 i
0 0 −i 0
⎞
⎟
⎟
⎠,
(13.70)
which diﬀeres from the CNOT gate by a phase ±i in two matrix elements.
The CNOT gate is obtained if extra single qubit rotation gates are applied
on qubit 2 as
R2(π/2, −π/2)R2(π/2, 0)UR2(π/2, π)R2(π/2, π/2).
(13.71)
EXERCISE 13.2 Show that the pulse sequence (13.71) in fact implements
the CNOT gate.
13.6
Readout
Readout of an ion qubit state is conducted by the electron shelving method
[12, 13, 14], depicted in Fig. 13.12. The ion lattice is irradiated by a laser beam
with the frequency in resonance with the transition S1/2 →P1/2. Suppose an

Trapped Ions
307
FIGURE 13.12
Electron shelving method for ionic state readout.
An ion in the state |0⟩
absorbs the resonant laser photon to be excited to P1/2, which decays fast to
|0⟩by emitting a photon. This process is repeated many times, and ﬂuorescent
light is observed from those ions in |0⟩. Ions in the |1⟩state remain dark during
laser irradiation.
ion is in the state S1/2 (|0⟩). The ion absorbs a photon and makes transition
to P1/2. Due to a short lifetime ∼7 ns, this state decays to the initial state |0⟩
by emitting a photon. The ion absorbs a photon from a laser beam again and
makes transition to P1/2 again, followed by a decay to |0⟩with an emitted
photon.
This cycle is repeated while the laser beam is turned on.
If, in
contrast, the ion is in the state |1⟩, transition to P1/2 is forbidden and it does
not change the qubit state. Therefore, it does not emit any photons while the
laser is turned on. In this way, the photon count from each ion tells whether
the ion was initially in the state |0⟩or |1⟩. This readout method is called the
electron shelving method.
13.7
DiVincenzo Criteria
DiVincenzo criteria for an ion trap quantum computer are evaluated as follows.
1. A scalable physical system with well-characterized qubits:
Two internal energy levels of an ion serve as a qubit. Selective addressing
is possible by using a focused laser beam directed toward each ion. A
linear trap is expected to accommodate up to ∼100 ions.
Putting
more ions leads to instability of the system. Eight ions in a trap is the
maximum number of qubits ever realized among all physical realizations

308
QUANTUM COMPUTING
[6]. Distant ions may interact with each other through the vibrational
modes of the ionic lattice. This saves lots of gates when we need to
operate a two-qubit gate on two distant ionic qubits. The number of
qubits may be further increased by segmenting the trap into several
subtraps [15]. Ions may be shuttled from one subtrap to the other for
interaction if necessary.
2. The ability to initialize the state of the qubits to a simple ﬁducial state,
such as |00 . . . 0⟩:
Intialization of the ionic internal state is done by optical pumping to
an excited state, from which ions decay fast into the ground state
(Fig. 13.3). Lattice vibration is initialized by the optical sideband cool-
ing method (§13.4.2).
3. Long decoherence times, much longer than the gate operation time:
Decoherence in ionic qubits and lattice vibrations must be discussed sep-
arately. For ionic qubits, coherence times of 100−1 s (Ca) and 102−3 s
(Be) have been reported. Coherence time is limited by unwanted tran-
sitions between qubit states or transition to states orthogonal to the
qubit states. Phonon qubits (lattice vibrations) decohere due to sev-
eral reasons. The most important one is noise in the trapping potential
caused by voltage ﬂuctuation, for example. Collision of the residual gas
may lead to decoherence. Micromotion and lattice anharmonicity also
cause deviation from an ideal harmonic oscillation. Mode-mode cou-
pling between diﬀerenct normal modes is introduced through the lattice
nonlinearity.
4. A "univeral" set of quantum gates:
Single-qubit gates are realized by focused laser beams acting on indi-
vidual qubits. Lattice vibrational modes and ionic modes are entangled
by making use of sideband transitions. The same technique makes it
possible to entangle distant qubits through the vibrational mode. The
CNOT gate acting on two qubits and controlled-NOT gate with many
control qubits are already demonstrated [11].
5. A qubit-speciﬁc measurement capability:
The states of ions after the execution of a quantum algorithm are read
out by the electron shelving method (§13.6).
References
[1] J. I. Cirac and P. Zoller, Phys. Rev. Lett., 74, 4091 (1995).

Trapped Ions
309
[2] M. ˇSaˇsura and V. Buˇzek, J. Mod. Opt., 49, 1593 (2002).
[3] M. Riebe, University of Innsbruck Thesis (2005). Available at
http://heart-c704.uibk.ac.at/publications/dissertation/
riebe_diss.pdf
[4] S. Chu, Rev. Mod. Phys. 70, 685 (1998); C. N. Cohen-Tannoudji, Rev.
Mod. Phys. 70, 707 (1998); W. D. Phillips, Rev. Mod. Phys. 70, 721
(1998).
[5] E. A. Cornell and C. E. Wieman, Rev. Mod. Phys. 74, 875 (2002);
W. Ketterle, Rev. Mod. Phys. 72, 1131 (2002).
[6] H. H¨aﬀner et al., Nature 438, 643 (2005).
[7] H. G. Dehmelt, Advances in atomic and molecular physics, 3, 53 (1967).
[8] W. Paul, Rev. Mod. Phys., 62, 531 (1990).
[9] D. F. V. James, Appl. Phys. B 66, 181 (1998).
[10] D. J. Wineland and W. M. Itano, Phys. Rev. A 20, 1521 (1979).
[11] F. Schmidt-Kaler et al., Nature 422, 408 (2003).
[12] J. C. Bergquist et. al., Phys. Rev. Lett. 57, 1699 (1986).
[13] TH. Sauter et al., Phys. Rev. Lett. 57, 1696 (1986).
[14] W. Nagourney, J. Sandberg and H. Dehmelt, Phys. Rev. Lett. 56, 2797
(1986).
[15] D. Kielpinski, C. Monroe and D. J. Wineland, Nature 417, 709 (2002).


14
Quantum Computing with Neutral Atoms
14.1
Introduction
It is possible to trap neutral atoms in a periodic potential of various dimen-
sions created by laser beams so that each potential minimum traps exactly
a single atom. Then each atom works as a qubit, which has the following
advantages over other realizations.
1. Neutral atoms trapped in an optical potential produced by laser beams
interact with the environment very weakly. Therefore it is expected that
the decoherence time of this system is considerably long.
2. Single-qubit gates acting on an isolated atom as well as two-qubit oper-
ations are possible with current technology.
3. A large qubit system can be realized by trapping atoms in an optical
lattice. It is possible, even in a many-qubit system, to make the inter-
atomic interaction very small when all the atoms are in their ground
state.
4. Interatomic interaction can be introduced on demand.
Alkali (metal) atoms with simple atomic structure are used as qubits in many
experiments.
14.2
Trapping Neutral Atoms
14.2.1
Alkali Metal Atoms
The ground state of an alkali metal atom has closed electron shells and an
additional electron in S1/2-orbit. Figure 14.1 shows the energy levels of an
alkali metal atom. Besides the ground state n2S1/2, excited states n2P1/2 and
n2P3/2 also play important roles in the following.
311

312
QUANTUM COMPUTING
FIGURE 14.1
Energy level scheme of an alkali metal atom.
The parameter Δfs denotes
the ﬁne structure splitting energy, while Dk denotes the Dk line and ωk, its
resonance frequency.
Hyperﬁne structure becomes relevant in the decription of an atomic state
at ultra-low temperature. Let S be the electron spin operator and I be the
nuclear spin operator. The hyperﬁne interaction Hamiltonian is
Hhf = λ

k
Sk ⊗Ik,
(14.1)
which is often abbriviated as λS · I. The coupling constant λ is a positive
number for alkali metal atoms. Let us deﬁne the hyperﬁne spin operator
F = S ⊗I + I ⊗I.
(14.2)
The unit matrix I and the nuclear spin operator I, especailly its quantum
number I, should not be confused. Which is meant by I should be clear from
the context. We again introduce a less strict form F = S + I. By taking
the quantum number S = 1/2, we ﬁnd that F spin has a quantum number
F = I ± 1/2. Conisder the identity
S · I = 1
2 [F(F + 1) −I(I + 1) −3/4]
(14.3)
derived from F 2 = F(F +1) = I(I +1)+3/4+2S ·I. We ﬁnd from Eq. (14.3)
and λ > 0 that the state with F = I −1/2 has a lower energy than the other
state with F = I + 1/2. Atoms 23Na, 87Rb and 133Cs are often employed in
quantum computing experiments. Na and Rb have nuclear spin I = 3/2 and
hence there are a three-fold degenerate F = 1 state and a ﬁve-fold degenerate
F = 2 state. Cs has I = 7/2 and has F = 3 and F = 4.
14.2.2
Magneto-Optical Trap (MOT)
MOT (magneto-optical trap) is one of the methods to trap neutral atoms
spatially at ultra-low temperatures. We outline the principle of trapping below

Quantum Computing with Neutral Atoms
313
FIGURE 14.2
Magneto-optical trap (MOT). (a) Excited states with J′ = 1 Zeeman-split
under magnetic ﬁeld gradient linearly varying in z. If an atom moves toward
the −z direction from the center of the trap, it absorbs σ+ polarized photons
with a positive momentum along the z-axis, leading to the transition mJ =
0 →mJ′ = 1.
As a result, the atom is pushed back to the center.
(b)
Six polarized laser beams and anti-Helmholtz coils to generate quadrupole
magnetic ﬁeld for 3-d MOT. Note that the polarizations of the beams are
diﬀerent in the x- and y- directions from the z-direction. Adopted from [1].
by taking a one-dimensional model as an example to simplify our discussion.
Let us consider a ﬁctitious atom with energy levels shown in Fig. 14.2 (a).
The ground state is assumed to be a singlet (J = 0), while the excited state
is a triplet (J = 1). We will denote the quantum numbers of the triplet state
with J′ to avoid confusion. The quantum number mJ of a triplet state is
denoted mJ′, for example. Suppose a space-dependent magnetic ﬁeld with
Bz(z) = (dBz/dz)z is applied to the atom. The energy of the excited state
|J′mJ′⟩splits under this ﬁeld as in Fig. 14.2 (a) with
ΔE = mJ′gJ′μB
dBz
dz

z,
where gJ′ is the Lanade g-factor and mJ′ is the eigenvalue of the z-component
of J. It is assumed in the ﬁgure that dBz/dz > 0 and gJ > 0. Suppose a
circularly polarized (σ−) laser light, red-detuned from the excitation energy,
is applied to the atom from the postive z-direction and another circularly
polarized (σ+) laser light, also red-detuned, is applied from the negative z-
direction. It was shown in §13.1, where Doppler cooling was discussed, that an
atom moving toward the positive z-direction in the area z > 0 absorbs mainly

314
QUANTUM COMPUTING
photons with negative momentum and hence is under force with the negative
z-component. Similarly an atom moving toward the negative z-direction in
the area z < 0 absorbs mainly photons with positive momentum and hence
is under force with the positive z-component. Atoms at around z = 0 are
conﬁned in this way. Note that the trapping region shrinks in size when the
ﬁeld gradient dBz/dz is increased while the laser frequency is kept ﬁxed.
A quadrupole magnetic ﬁeld is used to conﬁne atoms in a three-dimensional
space. The components of the ﬁeld are given by
B(x) = dBz
dz

−x
2, −y
2, z

,
(14.4)
for example and laser beams along the ±x- and ±y-axes are also applied to
conﬁne atoms along the x- and y-directions. The minus sign in the x- and y-
components of B accounts for the opposite polarizations of laser beams along
these axes in Fig. 14.2 (b).
The ﬁne structure states nS1/2 and nP3/2 of alkali metal atoms are often
employed as the ground state and the excited state, respectively, in an ex-
periment. Although the actual scenario is slightly more complicated than the
above simpliﬁed model, the underlying mechanism is the same, and trapping
potential is formed by MOT [2].
Atoms trapped in MOT absorb laser beams and always radiate ﬂuoresence
light, which may be used for qubit readout.
14.2.3
Optical Dipole Trap
Widely detuned laser beams are used to conﬁne neutral atoms in an optical
trap with small atomic loss. Let
E(x, t) = Re
 
E0(x)e−iωLt!
(14.5)
be the electric ﬁeld of a laser beam, where ωL is the laser frequency. We
assume here that the beam is linearly polarized, and hence E0 is a real func-
tion. The laser beam produces a potential acting on atoms in the ground
state through the ac Stark shift, also known as the light shift. Let d be
the dipole operator of the atom. The atom-radiation interaction Hamiltonian
is
Hi = −1
2 (E0(x) · d) (e−iωLt + eiωLt).
(14.6)
Let us calculate the light shift assuming that an atom is sitting at a point x.
Let |g⟩and |e⟩be the ground state and an excited state, respectively, and let
|ψ⟩= cg|g⟩+ ce|e⟩be the atomic state in the presence of a laser beam. The
coeﬃcients cg and ce satisfy the Schr¨odinger equations
i∂cg
∂t = −Ωeg
2 eiωLtce
(14.7)
i∂ce
∂t =

ωeg −iΓe
2

ce −Ωeg
2 e−iωLtcg.
(14.8)

Quantum Computing with Neutral Atoms
315
Here ωeg = (Ee −Eg)/ℏis the transition frequency of the laser in resonance
with the energy diﬀerence between the ground state |g⟩with the energy Eg
and the excited state |e⟩with Ee, while Γe is the natural line width of the
excited state. The Rabi frequency is denoted as Ωeg = ⟨e|d|g⟩· E0/ℏ.
Now we redeﬁne ce by ce →cee−iωLt to obtain
i∂cg
∂t = −Ωeg
2 ce
(14.9)
i∂ce
∂t =

−Δeg −iΓe
2

ce −Ωeg
2 cg,
(14.10)
where Δeg = ωL−ωeg is the detuning of the laser frequency from the resonance
frequency ωeg. Suppose the detuning is suﬃciently large so that |Δeg| ≫Ωeg
is satisﬁed and hence the time derivative in Eq. (14.10) is negligible. Then we
obtain
ce = −
Ωeg
2 (Δeg + iΓe/2)cg
and, substituting this result into Eq. (14.9), we ﬁnd
i∂cg
∂t =
Ω2
eg
4 (Δeg + iΓe/2)cg.
(14.11)
This result shows that the ground state energy has shifted in the presence of
a laser beam. This light shift
V =
ℏΩ2
eg
4(Δeg + iΓe/2) =
ℏΩ2
eg
4(ωL −ωeg + iΓe/2)
(14.12)
may be looked upon as a potential acting on an atom. Considering the space
dependence of the electric ﬁeld, we obtain
V (x) =
ℏΩ2
eg(x)
4 (Δeg + iΓe/2).
(14.13)
A large electric ﬁeld region with large Ωeg acts as a repulsive potential with
a blue-detuned laser (Δeg > 0), while it works as an attractive potential with
a red-detuned laser (Δeg < 0).
Atom loss associated with the potential (14.13) is due to spontaneous pho-
ton scattering. It comes from the imaginary part of the potential and is given
by
Γe
2
Ω2
eg
(2Δeg)2
(14.14)
when |Δeg| ≫Γe. It follows from Eqs. (14.13) and (14.14) that the loss scales
as |E0|2Γe/Δ2
eg, whereas the potential depth scales as |E0|2/Δeg. Therefore a
far oﬀ-resonant intense laser beam is able to produce a deep enough potential
with suﬃciently small atomic loss.

316
QUANTUM COMPUTING
FIGURE 14.3
Proﬁle of the conﬁning potential (14.15) with V0x = V0y ≡V0 in the plane
z = 0. It shows the scaled potential V (x)/V0 as a function of kx and ky.
14.2.4
Optical Lattice
Suppose two linearly polarized electric ﬁelds E± = (E0/2) exp(±ikx), coun-
terpropagating along the x-axis, are superposed. The resulting electric ﬁeld
is a sinusoidal standing wave E0 cos(kx), and it follows from Eq. (14.13) that
it produces a one-dimensional optical lattice potential V (x) ∝cos2(kx) with
the lattice constant a = π/k = λ/2, where λ = 2π/k is the wave length of the
laser beams. If, moreover, two sets of counterpropagating beams along the y-
and z-axes are introduced, resulting in six beams in total, a three-dimensioanl
optical lattice potential
V (x) = V0x cos2(kx) + V0y cos2(ky) + V0z cos2(kz)
(14.15)
is produced. Figure 14.3 shows the potential proﬁle in the plane z = 0.
The ground state of alkali metal atoms is nS1/2 (F = I ± 1/2), and we
consider two excited states nP1/2 (F = I ±1/2) and nP3/2 (F = I ±1/2, 3/2)
corresponding to two resonance lines D1 and D2; see Fig. 14.1.
Although the ground state and excited state have such hyperﬁne states spec-
iﬁed by F-spin quantum number, the contribution of the hyperﬁne structure
energy to the light shift (14.13) is negligible. Furthermore the Rabi frequency
of a transition between two ground states of diﬀerent hyperﬁne F-spins is
independent of F, after summing over the F-spin states of nP1/2 and nP3/2.
Therefore the optical trapping potential is independent of the F-spin state.
Note here that this applies only when all the laser beams are linearly polarized
in the same direction.

Quantum Computing with Neutral Atoms
317
FIGURE 14.4
Fine structure of an alkali metal atom and excitation of the atom with the
σ+-polarized laser beam. There are two degenerate mJ = ±1/2 excitations
over each of the ground states nS1/2 and the excited states nP1/2. There are
mJ = ±1/2 and mJ = ±3/2 states in the excited states nP3/2. It is possible
to excite the ground state with mJ = −1/2 to states nP1/2 and nP3/2 both
with mJ = 1/2, which corresponds to D1 and D2, respectively, while the state
mJ = 1/2 may be excited to nP3/2 only.
14.2.5
Spin-Dependent Optical Potential
It has been already mentioned above that two counterpropagating laser beams
with the same linear polarization produce an optical potential independent
of the hyperﬁne states. If, in contrast, the counterpropagating beams have
diﬀerent polarizations, the resulting potential is dependent on the hyperﬁne
state of the atom. There have been proposed several two-qubit gates, in which
state dependent lattice potential is employed.
Let us analyze the state dependent lattice, to begin with. Let ˆy and ˆz be
unit vectors along the y- and z-axes, respectively. Suppose the polarizations
of laser beams propagating along the x-axis and −x-axis are tilted by angles
θ and −θ from the z-axis, respectively, which results in E+ ∝eikx(ˆz cos θ +
ˆy sin θ) and E−∝e−ikx(ˆz cos θ −ˆy sin θ). Superposition of the two beams
produces a standing wave potential
E+ + E−∝σ+ cos(kx −θ) −σ−cos(kx + θ),
(14.16)
where σ± = ˆy±iˆz denotes two circular polarizations. We consider a potential
due to a σ+-polarized laser beam ﬁrst. The ﬁne structure of an atom, which
is related to D1 and D2 lines, has been shown in Fig. 14.4. The optical dipole
potential is give by Eq. (14.12) when there is only one excited state involved.
The trap potential is a sum of potentials due to excitations to P1/2 and P3/2
states when the ground state has mJ = −1/2, while it is solely made of the

318
QUANTUM COMPUTING
FIGURE 14.5
Light shift of the ground state nS1/2. ω1 and ω2 are the resonance frequencies
of the transitions to nP1/2 and nP3/2. The light shift with mJ = −1/2 is
shown in a solid curve, and that with mJ = 1/2 in a broken curve. The light
shift for the mJ = −1/2 vanishes at ωL = ω0.
potential corresponding to excitation to P3/2 state when the ground state has
mJ = 1/2 as shown in Fig. 14.4.
These two potentials are depicted in Fig. 14.5, where the natural width Γe
of the excited states is put to zero. It is found from Fig. 14.5 that the potential
for the state S1/2 (mJ = −1/2) vanishes when ωL = ω0. A similar argument
involving σ−shows the potential for the state S1/2 (mJ = +1/2) vanishes for
ωL = ω0. In summary, it is possible to introduce optical potentials
V±(x) ∝cos2(kx ± θ)
(14.17)
for the states S1/2 with mJ = ±1/2. Therefore the optical potential for each
hyperﬁne state is obtained by making use of the Clebsch-Gordan coeﬃcients
|F = 2, mF = 1⟩=
√
3
2
----
3
2, 1
2
: ----
1
2, 1
2
:
+ 1
2
----
3
2, 3
2
: ----
1
2, −1
2
:
|F = 2, mF = −1⟩=
√
3
2
----
3
2, −1
2
: ----
1
2, −1
2
:
+ 1
2
----
3
2, −3
2
: ----
1
2, 1
2
:
|F = 1, mF = 1⟩=
√
3
2
----
3
2, 3
2
: ----
1
2, −1
2
:
−1
2
----
3
2, 1
2
: ----
1
2, 1
2
:
|F = 1, mF = −1⟩= −
√
3
2
----
3
2, −3
2
: ----
1
2, 1
2
:
+ 1
2
----
3
2, −1
2
: ----
1
2, −1
2
:
as
V(F =1,mF =1)(x) = V(F =2,mF =−1)(x) = 3
4V+(x) + 1
4V−(x),
(14.18)
V(F =1,mF =−1)(x) = V(F =2,mF =1)(x) = 1
4V+(x) + 3
4V−(x),
(14.19)

Quantum Computing with Neutral Atoms
319
FIGURE 14.6
Hyperﬁne energy levels participating in the Raman transition. Ωi is the Rabi
frequency between the states |i⟩and |e⟩, and Δ is the detuning frequency.
where mF is the x-component of the F-spin.
14.3
One-Qubit Gates
Hyperﬁne states |F = I + 1/2⟩and |F = I −1/2⟩of the ground state nS1/2
of an alkali metal atom have degeneracies 2I + 2 and 2I, respectively. Qubit
basis states |0⟩and |1⟩are chosen from these degenerate states. There are
two strategies to introduce Rabi oscillation between the qubit states |0⟩and
|1⟩.
1. Transition between these states is introduced through the Rabi oscil-
lation by applying a microwave pulse in resonance with the transition
frequency. Selective addressing to each atom is possible by introducing
inhomogeneous magnetic ﬁeld. The Rabi oscillation frequency is deter-
mined by the coupling strength between the microwave and the atom
[3].
2. Single qubit operations in a system of neutral atoms are also imple-
mented by irradiating a laser beam to a particular atom so that the
transition between two diﬀerent hyperﬁne states in the ground state
takes place with an excited state as an intermediate state (Raman
transition); see Fig. 14.6.
We are concerned below with the derivation of the eﬀective coupling between
two energy levels following the second strategy listed above.

320
QUANTUM COMPUTING
Levels with energies E0, E1 and Ee serve as the states |0⟩, |1⟩and an aux-
iliary excited state, respectively. Let ωL be the frequency of the laser beam
and let
ℏΔ = ℏωL −(Ee −E0)
(14.20)
be the detuning. By applying the laser beam, the state executes the Rabi
oscillation between |i⟩(i = 0, 1) and |e⟩with the frequency Ωi. The most
general quantum state described in Fig. 14.6 is of the form
|ψ⟩= c0|01⟩+ c1|11⟩+ ce|e0⟩,
(14.21)
where the ﬁrst "digit" in the ket decribes the atomic states 0, 1 and e, while
the second digit shows the number of photons. Note that photon number
reduces by one when the atom is excited to |e⟩from |0⟩or |1⟩by absorbing a
photon.
Equations of motion are
idc0
dt = −Ω0
2 ce
idc1
dt = E1 −E0
ℏ
c1 −Ω1
2 ce
(14.22)
idce
dt = −Δce −Ω0
2 c0 −Ω1
2 c1.
We obtain, under the assumptions |Δ| ≫(E1 −E0)/ℏ, Ω2
i /|Δ|, the solution
of the third equation
ce = −Ω0
2Δc0 −Ω1
2Δc1.
(14.23)
By substituting this into the rest of Eq. (14.22), we ﬁnd
idc0
dt = −ϵ
2c0 + Ω0Ω1
4Δ c1
idc1
dt = ϵ
2c1 + Ω0Ω1
4Δ c0,
(14.24)
where
ϵ = E1 −E0 + Ω2
1
4Δ −Ω2
0
4Δ
(14.25)
and the origin of the energy has been redeﬁned. The Hamiltonian leading to
Eq. (14.24) is easily found to be
H = 1
2ϵσz −Ω0Ω1
4Δ σx,
(14.26)
where ϵ, Ω0, Ω1 and Δ are all controllable parameters.
There are several possibilities for qubit basis states, and special attention
has to be paid to choose appropriate states for qubits. Among the hyperﬁne

Quantum Computing with Neutral Atoms
321
states of the ground state, the states |F = I−1/2, mF⟩and |F = I+1/2, −mF⟩
share the same magnetic moment if a small contribution (∼10−3 relative to
the electron contribution) from the nuclear spin is ignored. Let us consider
the I = 3/2 state of 23Na and 87Rb, for example. Then possible pairs of states
to form a qubit are, for example,
a)
|F = 1, mF = 1⟩and |F = 2, mF = −1⟩,
b)
|F = 1, mF = −1⟩and |F = 2, mF = 1⟩.
(14.27)
Dephasing between two levels due to ﬂuctuations in the laser beams and
environment magnetic ﬁeld are made minimal, if a qubit is constructed out
of these sets of two levels.
14.4
Quantum State Engineering of Neutral Atoms
14.4.1
Trapping of a Single Atom
An atom in MOT cannot be used as a qubit since it always radiates ﬂuorescent
light in MOT. Therefore we need to send the atom to an optical dipole trap
and store it there to control the qubit state at our disposal.
The experiment starts with conﬁning a small number of atoms in MOT.
Atoms on the order of 103 ∼1012 are trapped in an ordinary MOT. Sub-
sequently, the trapping region is squeezed by increasing the ﬁeld gradient
dBz/dz. The presessure of background vapor is also reduced so that only sev-
eral atoms are left after this operation. Next, we apply a focused laser beam,
whose width is on the order of the MOT size, to the center of the MOT by
which transfer of atoms to an optical dipole trap is conducted with ∼100%
probability. Figure 14.7 shows the result of the conﬁnement experiment re-
ported in [4], in which a single atom has been successfully trapped for several
seconds. The ordinate of the graph shows the photon counts/s, and the trap
is switched between the MOT and the optical dipole trap every other second.
The ﬂourescent light photon count depends on the number of atoms N in the
trap when the trap works as an MOT. Correspondingly the number of trapped
atoms is read out from the reading of the photon counts. It is found from
Fig. 14.7 that the numbers N = 0, 1 and 2 are observed in this experiment.
The change in N is due to background vapor and cold collision [4].
14.4.2
Rabi Oscillation
There are several experiments in which a single Cs atom conﬁned in an optical
dipole trap is employed as a qubit.
The quantum state of a single atom
is controlled by making use of the Rabi oscillation.
Two hyperﬁne states

322
QUANTUM COMPUTING
FIGURE 14.7
Loading atoms from MOT to the optical dipole trap. The ordinate shows
the photon counts obtained by switching between the optical dipole trap and
MOT every other second. The number of atoms in the trap is found from
the ﬂuorescence photon counts when the trap is in the MOT mode.
It is
observed from the graph that the atom number ﬂuctuates due to loading of
a background vapor atom or a collision between a background atom and a
trapped atom. Reprinted ﬁgure with permission from D. Frese etal., Physical
Review Letters, 85, 3777 (2000). Copyright (2000) by the American Physical
Society.
|F = 4, mF = 4⟩and |F = 3, mF = 3⟩of the ground state 6S1/2 are chosen as
two levels of a qubit, where the propagation direction of the laser beam has
been taken as the quantization axis [5]. The experiment starts with an initial
state |F = 4, mF = 4⟩, which is obtained by manipulating laser beams. Then
a microwave pulse to drive the initial state to |F = 3, mF = 3⟩state is applied
for a duration tpulse. The probability of the state being in |F = 3, mF = 3⟩is
subsequently measured. Figure 14.8 shows the result of the measurement as
a function of tpulse [5], which indicates the clear Rabi oscillation observed in
this experiment.
The probability of the atom being in |F = 3, mF = 3⟩is measured with
the following method. We ﬁrst note that the dipole trap potential does not
trap atoms in 6P3/2. Therefore if a laser beam, the so-called push-out laser,
is applied to the atom to excite it from |F = 4, mF = 4⟩state to 6P3/2, it is
expelled from the trap. Subsequently the trap is switched to MOT, and it is
oberved whether there are any atoms left in the trap.

Quantum Computing with Neutral Atoms
323
FIGURE 14.8
Rabi oscillation between the hyperﬁne states |F = 4, mF = 4⟩and |F =
3, mF = 3⟩.
The ordinate shows the single atom population of the state
|F = 3, mF = 3⟩as a function of pulse duration tpulse. Atoms are initially in
the state |F = 4, mF = 4⟩and subsequently oscillate between |F = 4, mF = 4⟩
and |F = 3, mF = 3⟩under irradiation of microwave pulse. Reprinted ﬁgure
with permission from D. Schrader et al., Physical Review Letters, 93, 150501
(2004). Copyright (2004) by the American Physical Society.
14.4.3
Neutral Atom Quantum Regisiter
Atoms trapped in a one-dimensional optical lattice have been already selec-
tively controlled [5]. Qubit states are encode as
|0⟩= |F = 4, mF = 4⟩, |1⟩= |F = 3, mF = 3⟩,
(14.28)
for example. It has been demonstrated that a register, made of ﬁve atoms
in the initial state |00000⟩in a one-dimensional trap along the z-axis of a
quadrupole ﬁeld, is successfully transformed to the ﬁnal state |01010⟩. There
is a region in the vicinity of the center of the quadrupole ﬁeld, where the ﬁeld
gradient is uniform along the trap axis, and therefore the microwave resonance
frequency changes from atom to atom. Selective addressing to each atom is
possible by making use of this ﬁeld gradient. In the experiment mentioned
above, only two qubits are driven from |0⟩to |1⟩by applying π-pulses in
resonance with these two atoms. Readout was done by applying push-out
laser and subsequently putting the atoms back to MOT.

324
QUANTUM COMPUTING
14.5
Preparation of Entangled Neutral Atoms
Jaksch et al. proposed a method to prepare neutral-atom entangled states,
Bell-like states to be more speciﬁc, by controlling atom-atom collision time [6].
Mandel et al. successfully created Bell-like states following this proposal [7].
Experiments employed 87Rb atoms trapped in a three-dimensional optical
lattice.
The barrier of the lattice is high enough so that the atoms have
negligibly small overlap. This state is called a Mott insulator state. The
ﬁlling factor at each lattice site is close to 1, although there exist a small
number of defects, i.e., empty sites and multiply occupied sites. Two atomic
states forming a qubit are the hyperﬁne states |F = 1, mF = −1⟩≡|0⟩and
|F = 2, mF = −2⟩≡|1⟩.
Now let us follow Mandel et al.
[7].
Single atoms at lattice points are
initialized to |0⟩, after which a microwave π/2-pulse around the y-axis (Y =
e−i(π/4)σy; see Eq. (12.29)) is applied to transform |0⟩to (|0⟩+ |1⟩)/
√
2 (Step
I). Note that the trapping potential is spin-dependent. Therefore it is possible
to separate |0⟩atoms from |1⟩atoms by moving a potential for one of the spin
states by a half of the original lattice constant (Step II).
Let us concentrate on the ith and i + 1st sites of the lattice and consider
the above process. The initial state is |0⟩i|0⟩i+1 and the π/2-pulse transforms
it to (Step I)
1
2 (|0⟩i + |1⟩i) (|0⟩i+1 + |1⟩i+1) .
The shift of the potential (Step II) further transforms the state to
1
2 (|0⟩i|0⟩i+1 + |0⟩i|1⟩i+2 + |1⟩i+1|0⟩i+1 + |1⟩i+1|1⟩i+2) .
(14.29)
As a result, there is a probability with which two atoms occupy the same
lattice site and an on-site repulsion U is in action. Suppose this state is kept
for a duration thold, and then the potential is shifted backward to its initial
position. The resulting state has an extra relative phase only in the third
term of the state (14.29) due to the U-interaction, and we are left with
1
2
 
|0⟩i|0⟩i+1 + |0⟩i|1⟩i+1 + e−iθ|1⟩i|0⟩i+1 + |1⟩i|1⟩i+1
!
,
(14.30)
where θ = Uthold/ℏ. If thold is adjusted so that θ = π, we obtain
1
2 (|0⟩i|0⟩i+1 + |0⟩i|1⟩i+1 −|1⟩i+1|0⟩i+1 + |1⟩i+1|1⟩i+1) .
(14.31)
This state is called a Bell-like state.
After these operations, a π/2-pulse
R
π
2 , π
2 + α

=
1
√
2

1 −e−iα
eiα
1


Quantum Computing with Neutral Atoms
325
θ
FIGURE 14.9
Schematic diagram of the two-qubit operations by making use of interatomic
interaction. All the atoms are in the superposition state (|0⟩+ |1⟩)/
√
2 by
applying a π/2-pulse on each qubit whose initial state is |0⟩. Then a spin-
dependent potential is manipulated so that the states |0⟩and |1⟩are shifted
by half a lattice constant in the opposite directions, respectively. The states
|0⟩i and |0⟩i+1 of the atoms in the ith and the i + 1st lattice sites in Step I
are transformed into the states |0⟩i and |0⟩i+1 in Step II, respectively, while
the states |1⟩i and |1⟩i+1 in Step I are transformed into the states |1⟩i+1 and
|1⟩i+2 in Step II, respectively. The states |0⟩i+1 and |1⟩i+1 in the same lattice
sites interact for a duration thold, after which the potential is put back to that
in Step I. Adapted from [7].

326
QUANTUM COMPUTING
FIGURE 14.10
α-dependence of the probability P(|1⟩) for θ = 0 and θ = π.
is applied to transform
|0⟩→
1
√
2
 
|0⟩+ eiα|1⟩
!
|1⟩→
1
√
2
 
−e−iα|0⟩+ |1⟩
!
,
(14.32)
where R has been deﬁned in Eq. (12.30). The state (14.30) transforms under
this change as
1
4
# 6
1 −
 
1 + e−iθe−iα!
+ e−2iα7
|0⟩i|0⟩i+1 + (1 −eiφ + 2i sin α)|0⟩i|1⟩i+1
+
 
−1 + e−iθ + 2i sin α
!
|1⟩i|0⟩i+1 +
6
1 +
 
1 + e−iθ!
eiα + e2iα7
|1⟩i|1⟩i+1
$
.
It follows from this wave function that the probability of the atom being in
the state |0⟩or in the state |1⟩is independent of α for Bell-like states with
the choice θ = π. The probability of obtaining |1⟩upon a measurement is
P(|1⟩) = 1
4[2 + (1 + cos θ) cos α]
(14.33)
and it is clearly independent of α for θ = π. Figure 14.10 shows P(|1⟩) as a
function of α for θ = 0 and θ = π.
The above argument remains true for N atoms aligned in line. Suppose
a product of wave functions 
i(|0⟩i + |1⟩i)/2N/2.
The Bell-like states are
obtained by multiplying the phase (−1)n to each term of the expansion, where
n is the number of pairs of the form |1⟩i|0⟩i+1 in this term.
Mandel et al. experimentally demonstrated the above theory and measured
the probability P(|1⟩) as a function of the variable phase α [7] for θ = 0 and

Quantum Computing with Neutral Atoms
327
θ = π. Their result reproduced Fig. 14.10 with a good precision. In particular,
they have observed that P(|1⟩) is independent of α for a Bell-like state, for
which θ = π.
14.6
DiVincenzo Criteria
DiVIncenzo criteria for a neutral atom quantum computer are evaluated as
follows.
1. A scalable physical system with well-characterized qubits:
Atoms are loaded from a laser-cooled sample. Qubit basis vectors |0⟩
and |1⟩are made of two atomic internal states. They are scalable, in
principle, to a large number of qubits, possibly on the order of ∼106,
by trapping them in an optical lattice [8]. Single occupancy of a lattice
point is made possible by making use of the transition to a Mott insulator
state [9].
The lattice constant of the optical lattice is less than the
wavelength of the laser beam, and special care my be taken for selective
addressing to an atom.
2. The ability to initialize the state of the qubits to a simple ﬁducial state,
such as |00 . . . 0⟩:
Qubits may be initialized by optical pumping, which is already intro-
duced in §13.2 for trapped ions. Loading of an optical lattice from a
BEC via the superﬂuid-Mott insulator transition is also employed to
obtain initialized qubits. It also serves to realize single occupancy of
each lattice site.
3. Long decoherence times, much longer than the gate operation time:
It is expected that neutral atoms have much longer coherence time com-
pared to trapped ions thanks to their charge neutrality.
4. A "univeral" set of quantum gates:
Single-qubit operations are implemented either by rf-pulses or by Raman
transitions (§14.3). Although CNOT gates are demonstrated, it involves
many pairs of qubits (§14.5). Implementation of a CNOT gate operation
between a single pair of qubits is still a challenging task.
5. A qubit-speciﬁc measurement capability:
Qubit state is measured by the electron-shelving method (or "quantum-
jump" method) [10, 11, 12, 13], which is already introduced in §13.6.

328
QUANTUM COMPUTING
Alternatively, a state-selective "push-out" laser beam may be applied to
remove all atoms in state |0⟩, and subsequently the CCD image of the
residual atoms in state |1⟩is taken [5].
References
[1] D. Schrader, University of Bonn Dissertation (2004).
[2] E. L. Raab, et al., Phys. Rev. Lett. 59, 2631 (1987).
[3] A. Derevianko and C. C. Cannon, Phys. Rev. A 70, 062319 (2004).
[4] D. Frese, et al., Phys. Rev. Lett. 85, 3777 (2000).
[5] D. Schrader, et al., Phys. Rev. Lett. 93, 150501 (2004).
[6] D. Jaksch et al., Phys. Rev. Lett. 82, 1975 (1999).
[7] O. Mandel et al., Nature 425, 937 (2003).
[8] S. E. Hamann et al., Phys. Rev. Lett. 80, 4149 (1998).
[9] M. Greiner, et al., Nature 415, 39 (2002).
[10] N. Davidson et al., Phys. Rev. Lett. 74, 1311 (1995).
[11] J. C. Bergquist et. al., Phys. Rev. Lett. 57, 1699 (1986).
[12] TH. Sauter et al., Phys. Rev. Lett. 57, 1696 (1986).
[13] W. Nagourney, J. Sandberg and H. Dehmelt, Phys. Rev. Lett. 56, 2797
(1986).

15
Josephson Junction Qubits
15.1
Introduction
Josephson junction qubits are expected to be scalable within current lithog-
raphy technology developed by the semiconductor industry.
The resulting
qubits are diﬀerent from qubits in other realizations in that they are made
up of a large number of particles (electrons in the present case) forming a
mesoscopic condensate. Moreover, zero registance of superconducting metal-
lic part implies the absence of dissipation. These facts, enhanced by a very
low operating temperature, lead to the expectation that they are potentially
robust against external noise and decoherence.
All the proposals of superconducting qubits make use of Josephson junc-
tions, which are made of two superconductors connected through a thin oxide
insulator in between. Quasiparticle excitations are largely suppressed, and
tunneling between two superconductors is solely due to Cooper pair tunnel-
ing at very low temperature T , such that Δ ≫kBT , Δ being the gap of the
superconductors. The qubit operates at such low temperatures.
Josephson junction qubits are roughly divided into two classes. One makes
use of the charge degrees of freedom and the other, ﬂux (or phase) degrees of
freedom. In the former class, the number of excess Cooper pairs in an "island"
between a small capacitance Josephson junction and a capacitor serially con-
nected to the junction is a relevant quantum variable. Energies of states with
diﬀerent numbers of Cooper pairs are controlled by the gate voltage. It is
then possible to have two states with almost degenerate energies by applying
an appropriate gate voltage. These two states serve as a qubit in this pro-
posal. The latter makes use of the number of magnetic ﬂux quanta threading
a loop made of several Josephson junctions as a quantum variable. Two ﬂux
states may be arranged to have almost degenerate energies by controlling the
external magnetic ﬁeld, and these two states work as a qubit.
General references for this chapter are [1] and [2].
We start our discussion with a brief introduction to nanoscale Josephson
junctions and SQUIDs.
329

330
QUANTUM COMPUTING
15.2
Nanoscale Josephson Junctions and SQUIDs
15.2.1
Josephson Junctions
When two superconductors are combined together through a thin insulator
there ﬂows an electric current whose direction and magnitude depend on the
diﬀerence between the order parameter phases of the superconductors. More-
over, the current oscillates sinusoidally when a voltage across the junction is
applied. These phenomena were ﬁrst predicted by Josephson and called the
Josephson eﬀect [3]. We assume the reader is familiar with elements of
superconductivity, such as the BCS theory [4].
Figure 15.1 shows (a) the schematic picture of a Josephson junction and (b)
the electron microscope image of an actual Josephson junction. The super-
conductors in the image are made of Al. It is fabricated with the suspended
shadow mask technique. Two beams with diﬀerent deposition angles deposit
aluminum on a substrate. Two slits on the mask yield four lines in total, two
of which are arranged to have a tiny overlap. The ﬁrst deposited metallic
layer is exposed to oxygen gas to develop a thin layer of aluminum oxide,
after which the second layer deposition is conducted. The tunnel junction
charactersitics are easily controlled with this method by changing the oxida-
tion time, overlapping area and so on. The superﬂuous metallic lines in both
sides of the junction found in Fig. 15.1 (b) are inevitable with this method.
FIGURE 15.1
(a) Schematic diagram of a Josephson junction. (b) Actual nanoscale Joseph-
son junction. The superconductors are made of aluminum, while the insulator
is made of aluminum oxide. The white bar in the bottom is 1 μm long. Cour-
tesy of Jukka Pekola, Heksinki University of Technology, Finland.
Let Ψ1 and Ψ2 be the condensate wave functions of electrodes 1 and 2,
respectively. We assume both superconductors are made of the same material

Josephson Junction Qubits
331
FIGURE 15.2
(a) Electrical symbol of a Josephson junction. (b) The cross (×) shows an
ideal junction. The capacitance C naturally arises due to the parallel plate
geometry. (c) Details of the currents and charges to derive Eq. (15.1).
and write Ψk = Ψ0eiθk, (k = 1, 2).
Let φ = θ2 −θ1 be the diﬀerence in the phases of the order parameters. Let
±Q be the charges on the electrodes and introduce the number of Cooper pairs
N by Q = −2eN, where the charge of an electron is denoted as −e. Then the
Josephson current is given by the well-known formula IJ = Ic sin φ, where Ic
is called the critical current. The junction cannot support a supercurrent
greater than Ic. A Josephson junction has a similar geometrical structure as
a capacitor and therefore has capacitance C. We often denote a Josephson
junction with an equivalent circuit shown in Fig. 15.2.
Suppose an external current source Iext is attached to a Josephson junction.
The time derivative of the charge Q = CV is derived from Fig. 15.2 (c) as
dQ
dt = −Iext + Ic sin φ,
(15.1)
while that of the relative phase φ is given by
dφ
dt = −2eV
ℏ.
(15.2)
It then follows from the Josephson equations (15.1) and (15.2) that
d2φ
dt2 = −2e
ℏ
dV
dt = −2e
ℏ
1
C
dQ
dt = −2e
ℏ
1
C (−Iext + Ic sin φ).
(15.3)
We regard this equation as an equation of motion and obtain the Hamiltonian
to quantize a Josephson junction through a relevant Lagrangian which yields
the above equation as the Euler-Lagrange equation. It is immediately found
that the Lagrangian
L = 1
2
Cℏ2
4e2
dφ
dt
2
+ Icℏ
2e cos φ + Iext
ℏ
2eφ ≡K −U
(15.4)

332
QUANTUM COMPUTING
leads to Eq. (15.3) as the associated Euler-Lagrange equation. Note that the
eleectrostatic energy
K = 1
2
Cℏ2
4e2
dφ
dt
2
= 1
2CV 2
(15.5)
and
U = −Icℏ
2e cos φ −Iext
ℏ
2eφ
(15.6)
are, respectively, the kinetic energy and the potential energy.
Our next task is to ﬁnd the Hamiltonian. Canonically conjugate momentum
to the 'coordinate' φ is
π =
∂L
∂(dφ/dt) = Cℏ2
4e2
dφ
dt ,
(15.7)
from which we obtain the Hamiltonian
H = π ˙φ −L = 1
2
EC
ℏ2 π2 −EJ cos φ −EJ
Iext
Ic
φ,
(15.8)
where
EC = (2e)2
C
, EJ = Icℏ
2e
(15.9)
have the dimension of energy. They are called the Coulomb energy and the
Josephson energy, respectively. Note that EC/2 is the energy required to
add a Cooper pair to a charge neutral state.
Quantization of a Josephson junction, regarded as a dynamical system,
proceeds by imposing the usual canonical commutation relation
[π, φ] = ℏ
i .
(15.10)
It is important to clarify the physical meaning of the variable π. Observe that
π = Cℏ2
4e2
dφ
dt = −Cℏ2
4e2
2e
ℏV = −ℏQ
2e = ℏN,
(15.11)
where N is the number of Cooper pairs in the electrode. Therefore the variable
π is the number of Cooper pairs, and the commutation relation (15.10) shows
that there exists an uncertainty relation between the number and the phase
of Cooper pairs.
Josephson equations are obtained as Heisenberg equations with the above
Hamiltonian. In fact, we verify that
dφ
dt = i
ℏ[H, φ] = EC
ℏ2 π = −2e
ℏV
(15.12)
and
dπ
dt = i
ℏ[H, π] = −EJ sin φ + ℏ
2eIext.

Josephson Junction Qubits
333
The second equation is put into the form
I = dQ
dt = −2edN
dt = −2e
ℏ
dπ
dt = −Iext + Ic sin φ.
(15.13)
Josephson equations (15.1) and (15.2), if regarded as classical equations, may
be obtained from Eqs. (15.12) and (15.13) through Ehrenfest's theorem.
It is instructive to look at these equations in view of the Schr¨odinger picture.
Canonical commutation relation leads to
π = ℏ
i
d
dφ,
N = 1
i
d
dφ
(15.14)
when φ is diagonalized. Now the Hamiltonian is written as
H = 1
2ECN 2 −EJ

cos φ + Iext
Ic
φ

= −1
2EC
d2
dφ2 −EJ cos φ −EJ
Iext
Ic
φ.
(15.15)
15.2.2
SQUIDs
It is possible to adjust the parameters of a Josephson junction during its
fabrication. However, once a junction is fabricated, it is impossible to change
these parameters, set aside unwanted aging eﬀects. It is certainly desirable to
have more controls over the Hamiltonian for a Josephson junction to serve as
a controllable qubit.
A SQUID (Superconducting QUantum Interference Device) is a device
made of a superconducting loop which contains Josephson junctions and a
controllable magnetic ﬁeld which threads the loop. We will show below that
the Josephson energy is tunable by changing the magnetic ﬂux.
FIGURE 15.3
Circuit with a single Josephson junction. The ﬂux threading the loop is Φ.
As a preliminary, we consider the circuit depicted in Fig. 15.3, where a
superconducting loop contains a single Josephson junction. This circuit is

334
QUANTUM COMPUTING
called an rf-SQUID and may be employed as a prototypical ﬂux qubit as
will be shown later. Let A be a vector potential describing a magnetic ﬁeld
B. Let Ψ = |Ψ|eiθ be the macroscopic wave function and
Φ =

S
B · dS =
;
C
A · ds =
 1
2
A · ds
(15.16)
be the ﬂux threading the loop with circumference C, which bounds an area
S. Here we noted that the insulator is very thin, and hence the contribution
to Φ from the junction is negligible. The supercurrent is
js = −
2e
2(2m)

Ψ∗
ℏ
i ∇+ 2eA

Ψ + (Hermitian conjugate)

.
(15.17)
The supercurrent vanishes inside the superconductor and, by assuming |Ψ| is
constant, it holds
A = −ℏ
2e∇θ.
(15.18)
By substituting the above expression into Eq. (15.16), we ﬁnd
Φ = −ℏ
2e
 1
2
∇θ · ds = Φ0
2π (φ + 2πn) ,
(n ∈Z),
(15.19)
where φ = θ2 −θ1 is the phase discontinuity across the junction and
Φ0 = h
2e ≃2.0678 × 10−15 Wb
(15.20)
is the ﬂux quantum.
Let us now consider a more widely used SQUID. Figure 15.4 (a) shows a
schematic picture of a SQUID with two Josephson junctions, while (b) is an
electron microscope image of an actual SQUID. The Josephson junction in
Fig. 15.1 (b) is a part of this SQUID. Now the total ﬂux threading the loop
is expressed as
Φ = −Φ0
2π
 3
2
∇θds +
 1
4
∇θds

= Φ0
2π (θ2 −θ3 + θ4 −θ1)
= Φ0
2π (φ1 −φ2),
(15.21)
where φ1 = θ2 −θ1 and φ2 = θ3 −θ4 are phase discontinuities across junctions
1 and 2, respectively.
The Josephson energy of the SQUID is the sum of
respective Josephson energies, given by
E = −EJ
2 (cos φ1 + cos φ2) = −EJ

cos φ1 + φ2
2
cos φ1 −φ2
2

,

Josephson Junction Qubits
335
FIGURE 15.4
(a) Schematic diagram of a SQUID with two Josephson junctions. (b) Ac-
tual nanoscale SQUID. The enlarged structure is the Josephson junction in
Fig. 15.1. The white line in the bottom is 10 μm long. Courtesy of Jukka
Pekola, Heksinki University of Technology, Finland.
where we assumed that the two Josephson junctions are identical and each
junction has the Josephson energy EJ/2. By introducing the parameters
δ = φ1 −φ2 = 2π Φ
Φ0
,
φ = φ1 + φ2
2
,
(15.22)
the Josephson energy is rewritten as
E = −EJ cos δ
2 cos φ.
(15.23)
The factor cos(δ/2) in the RHS is due to the interference between Cooper
pairs through two paths and hence is regarded as a manifestation of the Bohm-
Aharonov eﬀect. The current through junction 1, in the direction from A to
B, is
I1 = Ic
2 sin φ1,
while that through the junction 2, from A to B, is
I2 = Ic
2 sin φ2,
where Ic ≡2eEJ/ℏ. Therefore the current through the SQUID from A to B
in Fig. 15.4 (a) is
J = I1 + I2 = 2e
ℏ
∂E
∂φ .
(15.24)
Note that a current ﬂows along the SQUID loop even when I1 = −I2, for

336
QUANTUM COMPUTING
FIGURE 15.5
Currents through a SQUID. The total current ﬂowing from bottom to top is
J = I1 + I2. The circulating current ﬂowing along the loop is I = (I1 −I2)/2.
which J = 0. This current is
I = I1 −I2
2
= 2e
ℏ
∂E
∂δ = Ic
2 (sin φ1 −sin φ2) = Ic
2 sin δ
2 cos φ.
(15.25)
Now the total Josephson current is
J = Ic
2 (sin φ1 + sin φ2) = Ic(Φ) sin φ,
(15.26)
where Eq. (15.21) has been used to obtain
Ic(Φ) = Ic cos

π Φ
Φ0

.
(15.27)
The above expression shows that the eﬀective Josephson energy is a function
of the ﬂux threading the loop and is given by
EJ(Φ) = EJ cos

π Φ
Φ0

.
(15.28)
Therefore a SQUID behaves as if it were a single Josephson junction with a
controllable EJ. This is consistent with our previous observation (15.23).
We assume that the two junctions are identical and hence have the same
capacitance C. The electrostatic energy of the Josephson junctions is then
given by
K = 1
2CV 2
1 + 1
2CV 2
2 = 1
2
 ℏ
2e
2
C( ˙φ2
1 + ˙φ2
2),
(15.29)
where use has been made of the relation Vk = −(ℏ/2e) ˙φk. Here we assume
that the superconducting loop has a small inductance so that Φ = Φext+LI ≃
Φext. By noting the deﬁnitions
φ1 = φ + π Φext
Φ0
,
φ2 = φ −π Φext
Φ0

Josephson Junction Qubits
337
FIGURE 15.6
Schematic diagram of a Josephson charge qubit. ±QJ denotes charges induced
at the electrodes of the Josephson junction with the capacitance CJ and the
Josephson energy EJ, while ±Qg denotes charges induced at the electrodes
of the gate capacitor Cg. The circuit is biased by the voltage Vg. The part
enclosed by a broken line comprises the Cooper pair island whose excess charge
(in units of 2e) corresponds to the qubit degree of freedom.
The current
ﬂowing through the circuit is denoted by Ig.
we obtain a simple expression for the electrostatic energy
K = 1
2
 ℏ
2e
2
(2C) ˙φ2,
(15.30)
where we have dropped the term ∝˙Φ2
ext since it is a c-number and does not
aﬀect the quantum dynamics.
15.3
Charge Qubit
15.3.1
Simple Cooper Pair Box
Figure 15.6 shows the schematic diagram of a Josephson charge qubit in its
simplest form. A Josephson junction with the Josephson energy EJ and the
capacitance CJ is connected to gate voltage Vg through a gate capacitance
Cg. The Cooper pair box (CPB) is made of an electrode of the Josephson
junction and an electrode of the gate capacitor and the superconducting lead
connecting them. The CPB works as a qubit as we show below.
We ﬁrst ﬁnd the Lagrangian of the system. The electrostatic energy plays
the role of the kinetic energy, while the Josephson energy is identiﬁed as the

338
QUANTUM COMPUTING
potential energy. Thus we obtain
L = 1
2CJV 2
J + 1
2Cg(Vg −VJ)2 + EJ cos φ.
(15.31)
Recall that the voltage VJ across the junction is related to the time derivative
of the phase discontinuity as
VJ = −ℏ
2e
˙φ.
Then the kinetic energy (the electrostatic energy) is
K = 1
2
 ℏ
2e
2
CJ ˙φ2 + 1
2Cg

Vg + ℏ
2e
˙φ
2
= 1
2(CJ + Cg)
 ℏ
2e
2
˙φ2 + ℏ
2eCgVg ˙φ,
(15.32)
where the constant term CgV 2
g /2 has been dropped. The momentum canoni-
cally conjugate to φ is
π = ∂K
∂˙φ
=
 ℏ
2e
2
(CJ + Cg) ˙φ + ℏ
2eCgVg.
(15.33)
We will consider the dynamics of Cooper pairs only since we assume that
kBT ≪Δ and accordingly the quasiparticle excitations are totally negligible.
At such a low temperature, the charge Q in the box is identiﬁed with the
number of excess Cooper pairs relative to a charge-neutral background. Let us
introduce a variable N deﬁned as π = ℏN and work out its physical meaning.
The charge stored in the junction is QJ = CJVJ, while that in the gate
capacitor is Qg = Cg(Vg −VJ). Therefore the total charge in the island is
Q = QJ −Qg = (CJ + Cg)VJ −CgVg
= −ℏ
2e(CJ + Cg) ˙φ −CgVg
= −2e
ℏπ = −2eN.
It has been shown that N is the number of Cooper pairs in the island, which
should be compared with Eq. (15.11).
Now the Hamiltonian is derived as
H = π ˙φ −L
= 1
2
2e
ℏ
2
1
CJ + Cg

π −ℏ
2eCgVg
2
−EJ cos φ
= 1
2
(2e)2
CJ + Cg
(N −Ng)2 −EJ cos φ,
(15.34)

Josephson Junction Qubits
339
where
Ng = CgVg
2e .
(15.35)
In summary, the Hamiltonian of this system is written as
H = 1
2EC(N −Ng)2 −EJ cos φ,
(15.36)
where
EC =
(2e)2
Cg + CJ
.
(15.37)
Let us consider the case in which the electrostatic energy dominates over
the Josephson energy,
EC ≫EJ.
(15.38)
This means physically that tunneling between states with diﬀerent N is sup-
pressed and N is a good quantum number in practice. Note that this assump-
tion breaks down when N ∼Ng, where the tunneling energy dominates over
the Coulomb energy. Naturally we employ the complete set of the eigenstates
of the operator N, which we denote as |N), to write down the Hamiltonian.
Ordinary ket notation |k⟩will be reserved to denote the kth eigenstate of
H. The Josephson coupling energy leads to tunneling current. It therefore
changes the number of excess Cooper pairs in the CPB. It follows from the
canonical commutation relation [φ, N] = i that φ = i∂/∂N and
e±iφ|N) = e∓∂/∂N|N) = |N ∓1).
(15.39)
From these considerations,
we obtain the Hamiltonian (15.34) in N-
represetation,
H =

N∈Z
EC
2 (N −Ng)2|N)(N| −EJ
2 (|N)(N + 1| + |N + 1)(N|)

.
(15.40)
Figure 15.7 shows the spectrum of this Hamiltonian.
It is important to notice here that Ng in Eq. (15.40) is a controllable pa-
rameter by adjusting the gate voltage Vg. In particular, Ng may be set in
the vicinity of N + 1/2, (N ∈N) so that the states |N) and |N + 1) have
almost degenerate energies. All other states have higher energies and can be
ignored in the following discussions. Now the Hamiltonian is represented in
the subspace of two states |N) = (1, 0)t and |N + 1) = (0, 1)t as
H = EC
2

N 2
g |N)(N| + (1 −Ng)2|N + 1)(N + 1|

−EJ
2 [|N)(N + 1| + |N + 1)(N|]
= EC
2
N 2
g
0
0 (1 −2Ng + N 2
g )

−EJ
2
 0 1
1 0

= −1
2Bzσz −1
2Bxσx,
(15.41)

340
QUANTUM COMPUTING
FIGURE 15.7
Energy spectrum of the Hamiltonian (15.40). (a) Thick curves show the spec-
trum with EJ/EC = 0.2 and thin curves, with EJ/EC = 0. (b) Details of the
spectrum for 0 ≤Ng ≤1, which is relevant for charge qubit construction.
where
Bz = EC
2 (1 −2Ng), Bx = EJ,
(15.42)
and we dropped an irrelevant constant term (EC/4)(1−2Ng +2N 2
g )I, I being
the 2 × 2 unit matrix, which merely contributes to the overall phase. From
now on, we will be concerned with the subspace in which N = 0, and denote
|0) and |1) by |N = 0⟩and |N = 1⟩, respectively. The eigenvalues are
E0 = −1
2

B2x + B2z, E1 = 1
2

B2x + B2z,
(15.43)
and the corresponding eigenvectors are
|0⟩= cos
α
2

|N = 0⟩+ sin
α
2

|N = 1⟩
|1⟩= −sin
α
2

|N = 0⟩+ cos
α
2

|N = 1⟩,
(15.44)
respectively, where
α = tan−1

Bx
Bz(Ng)

.
(15.45)
Note the similarity between this Hamiltonian and the controllable part of a
single-spin NMR Hamiltonian (12.14), except that this Hamiltonian contains
{σx, σz}, instead of {σx, σy}. From the commutation relation [σz, σx] = iσy,
the absense of σy does not necessarily imply SU(2) rotations around the y-axis
are impossible to implement with Eq. (15.41). However, a serious inconveience
with Eq. (15.41) is that EJ is not controllable. We need to introduce a SQUID
to make EJ tunable as we see next.

Josephson Junction Qubits
341
FIGURE 15.8
Charge qubit with a tunable Josephson energy.
15.3.2
Split Cooper Pair Box
It has been shown in §15.2.2 that a superconducting loop with two iden-
tial Josephson junctions with identical Josephson energy EJ/2 has the total
Josephson energy
−EJ
2 (cos φ1 + cos φ2) = −EJ cos φ1 + φ2
2
cos φ1 −φ2
2
,
(15.46)
where φ1 and φ2 are the phase diﬀerences across the junctions 1 and 2, re-
spectively.
Let L be the self-inductance of the loop and I be the current
circulating the loop. Then the diﬀerence φ1 −φ2 is related to the magnetic
ﬂux Φ = Φext + LI threading the loop as
φ1 −φ2
2
= π Φ
Φ0
≃π Φext
Φ0
,
(15.47)
where we assumed that the self-inductance L is very small for a charge qubit
under consideration. Now the Josephson energy is expressed as
−EJ cos

π Φext
Φ0

cos φ,
(15.48)
where φ = (φ1 −φ2)/2. It has been shown that the eﬀective Josephson energy
is given by
EJ(Φ) = EJ cos

π Φext
Φ0

.
(15.49)
Figure 15.8 shows a schematic picture of a charge qubit with a tunable
Josephson energy, called a split Cooper pair box.
The total Hamiltonian

342
QUANTUM COMPUTING
Φ
Φ
FIGURE 15.9
Simplest ﬂux qubits. (a) An rf-SQUID and (b) a ﬂux qubit with a tunable
Josephson energy EJ.
is again given by
H = −1
2Bz(Ng)σz −1
2Bx(Φext)σx,
(15.50)
where both coeﬃcients
Bz(Ng) = EC
2 (1 −2Ng), Bx(Φext) = EJ cos

π Φext
Φ0

(15.51)
are controllable.
The eigenvalues and the corresponding eigenvectors of the Hamiltonian
(15.50) are given by Eqs. (15.43) and (15.44) with Bx in Eq. (15.45) re-
placed by Bx(Φext). Observe that |0⟩→|N = 0⟩and |1⟩→|N = 1⟩as
Φext →Φ0/2 with Bz(Ng) ̸= 0, while |0⟩→(|N = 0⟩+ |N = 1⟩)/
√
2 and
|1⟩→(−|N = 0⟩+ |N = 1⟩)/
√
2 as Ng →1/2 with Bx(Φext) ̸= 0.
15.4
Flux Qubit
In contrast with a charge qubit, the ﬂux threading a SQUID is the relevant
degree of freedom in a ﬂux qubit. Here we need to employ a circuit with
EJ ≫EC.
(15.52)
15.4.1
Simplest Flux Qubit
The simplest ﬂux qubit, the rf-SQUID, is shown in Fig. 15.9. This is nothing
but a SQUID with no input/output current. It is made of a superconducting
loop with a Josephson junction where the loop supports a persistent current I
and a ﬂux Φ threading the loop. The ﬂux is related to the external magnetic

Josephson Junction Qubits
343
ﬂux Φext and the current I along the loop as
Φ = Φext + LI,
(15.53)
where L is the self-inductance of the circuit. It was shown in §15.2.2 that the
phase diﬀerence φ across the junction is related to the ﬂux Φ as
Φ = Φ0
2π φ,
(15.54)
where we have taken n = 0 in (15.19).
The Hamiltonian of the circuit is made of the electrostatic energy, the in-
ductance energy and the Josephson energy as
H = 1
2CV 2 + 1
2LI2 −EJ cos φ
= EC
2 N 2 + 1
2L(Φ −Φext)2 −EJ cos φ
= −EC
2
d2
dφ2 + 1
2EL(φ −φext)2 −EJ cos φ,
(15.55)
where
EC = (2e)2
C
,
EL = 1
L
Φ0
2π
2
,
φext = 2πΦext
Φ0
.
(15.56)
The potential energy of the Hamiltonian is therefore
U(φ) = −EJ cos φ + 1
2EL(φ −φext)2.
(15.57)
Let us deﬁne ε ≡EJ/EL −1 and f ≡φext −π and assume that
|f| ≪1,
|ε| ≪1.
(15.58)
Moreover we deﬁne ˜φ ≡φ−π. The potential energy, scaled by EL, is approx-
imated in terms of these parameters as
U(˜φ)
EL
= −f ˜φ −1
2ε˜φ2 + 1
24(1 + ε)˜φ4,
(15.59)
where a constant term has been dropped. Figure 15.10 (a) shows the potential
minima are degenerate when f = 0, while Fig. 15.10 (b) shows this degeneracy
is lifted when f ̸= 0.
The minima are at ˜φ ≃±
√
6ε when f = 0.
The
minima for f ̸= 0 is obtained by iteration assuming 0 ≤f ≪ε. By writing
˜φ = ±
√
6ε+δ and substituting this to ∂U(˜φ)/∂˜φ = −f −ε˜φ+(1+ε)˜φ3/6 = 0,
we obtain the minima
˜φ± = ±
√
6ε + f
2ε.
(15.60)

344
QUANTUM COMPUTING
FIGURE 15.10
Potential energy U(˜φ)/EL for a ﬂux qubit. (a) f = 0 and ε = 0.1 and (b)
f = 0.002 and ε = 0.1.
The curvature at the minima
∂2U(˜φ)
∂˜φ2
-----˜φ±
= −ε + 1
2(1 + ε)˜φ2
---- ˜φ±
≃2ε
(15.61)
is independent of f within the harmonic approximation. The diﬀerence be-
tween the minimum values of U(˜φ) is easily obtained as
ΔU = U(˜φ−) −U(˜φ+) = 2
√
6εfEL
(15.62)
to the lowest order.
At suﬃciently low temperatures, we need to consider the lowest energy
eigenstate of each potential well.
Taking the tunneling between these two
states into account, the eﬀective Hamiltonian is given by
H = −Bz
2 σz −Bx
2 σx.
(15.63)
Here
Bz(φext) = ΔU(φext) = 2
√
6ε(φext −π)EL
(15.64)
is the energy diﬀerence between the states |0⟩and |1⟩and is controllable by
changing the external magnetic ﬂux Φext. The parameter Bx is determined
by the tunneling probability between two wells and dependes on the barrier
height, which in turn depends on the Josephson energy EJ through ε. There-
fore Bx is also controllable if the Josephson junction is replaced by a SQUID
whose EJ depends on the external magnetic ﬂux threading the SQUID, see
Fig. 15.9 (b). We identify |0⟩and |1⟩with |˜φ = ˜φ+⟩and |˜φ = ˜φ−⟩, respectively.

Josephson Junction Qubits
345
FIGURE 15.11
Three-junction SQUID. (a) Schematic diagram of a three-junction SQUID.
Phase change φk across the junction k is measured in the direction of the
arrow. (b) Electron microscope image of a three-junction SQUID. There is an
extra readout SQUID with two Josephson junctions surrounding the three-
junction SQUID. Reprinted ﬁgure with permission from J. Johansson et al.,
Physical Review Letters 96, 127006 (2006). Copyright (2006) by the American
Physical Society.
15.4.2
Three-Junction Flux Qubit
It was required in the simplest design (Fig. 15.9) of a ﬂux qubit that EJ/EL
is on the order of 1 so that |ε| ≪1. This condition requires that the self-
inductance of the SQUID be suﬃciently large to make EL small and at the
same time the Josephson energy EJ be large enough. It is required to fabricate
a Josephson junction with a large area and a large SQUID loop to satisfy these
conditions. As a result, the coupling between a ﬂux qubit and its environment
is enhanced, leading to fast decoherence. This is considered to be the reason
why macroscopic quantum coherent oscillation has not been observed earlier.
Mooij and his collaborators proposed a three-junction SQUID and a four-
junction SQUID to overcome this diﬃculty [7]. A three-junction SQUID is
depicted in Fig. 15.11. These SQUIDs may be fabricated to have small self-
inductance, so that decoherence is suppressed.
A simple generalization of the argument on SQUID leads to the the following
expression for the total ﬂux threading the loop with three junctions;
Φ =
;
A · ds = Φ0
2π
;
∇θ · ds
= Φ0
2π (φ1 + φ2 + φ3),
(15.65)
where Φ = Φext+LI as before, and φk denotes the phase change across the kth
junction. The self-inductance L is made small so that the condition EL ≫EJ

346
QUANTUM COMPUTING
is satisiﬁed. Then we ﬁnd Φ ≃Φext and accordingly
φ1 + φ2 + φ3 = 2π Φext
Φ0
≡π + f.
(15.66)
This equation is solved for f to yield
f = 2π
Φ0

Φext −Φ0
2

.
(15.67)
Note that |f| ≪1 when Φext is tuned in the vicinity of Φ0/2, which we will
always assume from now on.
We further assume junctions 1 and 2 are identical, and hence EJ1 = EJ2 ≡
EJ, while junction 3 is a SQUID and EJ3 = αEJ with 1/2 < α < 1.
The potential energy U associated with the three-junction loop is
U(φ+, φ−) = −EJ(cos φ1 + cos φ2) −αEJ cos φ3
= −EJ [2 cosφ+ cos φ−−α cos(2φ+ −f)]
≃−EJ [2 cosφ+ cos φ−−α cos 2φ+ −αf sin 2φ+] , (15.68)
where |f| ≪1 is assumed and
φ± ≡φ1 ± φ2
2
.
(15.69)
The parameter f is controllable by manipulating Φext. Minimization of U
with respect to φ−yields the condition φ−= 0, viz. φ1 = φ2.
When f = 0, minimization of U with respect to φ+ yields sin φ+0 =
α sin 2φ+0, or
cos φ+0 = 1
2α.
(15.70)
This equation has a solution if and only if |α| ≥1/2. This solution corresponds
to the condition
Ip = 2e
ℏ
∂U
∂φ1
= 2e
ℏ
∂U
∂φ2
= 2e
ℏ
∂U
∂φ3
,
(15.71)
which guarantees that the persistent currents through the junctions are all
identical. There are two solutions ±φ+0 corresponding to two currents Ip and
−Ip; see Fig. 15.12.
Let us consider the case f ̸= 0 next. If follows from Eq. (15.68) that minima
of U(φ+, φ−) are attained at φ−= 0 and φ+ = φ+0+δφ+, where δφ+ is on the
order of f. By noting that φ+0 gives the minimum of U(φ+, 0) when f = 0,
we ﬁnd that the ﬁrst order contribution of δφ+ to U(φ+0 + δφ+, 0) vanishes.
Therefore we may write Eq. (15.68) as
U(±φ+0, 0) = −EJ [2 cos φ+0 −α cos 2φ+0]
±Ip

Φext −1
2Φ0

.
(15.72)

Josephson Junction Qubits
347
-2
-1
0
1
2
FIGURE 15.12
Potential proﬁle U/EJ of a three-junction SQUID, in which α = 0.6 and
f = 0. Points marked with x are minima of the potential.
The "eﬀective magnetic ﬁeld" along the z-axis is now given by
Bz = 2Ip

Φext −1
2Φ0

,
(15.73)
where
Ip = 2π
Φ0
EJ sin φ+0 = Ic sin φ+0,
(15.74)
while Bx is ﬁxed by the tunneling probability with which the state tunnels
between two minima.
In summary, we have obtained a single-qubit Hamiltonian
H = −1
2 (Bzσz + Bxσx) .
(15.75)
15.5
Quantronium
Saclay Quantronics group proposed a qubit having a very long decoherence
time and called it a quantronium [8]. Here a SQUID with approximately
equal electrostatic energy and Josephson energy (EC ≃EJ) is employed. In
this sense, it is a system intermediate between a charge qubit and a ﬂux qubit.
It follows from Eq. (15.50) that a split Cooper pair box charge qubit has a
Hamiltonian
H = −1
2 [Bz(Ng)σz + Bx(Φext)σx] ,
(15.76)

348
QUANTUM COMPUTING
which has eigenvalues
E0(Ng, Φext) = −1
2

Bz(Ng)2 + Bx(Φext)2,
E1(Ng, Φext) = 1
2

Bz(Ng)2 + Bx(Φext)2.
(15.77)
Let us consider ﬂuctuation of the eigenvalues due to noise. Let δN and δΦ be
ﬂuctuations in Ng and Φext, respectively. Then it is found that
E0,1(Ng+δN, Φext+δΦ) = E0,1(Ng, Φext)+∂E0,1
∂Ng
δN+∂E0,1
∂Φext
δΦ+O[δN 2, δΦ2].
The inﬂuence of the ﬂuctuations in Ng and Φext on the eigenvalues is op-
timized when the conditions ∂E0,1/∂Ng = ∂E0,1/∂Φext = 0 or equivalently
∂B2
z/∂Ng = ∂B2
x/∂Φext = 0 are satisﬁed. Written explicitly, these conditions
yield, by using Eq. (15.51),
Bz = 0 ⇒Ng = 1
2,
∂Bx
∂Φext
= 0 ⇒Φext = 0.
(15.78)
By substituting these parameters into Eq. (15.45), we ﬁnd α = π/2, and the
corresponding eigenvectors are
|0⟩=
1
√
2
(|N = 0⟩+ |N = 1⟩), |1⟩=
1
√
2
(−|N = 0⟩+ |N = 1⟩).
(15.79)
A qubit with a long decoherece time is obtained if the gate voltage and
external ﬂux are adjusted as above. This qubit is called the quantronium,
and the point (15.78) is called the optimal working point.
We evaluate the SQUID loop current I in the states |0⟩and |1⟩. The current
has already been derived in Eq. (15.25). We note that φ is an operator in this
equation to obtain
⟨0|I|0⟩= Ic sin

π Φext
Φ0

, ⟨1|I|1⟩= −Ic sin

π Φext
Φ0

.
(15.80)
Gate operation of a quantronium is conducted at the optimal working point
(Ng = 1/2, Φext = Φ0 = 0).
However, this working point is shifted to
Ng = 1/2 and Φ0 ̸= 0 during measurement, in which case |0⟩and |1⟩support
currents ﬂowing in opposition directions.
15.6
Current-Biased Qubit (Phase Qubit)
Rabi oscillation has been observed recently in a current-biased Joesephson
junction [9]. This system has been actively investigated for more than two

Josephson Junction Qubits
349
decades since Leggett suggested that macroscopic quantum tunneling (MQT)
might be observable in this system [5, 6]. The system in which Rabi oscillation
has been observed employed a relatively large Josephson junction of dimension
∼10 μm, for which much eﬀort had been devoted to suppress noise from
the environment. At the same time, the large size of the junction implies
fabrication technique is well estabished within the current technology, and
it is expected that this system could be scalable to a multiqubit system. A
current-biased qubit is also known as a phase qubit.
The Josephson energy dominates over the electrostatic energy so that EJ ≫
EC in such a large Josephson junction. The Hamiltonian associated with the
phase φ is
H = −EC
2
d2
dφ2 + U(φ),
(15.81)
where the potential energy in the presence of a bias current Iext is obtained
from Eq. (15.15) as
U(φ) = −EJ

cos φ + Iext
Ic
φ

.
(15.82)
The extremal condition for U(φ) is
sin φ = Iext
Ic
.
(15.83)
The potential energy in the presence of Iext is plotted in Fig. 15.13, which
justiﬁes the nickname "washboard potential."
We have introduced in the
ﬁgure a parameter x = φ −π/2.
Consider the limit Iext →Ic and put φ = π/2+x (|x| ≪1) with application
to qubits in our mind. Then the potential is expanded up to the third order
in x as
U(x) ≃EJ

1 −Iext
Ic

x −x3
6 −Iext
2Ic
π

.
(15.84)
The extrema are found to be at
x± = ±

2

1 −Iext
Ic

.
(15.85)
The minimum is attained at x = x−, at which the curvature is
EJ

1 −Iext
Ic

.
(15.86)
Therefore the harmonic oscillator frequency (plasma frequency) of a small
oscillation in the neighborfood of x−is
¯ωp = ωp

2

1 −Iext
Ic
1/4
,
(15.87)

350
QUANTUM COMPUTING
FIGURE 15.13
Potential proﬁle of a current-biased Josephson junction as a function of x =
φ−π/2. We have taken Iext/Ic = 0.8. Three quasibound states at the central
potential well are indicated.
where ωp = √ECEJ/ℏ.
The above analysis shows that the potential barrier height, namely the
potential diﬀerence between the minimum and the maximum, is
ΔU
EJ
= U(x+) −U(x−)
= 2
3

2

1 −Iext
Ic
3/2
.
(15.88)
It is found from Eqs. (15.87) and (15.88) that ¯ωp approaches 0 more slowly
compared to ΔU as Iext →Ic, and accordingly a small number of bound states
remains in the potential wall as shown in Fig. 15.13. We construct a qubit
out of the ground state and the ﬁrst excited state among these quasibound
states.
The rf-SQUIDs in Fig. 15.9 are also used as Josephson phase qubits, whose
potential is similar to the washboard potential depicted in Fig. 15.13 [10]. Let
L be the self-inductance of the circuit. The potential energy of this circuit is
given by (cf. Eq. (15.57)),
U(φ) = EL
1
2(φ −φext)2 −βL cos φ

,
(15.89)

Josephson Junction Qubits
351
FIGURE 15.14
Potential energy of an rf-SQUID qubit. Parameters are chosen as φext = 1.1π
and βL = 2. Three quasibound states trapped in the left potential well at
φ = φ0 are also depicted. The energy diﬀerence between the bottom of the
local minimum and the local maximum is denoted as ΔU.
where
βL = EJ
EL
, φ = 2π Φ
Φ0
, φext = 2π Φext
Φ0
.
Figure 15.14 shows the potential (15.89) with φext > π and 1 < βL. Note that
the potential has two minima for the choice of the parameters, φext = 1.1π
and βL = 2. Let us analyze the shallow minimum φ0 of the potential. A point
φ0 is a minimum of U(φ) when it satisﬁes
∂U
∂φ
----
φ=φ0
= φ0 −φext + βL sin φ0 = 0
and
∂2U
∂φ2
----
φ=φ0
= 1 + βL cos φ0 > 0.
It ceases to be a minimum when ∂2U/∂φ2--
φ=φ0 vanishes by changing φext.
(Note that φ0 is a function of φext.) The inﬂection point of U(φ) satisﬁes
∂U/∂φ|φ=φ0c = ∂2U/∂φ2--
φ=φ0c = 0. These two conditions ﬁx parameter φ0c
and the external ﬂux φ(0)
ext at which the inﬂection point appears. Straightfor-
ward calculation yields
cos φ0c = −1
βL
, φ(0)
ext = φ0c −βL sin φ0c.
(15.90)

352
QUANTUM COMPUTING
A minimum appears as we change φext above φ(0)
ext. We obtain, by expanding
U(φ) around φ0c,
U(φ)
EL
= 1
2(φ0c −φext)2 + 1 + (φext −φ(0)
ext)(φ −φ0c)
−1
6βL sin φ0c(φ −φ0c)3.
(15.91)
Then the ﬂux φ giving the shallow minimum satisﬁes
φ0 −φ0c = −

2(φext −φ(0)
ext)
βL sin φ0c
,
when the external ﬂux is φext. The curvature at this point is

2(φext −φ(0)
ext)βL sin φ0c.
The diﬀerence between the shallow minimum and the absolute maximum en-
ergies is
ΔU = 4
3

2(φext −φ(0)
ext)3
βL sin φ0c
.
(15.92)
Therefore an argument similar to the case of a washboard potential is appli-
cable so that the number of bound states trapped in the minimum reduces as
φext →φ(0)
ext as shown in Fig. 15.14. The qubit is made of the ground state |0⟩
and the ﬁrst excited state |1⟩.
Gate operation of this qubit is realized by using the Rabi oscillation by
applying microwave pulses to the bias current. [10]
15.7
Readout
There are several readout schemes proposed to date. We brieﬂy summarize
these schemes in this section.
15.7.1
Charge Qubit
Charge qubit measurement with the circuit depicted in Fig. 15.15 has been
ﬁrst employed by Nakamura et al. [11] to demonstrate the Rabi oscillation in
CPB. A tunnel junction is directly connected to a CPB, and a small current
I associated with quasiparticles ﬂowing out through the tunnel junction has
been measured.
To observe the Rabi oscillation, the gate voltage Vg is adjusted so that Ng
is suﬃciently smaller than 0.5, a typical value being 0.25. Then the ground

Josephson Junction Qubits
353
FIGURE 15.15
Direct observation of the charge qubit state by measurement of a current
through a tunnel junction.
state is approximately the same as the state |N = 0⟩, and the system is in
this state with a large probability. Next a gate pulse with the pulse width
Δt is applied so that Ng is now equal to 0.5 (Bz = 0) during this period.
Finally the gate voltage is put back to its initial value. Suppose the risetime
and falltime of pulses are much shorter than ℏ/EJ. Let us analyze the state
evolution associated with this pulse, following Fig. 15.16. (i) The system is
in the state |N = 0⟩= (|0⟩−|1⟩)/
√
2 immediately after the pulse is turned
on, and the Bloch vector starts to rotate around the x-axis for the period
Δt due to the EJ-term (Bx), which implies that the sytem oscillates between
|N = 0⟩and |N = 1⟩(Rabi oscillation). (ii) When the pulse is turned
oﬀ, the state is a superposition of |N = 0⟩and |N = 1⟩whose coeﬃcients
are determined by Δt. The state |N = 1⟩has considerably higher energy
than |N = 0⟩without the pulse, viz Ng = 0.25. Suppose the tunneling bias
voltage V is adjusted so that the quasiparticle energy outside the Josephson
junction sits between those of |N = 0⟩and |N = 1⟩states. Then the state
|N = 1⟩decays into two quasiparticles and the electric current I, associated
with these quasiparticles, is detected, while the |N = 0⟩state, in contrast, is
stable against this decay. This is how the qubit states |N = 0⟩and |N = 1⟩
are discriminated by measuring the tunneling current. Another advantage of
this method is that if one waits for some duration of time required for the
|N = 1⟩state to dacay into two quasiparticles after the pulse is turned oﬀ,
the qubit is deﬁnitely in the initial state |N = 0⟩. Therefore, by repeating the
above process many times with a ﬁxed Δt, the probability of the qubit in the
state |N = 1⟩is found by tunneling current measurements.
Figure 15.17 shows the Rabi oscillation observed in this way. The phase de-
coherence time T2 has been also measured by using the same readout method
[12].

354
QUANTUM COMPUTING
FIGURE 15.16
Change of a charge qubit state under readout pulses. (i) Gate voltage Vg
is adjusted so that Ng = 0.25 initially. Vg is then moved to the degeneracy
point Vg = 0.5 of the electrostatic energy in a time shorter than ℏ/EJ. As
a result, the state changes along the solid line (1) and subsequently executes
the Rabi oscillaton between the states |N = 0⟩and |N = 1⟩. (ii) After the
Rabi oscillation for a period Δt, the gate voltage is put back to its initial value
Ng = 0.25 in a time shorter than ℏ/EJ. The state |N = 0⟩changes along the
solid line (2) while |N = 1⟩changes along (3). Adapted by permission from
Macmillan Publishers Ltd: Nature 398, 786-788, copyright 1999.
FIGURE 15.17
Rabi oscillations of the Cooper pair box state measured by pulse-induced
current. Δt is the duration of the pulse, during which the system oscillates
between |N = 0⟩and |N = 1⟩. The current I is measured immediately after
the pulse is switched oﬀ. Current measurement reveals the probability of the
system being in |N = 1⟩when the pulse is turned oﬀ. Courtesy of NEC Nano
Electronics Research Laboratories, Japan.

Josephson Junction Qubits
355
FIGURE 15.18
Measurement circuit of quantronium state. The left part prepares the system
in a desired state of a quantronium in the central part. The rightmost part
is a readout circuit. From D. Vion et al., SCIENCE 296: 886-889 (3 May
2002). Reprinted with permissions from AAAS.
15.7.2
Readout of Quantronium
The readout circuit for a quantronium is schematically shown in Fig. 15.18
[8]. Two identical Josephson junctions with Josephson energy EJ/2 and a
capacitor with capacitance Cg comprise the split Cooper pair box, while the
readout circuit is made of the Josephson junction with EJ0 and current source
Ib(t).
Let Φext be the external ﬂux threading the circuit. Then the phase jumps
φ1 and φ2 across the junctions satisify
φ1 −φ2 = δ, φ1 + φ2
2
= φ, δ −γ = 2π Φext
Φ0
.
(15.93)
Current ﬂowing through the split Cooper pair box is
I = Ic
2 sin δ
2 cos φ = I0(e−∂/∂N + e∂/∂N) = I0σx, I0 = Ic
4 sin δ
2,
(15.94)
where
Ic = 2π
Φ0
EJ
2 ,
(15.95)
γ and δ are c-numbers and φ is treated as a q-number acting on the qubit
state space. The current I satisﬁes
Ib(t) −I = Ic0 sin γ,
(15.96)
with
Ic0 = 2π
Φ0
EJ0.
(15.97)

356
QUANTUM COMPUTING
The Josephson energy of a split Cooper pair box is
−EJ
2 (cos φ1 + cos φ2) = −EJ cos δ
2 cos φ = −EJ
2 cos δ
2σx.
(15.98)
The contribution I is negligible in case Ic0 ≫Ic, and the phase γ is ap-
proximately given by
γ = arcsin
Ib(t)
Ic0

.
(15.99)
Note that γ vanishes when Ib(t) = 0, namely when the qubit is under opera-
tion.
Let us recall our analysis, made in §15.5, that the optimal working point
condition is Bz = 0, leading to Ng = 1/2, while the condition
∂Bx
∂δ
∂δ
∂Φext
= 0
is satisﬁed at δ = 0 and hence Φext = 0. The eigenstates, when the condition
Bz = 0 is satisﬁed, are
|0⟩=
1
√
2(|N = 0⟩+ |N = 1⟩), |1⟩=
1
√
2(−|N = 0⟩+ |N = 1⟩)
(15.100)
as shown in Eq. (15.79). Experimentally observed current I through the qubit
in Fig. 15.18 in the states |0⟩and |1⟩is
⟨0|I|0⟩= I0, ⟨1|I|1⟩= −I0,
(15.101)
respectively. It follows from Eq. (15.94) that the current vanishes when δ = 0.
There is an experiment [8, 14] in which T1 is directly measured at the op-
timal point from the relaxation of the state |1⟩to |0⟩, where |1⟩is prepared
by applying a radio frequency π-pulse u(t) on the initial state |0⟩. The qubit
is in the state c0|0⟩+ c1|1⟩during the relaxation process. It is diﬃcult to
discriminate two states |0⟩and |1⟩since δ = 0 implies the vanishing expecta-
tion values of the current I for both cases. The coeﬃcients |c0|2 and |c1|2 are
measured as follows. Suppose a pulse current Ib(t) is switched on with the
delay time td after a π-pulse is switched oﬀ. Then we ﬁnd γ ̸= 0 and accord-
ingly δ ̸= 0 while the pulse is applied. Note that the conidition Ng = 1/2 is
maintained even when δ ̸= 0. Therefore the Hamiltonian takes the same form
as Eq. (15.98) and hence the eigenstates are still given by Eq. (15.100). The
expectation values of the current I in the states |0⟩and |1⟩are non-vanishing
because δ ̸= 0. The current through the junction EJ0 depends on the Cooper
pair box state so that it is given by Ib(t)+I0 when the CPB state is |1⟩, while
it is Ib(t) −I0 when |0⟩. If the pulse current Ib is taken slightly smaller than
the critical current Ic0, the current Ib + I exceeds Ic0 and the junction under-
goes phase transition to a normal state resulting in the voltage V (t) across
the junction. Since the transition to the normal state is probabilistic, there is

Josephson Junction Qubits
357
FIGURE 15.19
(a) A ﬂux qubit with readout SQUIDs. (b) Bias current Ibias for readout.
Transition to normal state manifests itself as ﬁnite Vout.
a small probability with which the voltage V (t) ̸= 0 is observed even in the
CPB state |0⟩. Let p0 and p1 be the probabilities with which the junction
undergoes a transition to the normal state when the CPB is in the states |0⟩
and |1⟩, respectively. A theoretical estimate shows that p1 −p0 = 0.95 while
the observed value is ∼0.6. However this discrepancy does not matter in
the estimation ∼1.8 μs of T1. The phase decoherence time T2 has also been
measured by making use of the Ramsey fringe experiment [8] and spin-echo-
type technique. The value they obtained is T2 ∼0.50 μs, corresponding to
approximately 8,000 free precessions.
15.7.3
Switching Current Readout of Flux Qubits
Readout of a ﬂux qubit is conducted in a similar manner as that of a quantro-
nium [16, 17]. Figure 15.19 (a) shows a typical circuit for ﬂux qubit readout,
in which a readout dc SQUID with two junctions is connected to a three-
junction ﬂux qubit [17]. The circuit may support a bias current Ibias, and a
voltmeter measures the voltage Vout while the bias current is applied.
Readout is carried out with the bias current Ibias. The current Ibias com-
prises a short pulse and a succedent trailing plateau as shown in Fig. 15.19 (b).
The ﬂux qubit is driven to normal state by a short pulse depending on its qubit
state, and the trailing plateau is applied to prevent the qubit from reentering
the superconducting state.

358
QUANTUM COMPUTING
The Hamiltonian of a ﬂux qubit has been given in Eq. (15.75) as
H = −1
2 (Bzσz + Bxσx) , Bz = 2Ip

Φext −1
2Φ0

,
(15.102)
whose eigenvalues are
E0,1 = ∓

B2z + B2x.
(15.103)
There exists an optimal point, similar to that of a quantronium, for a ﬂux
qubit. Suppose Φext ﬂuctuates by δΦ. The energy of the qubit then changes
by (∂E0,1/∂Φext)δΦ. Therefore the optimal point satisﬁes ∂E0,1/∂Φext = 0,
which is solved to yield Φext = Φ0/2, viz Bz = 0.
Both |0⟩and |1⟩states are superpositions of clockwise current and anti-
clockwise current with equal weights at the optimal point.
Therefore the
expectation value of the persistent current is extremely small near the op-
timal point, and it is diﬃcult to measure the qubit state c0|0⟩+ c1|1⟩as it
is. When Ibias is applied, however, the circulating current along the SQUID
changes. Since the ﬂux qubit is coupled with the SQUID through the mutual
inductance, the ﬂux threading the ﬂux qubit also changes. The eigenstates
of the Hamiltonian are given by Eq. (15.75), provided that the change in the
ﬂux is adiabatic. The coeﬃcients c0 and c1 do not change if the time required
for readout pulse sequence is suﬃciently shorter than the energy relaxation
time from |1⟩to |0⟩.
Furthermore, if the qubit state is driven far away from the optimal point,
the states |0⟩and |1⟩at this point essentially correspond to clockwise and
counterclockwise persisitent currents, respectively. Finite persistent current
through the qubit induces ﬁnite current through the dc SQUID due to mutual
inductance. Therefore the bias current at which the SQUID makes transition
to the ﬁnite voltage state (normal state) depends on whether the state to be
measured is |0⟩or |1⟩. The bias current works as a switching current. The
transition of the SQUID to the normal state is probabilistic. The coeﬃcients
|c0|2 and |c1|2 are measured with a good precision if Ibias is tuned so that
the diﬀerence in the transition probabilies associated with |0⟩and |1⟩are
maximized.
Rabi oscillation, energy relaxation rate Γ1 = 1/T1 and dephasing rate Γ2 =
1/T2 from the spin echo measurement are observed in this way [17].
15.8
Coupled Qubits
Needless to say, we should be able to couple qubits for practical quantum
information processing and quantum computation. Note that entanglement
can be produced only through interaction between qubits. In this section,
we analyze several types of coupling strategies: capacitively coupled charge

Josephson Junction Qubits
359
Cg1
FIGURE 15.20
(a) Schematic picture of capacitively coupled two charge qubits.
Readout
circuits and gate pulse inputs are omitted. (b) Electron microscope image
of actual capacitively coupled charge qubits. Reprinted by permission from
Macmillan Publishers Ltd: Nature 425, 941-944, copyright 2003.
qubits, inductively coupled charge qubits, tunable ﬂux qubit coupling and ﬂux
qubit coupling with an LC resonator.
15.8.1
Capacitively Coupled Charge Qubits
Two charge qubits may be coupled through a capacitor as shown in Fig. 15.20
[18]. The electrostatic energy of the coupling capacitor is (1/2)C3V 2
3 , where
V3 is the voltage across the capacitor, V3 = (ℏ/2e)( ˙φ1 −˙φ2). Now the total
electrostatic energy is
K = 1
2
 ℏ
2e
2 
i,j=1,2
Cij ˙φi ˙φj + ℏ
2e

i=1,2
CgiVgi ˙φi,
(15.104)
with
Cii = CJi + Cgi + C3,
C12 = C21 = −C3.
The variable πi canonically conjugate to φi is
πi =
 ℏ
2e
2 
j
Cij ˙φj + ℏ
2eCgiVgi.
(15.105)

360
QUANTUM COMPUTING
Now ˙φi is eliminated from the electrostatic energy in favor of πi through the
relation
˙φi =
2e
ℏ
2 
j
(C−1)ij

πj −ℏ
2eCgjVgj

.
(15.106)
By substituting this into Eq. (15.104), we obtain the electrostatic part of the
Hamiltonian expressed in terms of the momenta,

i
πi ˙φi −K = 1
2
 ℏ
2e
2 
i,j=1,2
Cij ˙φi ˙φj
= 1
2
2e
ℏ
2 
i,j=1,2
Cij(C−1)ii′(C−1)jj′
×

πi′ −ℏ
2eCgi′Vgi′
 
πj′ −ℏ
2eCgj′Vgj′

= 1
2
2e
ℏ
2 
i,j=1,2
(C−1)ij
×

πi −ℏ
2eCgiVgi
 
πj −ℏ
2eCgjVgj

.
(15.107)
The total Hamiltonian is obtained from Eq. (15.107) and the replacement
πi = ℏNi as
H = 1
2EC1(N1 −Ng1)2 + 1
2EC2(N2 −Ng2)2
+EC12(N1 −Ng1)(N2 −Ng2) −EJ1 cos φ1 −EJ2 cos φ2,
= −1
4 [(1 −2Ng1)EC1 + (1 −2Ng2)EC12] (σz ⊗I)
−1
4 [(1 −2Ng2) EC2 + (1 −2Ng1)EC12] (I ⊗σz)
+1
4EC12σz ⊗σz −1
2EJ1(σx ⊗I) −1
2EJ2(I ⊗σx),
(15.108)
where
EC1 = (2e)2  
C−1!
11 , EC2 = (2e)2  
C−1!
22 , EC12 = (2e)2  
C−1!
12
Ng1 = 1
2eCg1Vg1, Ng2 = 1
2eCg2Vg2.
The parameter EJi is the Josephson energy of the ith qubit.
The NEC group has implemented the CNOT gate by employing a pulse
technique in two coupled charge qubits [18]. The gate voltages are initially
adjusted as Ng1(0) ≃Ng2(0) ≃0.25 so that the initial state, in the absence
of pulses, is the lowest energy state |N1 = 0, N2 = 0⟩. The state of qubit 1
depends on the state of qubit 2 in the presence of the coupling EC12.

Josephson Junction Qubits
361
Suppose qubit 2 is in the state |N2 = 0⟩. States |N1 = 0⟩and |N1 = 1⟩
of qubit 1 have degenerate electrostatic energy when Ng1 = N 0
g1 ≡1/2 −
(EC12/EC1)Ng2(0) for a given Ng2(0). On the other hand, the electrostatic
energy of the state |N1 = 0⟩and |N1 = 1⟩are degenerate at Ng1 = N 1
g1 ≡
1/2 + (EC12/EC1)(1 −Ng2(0)) when qubit 2 is in the state |N2 = 1⟩. Let
qubit 2 be in the state |N2 = 0⟩. Suppose qubit 1 is initially in the state
|N1 = 0⟩by adjusting the gate voltage so that Ng1(0) = 0.25.
The gate
voltage is subsequently changed by ΔV 0
g1 ≡(Cg1/2e)(N 0
g1−Ng1(0)) so that the
electrostatic energies of qubit 1 states |N1 = 0⟩and |N1 = 1⟩are degenerate.
As a result, qubit 1 executes oscillations between the states |N1 = 0⟩and
|N1 = 1⟩through the term −EJ1 cos φ1.
The pulse width of the applied
voltage may be controlled so that the resulting rotating angle around the
x-axis is π. As a result, we realize the gate operation
|N1 = 0⟩|N2 = 0⟩→|N1 = 1⟩|N2 = 0⟩.
(15.109)
Suppose qubit 2 is in the state |N2 = 1⟩next.
Then application of a
voltage ΔV 0
g1 does not lead to degenerate electrostatic energy in qubit 1.
In fact, the energy diﬀerence between the qubit 1 states |N1 = 0⟩and
|N1 = 1⟩is EC12.
Therefore the above π-pulse introduces a rotation of
the qubit 1 Bloch vector around an axis tilted from the z-axis by an angle
α = tan−1(EJ1/EC12). Therefore this tilting of the Bloch vector is negligible
provided that the condition EC12 ≫EJ1 is satisﬁed and the state remains
close to |N1 = 0⟩up to the global phase. Conversely, the qubit 1 state is
transformed from |N1 = 0⟩to |N1 = 1⟩if a π-pulse with the gate voltage
change ΔV 1
g1 ≡(Cg1/2e)(N 1
g1 −Ng1(0)) is applied when qubit 2 is in the state
|N2 = 1⟩.
It is also true that the electrostatic energy of qubit 2 depends on whether
qubit 1 is in the state |N1 = 0⟩or |N1 = 1⟩. Therefore the gate voltage change
to make the energies of |N = 0⟩and |N = 1⟩degenerate depends on N1 in
such a way as
ΔV i
g2 =
Cg2
2e
  
N i
g2 −Ng2(0)
!
,
(15.110)
where i = N1 ∈{0, 1} and
N 0
g2 = 1
2 −EC12
EC2
Ng1(0), N 1
g2 = 1
2 + EC12
EC2
(1 −Ng1(0)).
The NEC group has experimentally generated entangled states
α|N1 = 0, N2 = 1⟩+ β|N1 = 1, N2 = 0⟩
and
α|N1 = 0, N2 = 0⟩+ β|N1 = 1, N2 = 1⟩
by applying pulses depicted in Fig. 15.21 [18].

362
QUANTUM COMPUTING
FIGURE 15.21
Pulse sequences to generate the states i) α|N1 = 0, N2= 1⟩+β|N1 = 1, N2 = 0⟩
and ii) α|N1 = 0, N2 = 0⟩+β|N1 = 1, N2 = 1⟩. Pulses 2, 3 and 5 are π-pulses.
Pulses 1 and 4 transform |Ni = 0⟩of the ith qubit to α|Ni = 0⟩+ β|Ni = 1⟩.
Adapted by permission from Macmillan Publishers Ltd: Nature 425, 941-944,
copyright 2003.
15.8.2
Inductive Coupling of Charge Qubits
Figure 15.22 shows a scalable design of coupling n charge qubits [19]. The
electrostatic energy of the ith qubit is
Ki = 1
2CJV 2
Ji + 1
2Cg(VJi −VL −Vgi)2,
(15.111)
where
VJi = −ℏ
2e
˙φi, VL = −˙Φ = −ℏ
2e
˙φ,
and it is assumed that all the gate capacitors have the same capacitance
Cg and all the junctions have the same capacitance CJ for simplicity. The
parameter φ has been introduced as a scaled magnetic ﬂux threading the
common inductance L. Now Ki is rewritten in terms of φ and φi as
Ki = 1
2
 ℏ
2e
2 
CJ ˙φ2
i + Cg

˙φi −˙φ + 2e
ℏVgi
2
.
(15.112)
Let us make the change of variables
φi →φi +
Cg
Cg + CJ
φ

Josephson Junction Qubits
363
FIGURE 15.22
Inductively coupled n charge qubits. It is assumed that all the gate capaci-
tances are Cg for simplicity.
to get rid of a coupling term ∝˙φi ˙φ in Eq. (15.112). Then Ki takes a decoupled
form
Ki = 1
2
 ℏ
2e
2 #
CJ

˙φi +
Cg
Cg + CJ
˙φ
2
+ Cg

˙φi −
CJ
Cg + CJ
˙φ + 2e
ℏVgi
2 $
= 1
2
 ℏ
2e
2 #
(CJ + Cg) ˙φ2
i +
CJCg
Cg + CJ
˙φ2 + 22e
ℏCgVgi

˙φi −
CJ
Cg + CJ
˙φ
 $
,
(15.113)
where we have dropped a physically irrelevant term proportioanl to V 2
gi. The
variables canonically conjugate to φi and φ are
πi =
 ℏ
2e
2
(CJ + Cg) ˙φi + ℏ
2eCgVgi
(15.114)
π =
 ℏ
2e
2
nCt ˙φ −ℏ
2eCt

i
Vgi,
(15.115)
respectively, where n is the number of charge qubits and
1
Ct
≡1
Cg
+ 1
CJ
.
It is convenient, as before, to introduce operators Ni and N by πi = ℏNi and
π = ℏN, where
Ni =
ℏ
(2e)2 (CJ + Cg) ˙φi + CgVgi
2e
,
(15.116)
N =
ℏ
(2e)2 nCt ˙φ −Ct
2e

i
Vgi.
(15.117)
The Hamiltonian is then written as
H = π ˙φ +

i
πi ˙φi −K + U

364
QUANTUM COMPUTING
= 1
2(CJ + Cg)
 ℏ
2e
2
˙φ2
i + 1
2nCt
 ℏ
2e
2
˙φ2 + U
= 1
2
(2e)2
CJ + Cg

i
(Ni −Ngi)2 + 1
2
(2e)2
nCt
N 2 + U,
(15.118)
where U is the potential energy
U = 1
2L
 ℏ
2e
2
φ2 −

i
EJi cos

φi +
Cg
Cg + CJ
φ

,
(15.119)
and we have made the change of a variable
N + Ct
2e

i
Vgi →N.
Let us consider the dynamics of the variable φ. The relevant parts of the
Hamiltonian are made into the form of a harmonic oscillator by making re-
placement N →−i∂/∂φ as
Hφ = −1
2
(2e)2
nCt
∂2
∂φ2 + 1
2L
 ℏ
2e
2
φ2.
(15.120)
Oscillation associated with this mode is called the plasma oscillation, whose
frequency is
ωp =
<
=
=
=
=
=
=
>
1
L
 ℏ
2e
2
nCt
 ℏ
2e
2 =
1
√nCtL.
(15.121)
We consider a low temperature regime where kT ≪ℏωp is satisﬁed. Then we
may assume that the harmonic oscillator is in the ground state with a good
accuracy.
Let us consider the coupling between φ and φi next. The potential energy
(the Josephson energy) of the ith qubit in Eq. (15.119) is
−EJi cos

φi +
Cg
Cg + CJ
φ

,
(15.122)
where EJi is controllable. If a condition
1
L
 ℏ
2e
2
= 1
L
Φ0
2π
2
≫(2e)2
nCt
(15.123)
is satiﬁed in (15.120), the potential energy dominates over the kinetic energy
and we obtain ⟨φ2⟩≪1 and hence
Cg
Cg + CJ

⟨φ2⟩≪1.
(15.124)

Josephson Junction Qubits
365
The coupling between the inductance and the ith qubit is
−EJi cos

φi +
Cg
Cg + CJ
φ

= −EJi

cos φi −

Cg
Cg + CJ
φ

sin φi

→λiφ sin φi,
(15.125)
where
λi =
Cg
Cg + CJ
EJi,
and a term ∝cos φi has been ignored since it does not contribute to φ-φi
interaction. The coupling (15.125) between the plasma oscillation and the ith
qubit induces the coupling between qubits.
For charge qubits, in particular, it holds that EC ≫EJi, where
EC =
(2e)2
CJ + Cg
.
We take CJ ≫Cg to reduce decoherence due to gate voltage noise, in which
case we have Ct ≃Cg and
(2e)2
nCt
≃(2e)2
nCg
≫EC.
The number of qubits n cannot be too large for the condition
CJ
Cg
≫n
(15.126)
to be satisifed. These analyses require that the condition
ℏωp ≫EC ≫EJi ≫λi
(15.127)
be satisﬁed.
It follows from Eq. (15.127) that the coupling between two qubits is de-
scribed by the second order perturbation with a good precision, in which the
ﬁrst excited state of the harmonic oscillator is the only intermediate state. In
fact, let c† and c be the creation and annihilation operators of the harmonic
oscillator, respectively, and rewrite φ in terms of them as
φ =
*
ℏωp
2EL
(c + c†),
(15.128)
where
EL = 1
L
Φ0
2π
2

366
QUANTUM COMPUTING
is the characteristic energy of the inductance L. Second order perturbation
then produces the interaction term
−

i
λi sin φi
2
⟨0|φ|1⟩⟨1|φ|0⟩
ℏωp
= −1
2EL

i
λi sin φi
2
.
(15.129)
By the replacement
sin φi = eiφ −e−iφ
2i
= e−∂/∂N −e∂/∂N
2i
→σiy
with
σiy = I ⊗I ⊗. . . ⊗
σy
./01
ith position
⊗. . . ⊗I ⊗I,
we obtain the coupling between the ith and the jth qubits,
Hint
ij = −1
EL
λiλjσiy ⊗σjy.
(15.130)
It is important to note that the interaction may be selectively turned on
between the ith qubit and the jth qubit by setting all λk = 0 by tuning
EJk = 0 except for k = i, j.
15.8.3
Tunable Coupling between Flux Qubits
Tunable coupling between two ﬂux qubits has been introduced by the NEC
group by making use of three coupled ﬂux qubits [20, 21] as shown in
Fig. 15.23. Each of their ﬂux qubits has four Josephoson junctions, whose
Hamiltonian takes exactly the same form as the three-junction ﬂux qubit
Hamiltonian
H = −1
2 (Bxσx + Bzσz) .
(15.131)
Here
Bz = 2Ip

Φext −1
2Φ0

(15.132)
is the energy diﬀerence between the states |r⟩and |l⟩, where persistent current
with magnitude Ip circulates the loop clockwise in |r⟩and counterclockwise
in |l⟩. We ﬁx the external ﬂux Φext ≥Φ0/2 for deﬁniteness in the following
and assign the notation |r⟩= |σz = 1⟩and |l⟩= |σz = −1⟩. The parameter
Bx is ﬁxed by the tunneling energy between two potential wells as before.
The Hamiltonian (15.131) has energy eigenvalues
E0 = −ω
2 , E1 = ω
2 , ω ≡

B2x + B2z
(15.133)

Josephson Junction Qubits
367
FIGURE 15.23
Tunable coupling of ﬂux qubits 1 and 2 through an auxiliary ﬂux qubit 3.
Courtesy of NEC Nano Electronics Research Laboratories, Japan.
with the corresponding eigenvectors (cf. Eq. (15.44))
|0⟩= cos α
2 |r⟩+ sin α
2 |l⟩
|1⟩= −sin α
2 |r⟩+ cos α
2 |l⟩
(15.134)
where
cos α = Bz
ω , sin α = Bx
ω .
Qubit 1 and qubit 2 in Fig. 15.23 are set in the optimal points Bz = 0 to
achieve long coherence time. Coupling between qubits 1 and 2 is tunable by
controlling qubit 3 between them. The controllability of the coupling can be
shown by calculating the eﬀective coupling between qubits 1 and 2 mediated
by qubit 3, with the conditions B1z = B2z = 0 and ω3 ≫ω1 = B1x, ω2 = B2x
satisﬁed.
Three qubits in Fig. 15.23 are coupled with each other through
mutual inductances. The interaction energy is given by
3

j,j=1,i>j
LijIiIj,
(15.135)
with Lij being the mutual inductance of qubits i and j, and therefore the
Hamiltonian of three coupled ﬂux qubits is
H = −1
2
3

i=1
(Bizσiz + Bixσix) +

i>j
Jijσiz ⊗σjz,
(15.136)

368
QUANTUM COMPUTING
where Jij = LijIpiIpj, Ipi being the amplitude of the persistent current ﬂowing
around the ith qubit, and σ2x = I⊗σx⊗I, for example. Note that σiz speciﬁes
the sense of the current ﬂowing around the ith qubit.
The Hamiltonian (15.136) is written with the basis {|r⟩, |l⟩}. It turns out
to be convenient to switch the basis from {|r⟩, |l⟩} to {|0⟩, |1⟩}. We ﬁnd from
the identity
|r⟩⟨r| −|l⟩⟨l| = cos α(|0⟩⟨0| −|1⟩⟨1|) −sin α(|1⟩⟨0| + |0⟩⟨1|)
that the Hamiltonian (15.136) is mapped to an operator with respect to the
basis {|0⟩, |1⟩} as
H = −
3

i=1
ωi(σiz −I) + J12σ1xσ2x
−(J13σ1x + J23σ2x)
B3z
ω3
σ3z −B3x
ω3
σ3x

(15.137)
under the basis change, where the energy of the state |0⟩is set to zero and we
noted that qubits 1 and 2 are working at the optimal points at which α = π/2.
Let us write a general state as 
i,j,k∈{0,1} Cijk|i⟩1|j⟩2|k⟩3 and consider the
Schr¨odinger equation for Cijk. We ﬁnd
i∂C000
∂t
= J12C110 + B3x
ω3
(J13C101 + J23C011) ,
(15.138)
where contributions from σ1xσ3z and σ2xσ3z are ignored. This is justiﬁed
by the facts that (1) we may replace σ1xσ3z and σ2xσ3z by σ1x and σ2x,
respectively, in the equation of motion for Cij0 since qubit 3 is in the state
|0⟩, which is the eigenstate σ3z with eigenvalue 1, and (2) the coupling σ1xσ3z
and σ2xσ3z are negligible in the equaiton of motion for Cij1 since ω3 ≫Jij.
Next, we obtain the Schr¨odinger equations
i∂C101
∂t
= (ω1 + ω3)C101 + J12C011 + B3x
ω3
(J13C000 + J23C110)
(15.139)
i∂C011
∂t
= (ω2 + ω3)C011 + J12C101 + B3x
ω3
(J13C110 + J23C000) .
If the conditions
ω3 ≫
1
C101
∂C101
∂t
,
1
C011
∂C011
∂t
, ω1, ω2
are taken into account in the above equations, the solutions are obtained as
C101 = −1
ω3

J12C011 + B3x
ω3
(J13C000 + J23C110)

C011 = −1
ω3

J12C101 + B3x
ω3
(J13C110 + J23C000)

.
(15.140)

Josephson Junction Qubits
369
Substituting Eq. (15.140) into Eq. (15.138), the eﬀective coupling Jeﬀ
12 is found
from the coeﬃcient of C110. We obtain
Jeﬀ
12 = J12 −2
ω3
B3x
ω3
2
J13J23.
(15.141)
It can be shown from the study of the eﬀective interactions in the equations
of motion for C100, C010 and C110 that Jeﬀ
12 takes the same form (15.141) for
any Cij0. The coupling Jeﬀ
12 is tunable by controlling ω3 through Φ3ext. It is
even possible to adjust Φ3ext so that Jeﬀ
12 vanishes when the coupling is not
required.
Two-qubit operation is introduced by microwave radiation. Let ω be the
microwave frequency and let δΦ3exteiωt be the change in the magnetic ﬂux
through qubit 3 due to the microwave. Then it induces the interaction
∂Jeﬀ
12
∂ω3
  ∂ω3
∂Φ3ext

δΦ3exteiωt
(15.142)
between qubits 1 and 2. Therefore, it becomes possible to have operations
|00⟩↔|11⟩and |10⟩↔|01⟩by setting ω = |B1x ± B2x|.
15.8.4
Coupling Flux Qubits with an LC Resonator
Two ﬂux qubits interacting with a common LC resonator may be coupled and
entangled by ﬁrst entangling one of the qubits with the LC resonator and then
entangling the resonator with the other qubit. The LC resonator may couple
far remote ﬂux qubits and is able to entangle them. Therefore it works as a
qubit bus interacting with all the ﬂux qubits. The LC resonator mode should
be compared with the harmonic oscillator modes in a trapped ion quantum
computer, which couple with all the ionic qubits.
We ﬁrst introduce entanglement of a ﬂux qubit with an LC resonator and
then outline the interaction of two ﬂux qubits via the LC resonator.
Coupling between a ﬂux qubit and an LC resonator has been demonstrated
with a circuit shown in Fig. 15.24 [22]. There is a three-junction ﬂux qubit in
the middle of Fig. 15.24 (b), which is surrounded by an LC circuit. The ﬂux
qubit and the LC circuit are coupled through the mutual inductance. The
qubit is also surrounded by a readout SQUID. The microwave to manipulate
the qubit is supplied by the MW line shown in Fig. 15.24.
The LC circuit comprises two capacitors with capacitance C and two induc-
tors with inductance L, all in series. The energy (Hamiltonian) of the circuit
is
Hplasmon = LI2 + 1
C Q2,
I = ˙Q.
(15.143)
The resonance frequency (plasmon frequency) of this circuit is ωp = 1/
√
LC.

370
QUANTUM COMPUTING
FIGURE 15.24
Coupled ﬂux qubit and an LC resonator. (a) Schematic diagram of a ﬂux qubit
and an LC resonator, which are coupled through the mutual inductance. The
ﬂux qubit is surrounded by a readout SQUID. The ﬂux qubit is coherently
controlled by the microwave line. The LC mode is plotted in a dotted curve.
Reprinted ﬁgure with permission from J. Johansson et al., Physical Review
Letters 96, 127006 (2006), Copyright (2006) by the American Physical Society.
(b) Electron microgram of a ﬂux qubit, a microwave (MW) line and a readout
SQUID. Reprinted ﬁgure with permission from S. Saito et al., Physical Review
Letters 96, 107001 (2006), Copyright (2006) by the American Physical Society.

Josephson Junction Qubits
371
Let c (c†) be the annihilation (creation) operator of the plasmon. Then the
Hamiltonian is written as
Hplasmon = ℏωpc†c.
(15.144)
The charge and the current operators are
Q = 1
2

ℏωpC(c† + c), I = ˙Q = i
2
*
ℏωp
L (c† −c),
(15.145)
respectively.
The ﬂux qubit Hamiltonian, on the other hand, is given as Eq. (15.75);
Hqubit = −1
2(Bxσx + Bzσz),
Bz = 2Ip

Φext −Φ0
2

,
(15.146)
using Eq. (15.145). The eigenstates |0⟩and |1⟩are given by Eq. (15.134),
whose energies are ∓ω/2 with ω =

B2x + B2z. They support a persistent
current ±Ip. Let M be the mutual inductance between the ﬂux qubit and the
LC circuit. Then the interation Hamiltonian between them is expressed as a
current-current interaction, taking the form
Hi = iℏλ(c† −c),
ℏλ = MIp
2
*
ℏωp
L .
(15.147)
The oscillation between a state with ground state qubit |0⟩with plasmon
number n = 1 (|0⟩|n = 1⟩) and a state with excited state qubit |1⟩with plas-
mon number n = 0 (|1⟩|n = 0⟩) is called the vacuum Rabi oscillation. The
vacuum Rabi oscillation experiment in the coupled ﬂux qubit-LC resonator
system has been conducted to demonstrate the coupling between them [22].
The experiment was carried out at low temperature satisfying kBT ≪ℏω, ℏωp,
under which plasmon excitation with n ≥2 may be ignored.
The energy gap ℏω changes while the plasmon frequency remains unchanged
as Φext changes. Therefore it is possible to adjust Φext so that the states
|0⟩|n = 1⟩and |1⟩|n = 0⟩have the degenerate energies.
This is done by
properly choosing ω and ωp so that −ω/2 + ωp = +ω/2.
Actual experimental steps are depicted in Fig. 15.25. The state |0⟩|n = 0⟩
denoted as 1 is prepared to begin with. Then a microwave π-pulse is applied
to convert the state to the state |1⟩|n = 0⟩marked as 2. Then a shift pulse
with the width tp, corresponding to Φext, is applied to drive the system to the
degenerate point of |0⟩|n = 1⟩and |1⟩|n = 0⟩denoted as 3 so that the Rabi
oscillation takes place during the period tp. The rise time τr of this pulse is
chosen adiabatic compared to the characterstic times of the qubit and the LC
circuit (τr ≫2π/ω, 2π/ωp) while, at the same time, nonadiabatic compared
to the coupling strength between the qubit and the LC circuit (τr ≪2π/λ).
As a result, the Rabi oscillation with the initial condition |1⟩|n = 0⟩will be
observed.

372
QUANTUM COMPUTING
FIGURE 15.25
(a) Schematic diagram of pulse operations. The initial state 1 makes transi-
tion to state 2 by a microwave π-pulse in resonance. Subsequently a pulsed
magnetic ﬁeld (b) is applied to send state 2 to state 3, where |0⟩|n = 1⟩and
|1⟩|n = 0⟩have degenerate energy, leading to the Rabi oscillation between the
two states. Readout is made by turning oﬀthe pulse (b) and putting the state
back from 3 to 2 and 4. Reprinted ﬁgure with permission from J. Johansson
et al., Physical Review Letters 96, 127006 (2006), Copyright (2006) by the
American Physical Society.

Josephson Junction Qubits
373
FIGURE 15.26
Switching probability, which reveals vacuum Rabi oscillation, as a function of
the pulse length tp [ns]. Reprinted ﬁgure with permission from J. Johansson
et al., Physical Review Letters 96, 127006 (2006), Copyright (2006) by the
American Physical Society.
The Hamiltonian at the degeneracy point 3 is Hi, and it follows from
Eq. (15.134) that the relevant matrix element is
(⟨0|⟨n = 1|) Hi (|1⟩|n = 0⟩) = i2ℏλ sin α
2 cos α
2 .
(15.148)
The eigenstates of the Hamiltonian are (|1⟩|n = 0⟩± i|0⟩|n = 1⟩)/
√
2, and
the corresponding eigen energies are ±ℏλ sin α. Therefore the Rabi oscillation
frequency is given by ΩR = 2λ sin α. Finally the shift pulse is turned oﬀso
that Φext assumes its initial value at t = 0. The resulting states are |0⟩|n = 1⟩
and |1⟩|n = 0⟩denoted as 4 and 2, respectively, in Fig. 15.25. Then a readout
process is applied to the state. Figure 15.26 shows the measurement result.
The CNOT gate in trapped ions has been implemented by introducing
eﬀective coupling between distant ions through mediating phonon mode. It
has been pointed out recently that a similar mechanism might work for ﬂux
qubits if the phonon mode in trapped ions is replaced by the plasmon mode
in the LC resonator. The coupling between the qubit and the resonator is
made possible through the mutual inductance.
It is shown in a recent proposal by the NTT group [23] that a ﬂux qubit-
ﬂux qubit coupling may be introduced by coupling them selectively to an
LC resonator whose resonace frequency is controllable by adjusting the bias
current through the Josephson junction in the LC circuit. An explicit proto-
col to entangle arbitrary two ﬂux qubits among many qubits is proposed, in
which a resonating circuit surrounding these qubits is made use of. The the-
oretical proposal of this scenerio has been already reported, and experiments
demonstrating this qubit-qubit coupling are planned [23].

374
QUANTUM COMPUTING
Recently, entanglement of two current-biased qubits via a resonant cavity
is demonstrated at NIST [24]. They reported that two qubits separated by
∼1.1 mm have been successfully entangled.
15.9
DiVincenzo Criteria
1. A scalable physical system with well-characterized qubits:
Superconducting qubits are largely divided into two classes. One makes
use of the charge degrees of freedom as a qubit variable while the other
uses the ﬂux degrees of freedom to construct a qubit. They are expected
to be scalable up to a larger register within the current fabrication tech-
nology, but currently the largest register has merely a few qubits.
2. The ability to initialize the state of the qubits to a simple ﬁducial state,
such as |00 . . . 0⟩:
Superconducting qubits work at very low temperature and they are in
the ground state with a good probability as one waits for a long enough
time. Alternatively, one measures the qubit state and ﬂips it to |0⟩if it
is found in |1⟩.
3. Long decoherence times, much longer than the gate operation time:
It is expected that superconducting qubits are strong against decoher-
ence due to the absence of dissipation. Quantronium works at the opti-
mal point so that the coherence time reaches as long as 1 μs. A typical
gate operation time for a charge qubit is ∼0.1 ns, which means ∼104
gate operations are possible.
This number is yet small for practical
applications.
4. "Univeral" set of quantum gates:
Single-qubit gates are already conﬁrmed in superconducting qubits.
They use either Rabi oscillation or nonadiabatic switching. Coupling
between two qubits is introduced capacitively, inductively or by intro-
ducing an intermediate qubit.
Conditional gate operations, such as
a CNOT gate, are demonstrated [18]. Tunable coupling between two
qubits is recently demonstrated [21]. Coupling separated superconduct-
ing qubits via a resonant cavity has been demonstrated recently [24].
5. A qubit-speciﬁc measurement capability:
There are several readout schemes proposed to date. They all make use
of charge or ﬂux degrees of freedom. Not all readout schemes have good
eﬃciency (visibility).

Josephson Junction Qubits
375
References
[1] Y. Makhlin, G. Sch¨on and A. Shnirman, Rev. Mod. Phys. 73, 357 (2001).
[2] G. Wendin and V. S. Shumeiko, eprint cond-mat/0508729 (2005).
[3] B. D. Josephson; Phys. Lett. 1, 251 (1962), Rev. Mod. Phys. 46, 251
(1974).
[4] M. Tinkham, Introduction to Superconductivity (2nd ed.), Mcgraw-Hill
College (1995).
[5] A. O. Caldeira and A. J. Leggett, Phys. Rev. Lett. 46, 221 (1981).
[6] A. O. Caldeira and A. J. Leggett, Ann. Phys. (N. Y.) 149, 374 (1983).
[7] J. E. Mooij, et al., Science 285, 1036 (1999).
[8] D. Vion et al., Science 296, 886 (2002).
[9] J. M. Martinis, S. Nam and J. Aumentado, Phys. Rev. Lett. 89, 117901
(2002).
[10] R. W. Simmonds et al., Phys. Rev. Lett. 93, 077003 (2004).
[11] Y. Nakamura, Yu. A. Pashkin and J. S. Tsai, Nature 398, 786 (1999).
[12] Y. Nakamura, et al., Phys. Rev. Lett. 88, 047901 (2002).
[13] D. Vion in Quantum Entanglementand Information Processing:
Les
Houches2003, ed. D. Est`eve, J.-M. Raimond and J. Dalibard, Elsevier,
Amsterdam (2004).
[14] A. Cottet, Ph. D. Thesis (2002). Available at
http://www.lps.u-psud.fr/Utilisateurs/cottet/ACottetThesis.pdf
[15] T. Duty et al., Phys. Rev. B 69, 140503 R (2004).
[16] C H. van der Wal et al., Science 290, 773 (2000).
[17] L. Chiorescu et al., Science 299, 1869 (2003).
[18] T. Yamamoto et al., Nature 425, 941 (2003).
[19] Y. Makhlin, G. Sch¨on and A. Shnirman, Nature 398, 305 (1999).
[20] A. O. Niskanen, Y. Nakamura and J.-S. Tsai, Phys. Rev. B 73, 094506
(2006).
[21] A. O. Niskanen, et al., Science 316, 723 (2007).
[22] J. Johansson et al., Phys. Rev. Lett. 96, 127006 (2006).
[23] N. Nakano et al., Appl. Phys. Lett. 91, 032501 (2007).

376
QUANTUM COMPUTING
[24] M. A. Sillanp¨a¨a, J. I. Park and R. W. Simmonds, Nature 449, 438
(2007).

16
Quantum Computing with Quantum Dots
16.1
Introduction
It has become possible, with the progress of the semiconductor fabrication
technology, to conﬁne an electron in an artiﬁcial nano-scale potential well
embedded in a semiconductor. This structure is called a quantum dot (QD).
There are two types of qubits making use of an electron trapped in a QD.
One uses two adjacent QDs, called a double quantum dot (DQD), in which
the qubit states corresponds to in which QD the electron resides. For example,
a state in which the electron resides in the right QD may be called |0⟩, while
the electron occupies the left QD in |1⟩. In the other qubit realization, an
electron always occupies a QD and the two spin states | ↑⟩and | ↓⟩are qubit
basis vectors. The former is called a charge quantum dot and the latter a
spin quantum dot. We consider these two types of qubits separately.
16.2
Mesoscopic Semiconductors
A quantum dot is an artiﬁcially fabricated semiconductor structure of submi-
cron size (∼10−5 cm), which contains 103 ∼109 atoms and approximately
the same number of electrons. Among many types of quantum dots, layered
semiconductors which support two-dimensional electron gas in the inversion
layer are mainly employed for quantum computing devices, in which case the
number of electrons in a QD may be reduced down to ≃100 ∼102.
16.2.1
Two-Dimensional Electron Gas in Inversion Layer
Let us start our exposition with the semiconductor inversion layer of Si MOS-
FET (Metal-Oxide-Semiconductor Field-Eﬀect Transistor), on which exten-
sive research including device applications has been conducted. Figure 16.1
shows a schematic picture of a typical n-channel MOSFET. Here "n-channel"
denotes that the carrier in the inversion layer is an electron.
It is called
p-channel in case the carrier is a hole. It is observed from the ﬁgure that
377

378
QUANTUM COMPUTING
FIGURE 16.1
Schematic picture of an n-channel MOSFET. The source and the drain are
made of n-type Si while the substrate is made of p-type Si. The inversion layer
is formed in the region between the gate oxide (SiO2) and the gate electrode.
The gate voltage controls the density of the two-dimensional electron gas in
the inversion layer.
MOSFET has a similar structure as a capacitor. An insulator made of SiO2
is deposited on a Si semiconductor of p-type, over which a metal electrode
(gate) is attached. Electric charge is induced at the Si/SiO2 interface when
a gate voltage VG > 0 is greater than a threshold voltage. Then electrons
ﬂow from the source to the drain along the interface. Figure 16.2 shows the
band structure in the vicinity of the Si/SiO2 interface. The band spectrum
of the p-type Si substrate is bent in the vicinity of the interface so that the
bottom of the conduction band at the interface has lower energy than the top
of the valence band for large z. As a result, electron bound states along the
z-axis in Fig. 16.2 develop, leading to a two-dimensional electron subband in
the inversion layer. The electron number in the inversion layer is controllable
by changing the gate voltage VG.
16.2.2
Coulomb Blockade
U. Meirav et al. measured conductance of narrow channels of GaAs/AlGaAs
[1]. See [2] for a review on mesoscopic conductance. Figure 16.3 shows the
schematic picture of the device employed in their experiments. An insulating
AlGaAs layer is deposited on a heavily doped GaAs substrate.
Over the
AlGaAs layer is a pure GaAs layer. Note the similarity of this structure with
that of MOSFET: the metal layer in MOSFET corresponds to the doped
GaAs layer and the p-type Si layer in MOSFET to the pure GaAs layer.
An inversion layer is formed in the interface between the pure GaAs layer

Quantum Computing with Quantum Dots
379
FIGURE 16.2
Band structure of the Si/SiO2 interface. A two-dimensional electron gas is
formed in the inversion layer, when the gate voltage VG exceeds the threshold
voltage. The density of the electron gas can be controlled by the gate voltage.
The z-axis is perpendicular to the Si/SiO2 interface.
FIGURE 16.3
Schematic drawing of a device structure employed in [1]. A two-dimensional
electron gas forms at the top GaAs/AlGaAs interface. Electrons underneath
the electrods are repelled by the negative bias voltage VB.

380
QUANTUM COMPUTING
FIGURE 16.4
Schematic diagram of a single quantum dot in a Coulomb blockade state. No
current ﬂows from S to D in this state.
and the AlGaAs layer.
The charge density of the inversion layer may be
controllable by manipulating the gate voltage VG between the doped GaAs
and the pure GaAs layers, in a similar manner as in MOSFET. It should be
noted, however, that the electron density of this system is much smaller than
that of a Si MOSFET. As a result, it is easier to control the electron number
in the dot in this system compared to that in Si MOSFET, and accordingly
this system is suitable for quantum computing. There are two metal strips in
Fig. 16.3, each of which has two small metal pieces to form narrow channels,
and the overall structure is considered to have two gates. A narrow channel is
formed if negative voltage is applied to these metal strips so that no inversion
layer is formed underneath these strips.
This structure with two gates, employed to study the conductance ﬂuctua-
tions in narrow channels, may be regarded as a quantum dot formed between
the two gates. They have measured the conductance of a narrow channel
which contains a single quantum dot while the gate voltage, and hence the
electron number, is varied. They observed periodic oscillations in conduc-
tance. This phenomenon is explained by a contact interaction model in which
the total energy is a sum of single-electron energies and the charging energy,
which is approximated by the classical electrostatic energy. Figure 16.4 shows
a schematic picture of the circuit employed in experiments by Meirav et al.
[1]. Let Q and V be the charge and voltage, respectively, of the QD and VG
be the gate voltage. The source (drain) voltage of the left electrode (right
electrode) is denoted as VS (VD). The gate, source and drain are connected
to the QD with capacitances CG, CS and CD. It is found from Fig. 16.4 that
Q = CG(V −VG) + CS(V −VS) + CD(V −VD),
(16.1)
from which we obtain
CV = Q + CGVG + CSVS + CDVD,
(16.2)
where C = CG + CS + CD. The electrostatic energy U(Q) is found from the

Quantum Computing with Quantum Dots
381
condition dU/dQ = V as
U(Q) = (Q + CGVG + CSVS + CDVD)2
2C
.
(16.3)
Let N be the number of electrons in a QD. Then Q = −e(N −N0), where
N0 is the number of electrons on the dot when all the external voltages are
set to zero. This compensates the positive background charge provided by
the donor in the heterostructure. Contribution of the electrostatic energy to
chemical potential is evaluated as U(N) −U(N −1). Therefore the chemical
potential with vanishing bias voltages VS ≃VD ≃0 is found as
EN = ϵN + U(N) −U(N −1)
= ϵN +

N −N0 −1
2

EC −EC
e (CGVG + CSVS + CDVD) (16.4)
by taking the contribution from single-particle energy ϵN into account. Here
EC = e2/C and ϵN stands for the single-particle level when the electron levels
up to the Nth level are occupied. When the condition VS ≃VD ≃0 is satisﬁed,
the chemical potential diﬀerence between N +1-electron and N-electron states
is obtained from Eq. (16.4) as
EN+1 −EN = e2
C + Δϵ, Δϵ = ϵN+1 −ϵN.
(16.5)
The diﬀerence Δϵ is nothing but the energy spacing between two discrete
quantum levels when the Nth electron and N + 1st electron occupy diﬀerent
energy levels. For QDs employed in [1], the inequality EC ≫Δϵ is satisﬁed.
We will drop Δϵ, for simplicity, in this subsection.
Now the levels in the dot are discrete with the level splitting ≃EC. Let
us consider the energy levels depicted in Fig. 16.5, in which case conduction
by way of the dot is suppressed. Let μS and μD be the chemical potentials of
electrons in the left metal (source) and the right metal (drain), respectively.
Assuming μS and μD take values in the vicinity of EN, we ﬁnd that the
relation
EN < μS, μD < EN+1
(16.6)
is satisﬁed in Fig. 16.5. Under the condition (16.6), a state with N electrons in
the dot is stabilized, and processes in which the dot obtains an extra electron
from the source or the drain to have N + 1 electrons, or in which an electron
escapes from the dot to have N −1 trapped electrons in the dot, are forbidden.
Therefore electron conduction through a QD is prohibited. This phenomenon
is called the Coulomb blockade.
The condition under which an N electron state permits electron conduction
through a dot is (a) μS > EN > μD or (b) μD > EN > μS. Let us analyze
these conditions in the case VS ≃VD, following experiments done by Meirav
et al. [1]. We assume, for simplicity, that the drain is grounded so that VD =

382
QUANTUM COMPUTING
FIGURE 16.5
Energy level of electrons in a QD with conditions EN < μS, μD < EN+1.
Energy EC + Δϵ is required to add an electron to a QD with N electrons to
make it a QD with N + 1 electrons, where EC is the charging energy and Δϵ
is the single electron energy spacing. When the source chemical potential μS
and the drain chemical potentials μD take values in the energy gap EC + Δϵ,
electrons are in the Coulomb blockage state, in which electron number is
ﬁxed at N. Therefore current does not ﬂow through the dot. Note that this
simpliﬁed argument applies only when the spin degrees of freedom are ignored.
0. Electron energy is measured with respect to the drain chemical potential
μD = EF , where EF is the bulk electron Fermi energy. Since VSD ≡VS ≃0,
it is required that the condition EN ≃EF must be satisﬁed for the conditions
(a) and (b) to be fulﬁlled. Thus the gate voltage VG(N) which satisﬁes the
condition EN = EF is ﬁxed and the current ﬂows when VG ≃VG(N). Such
VG(N) is obtained for each N ≥0, and consequently the periodic behavior
of conductance in VG observed in the experiments [1] is accounted for by
Coulomb blockade.
Let us consider the case with ﬁnite VSD next. No electric current is allowed
to ﬂow when the Coulomb blockade condition (16.6) is satisﬁed and hence the
state with N electons in the dot is stabilized. The current-supporting region
is outside this Coulomb blockade domain and the boundaries between them
are four lines speciﬁed by the following conditions
(a) μS = EN, (b) μD = EN, (c) μS = EN+1, (d) μD = EN+1.
(16.7)
The boundaries for a given N deﬁne a parallelogram called the blockade
diamond as depicted in Fig. 16.6. States with N electrons in the dot are sta-
bilized inside this parallelogram in the VGVS-plane. It is found from Eq. (16.4)
that the slope of lines given by the conditions (a) and (c) is CG/(C −CS)
and that given by (b) and (d) is −CG/CS since the relation μS = EF −eVS
is satiﬁed in (a) and (c) while μD = EF in (b) and (d).
These blockade
diamonds line up in the VGVS-plane. The electron number N attached to

Quantum Computing with Quantum Dots
383
FIGURE 16.6
Coulomb blockade diamond. The parallelogram made of lines with a slope
−CG/CD and lines with a slope CG/(C −CS) is a Coulomb blockade region
in the VG−VS plane. The number of electrons is ﬁxed in the Coulomb blockade
region. The diagram shows the region where N = 0, 1, 2 and 3. The region
corresponding to N = 0 is exceptional in that the diamond does not close,
and hence it is discriminated from the other diamonds.
each parallelogram decreases as VG is lowered; see Fig. 16.6. The state with
N = 0 appears in the left end of VG axis, which is easily identiﬁable since
the corresponding "parallelogram" does not close. The failure of the closure
is attributed to the fact that the conditions (a) and (b) are not necessary in
this region. States with small N, such as N = 1 or 2, are prepared by making
use of this fact.
It is found from the above observation that the Coulomb blockade phenom-
ena, with which a given electron number state stabilizes the QD, plays a very
important role when a QD is employed as a qubit.
16.3
Electron Charge Qubit
Two types of qubits that make use of electronic states in quantum dots are
proposed to date. One uses two neighboring quantum QDs, which we call
the double quantum dots or DQD for short in the following, and the two
diﬀerent states |0⟩and |1⟩of a qubit correspond to which of the two QDs is
occupied. This qubit is called a charge qubit. The other qubit, called a spin
qubit, makes use of two spin states, spin up and spin down, of an electron
trapped in a single quantum dot.

384
QUANTUM COMPUTING
FIGURE 16.7
(a) Scanning electron micrograph of a double quantum dot. Reprinted from
[3] with permission from World Scientiﬁc Publishing Co.
Pte.
Ltd.
(b)
Schematic diagram of the DQD.
16.3.1
Electron Charge Qubit
Figure 16.7 shows a scanning electron micrograph of an electron charge qubit
fabricated at NTT Basic Research Laboratory [4]. A qubit is made of two
quantum dots (DQD), ﬁve control gate electrodes to control the charge, the
source (S) and the drain (D). A negative voltage is applied to the gate
electrodes to control the electric potential of each dot separately and the
tunneling barrier between the dots. Let us denote a state of a DQD with
NL electrons in the left QD and NR electrons in the right QD by (NL, NR).
Suppose the gate electrode voltages are adjusted so that two states (NL +
1, NR) and (NL, NR + 1) have almost degenerate energies. Furthermore this
DQD is isolated from S and D, with a good precision, by making use of
Coulomb blockade. Then an arbitrary state of the DQD is a superposition
of |L⟩, which corresponds to (NL + 1, NR), and |R⟩, which corresponds to
(NL, NR + 1), as
|ψ⟩= cos θ
2|L⟩+ eiφ sin θ
2|R⟩.
(16.8)
Figure 16.8 shows the schematic energy diagram of the DQD depicted in
Fig. 16.7. The energy levels of the left (the right) QD in the presence of N +1
electrons is denoted as EL (ER), while t denotes the overlap integral between
the QDs. The electrochemical potential of the left S (the right D) is denoted
as μS (μD). The Hamiltonian describing this DQD is
H = −1
2εσz −1
2Δσx,
(16.9)
where ε = ER −EL and Δ = 2t.
It should be kept in mind that there are not only the ground state but
also excited states in an actual physical system. Therefore, for a DQD to

Quantum Computing with Quantum Dots
385
FIGURE 16.8
(a) Energy diagram of DQD when μD < ER < EL < μS. (b) The same for
the case EL = ER < μS = μD, where t is the overlap integral.
be described by Eqs. (16.8) and (16.9), temperature must be low enough
and moreover |ε| and Δ must be small enough compared to the energy level
separation due to Coulomb blockade.
16.3.2
Rabi Oscillation
Rabi oscillation in an electron charge qubit has been ﬁrst observed by the NTT
group [4]. Initialization and measurements were made in the state shown in
Fig.
16.8 (a).
This state satisﬁes the conditions μS > EL > ER > μD
and |ε| ≫Δ. The gate electrode voltages are controlled ﬁrst to make the
system in the state shown in Fig. 16.8 (a). An electron is supplied from the
source S, and the relevant energy level of the left QD is occupied so that the
state (NL + 1, NR) is realized. This electron does not hop to the right QD
due to the assumption |ε| ≫Δ. Next the DQD is steered to a state with
μS = μD > EL = ER so that ε = 0 as shown in Fig.16.8 (b). Then the
DQD is detached from S and D and allowed to execute Rabi oscillation for
the duration tP , after which the system is further driven back to the state in
Fig. 16.8 (a). The coupling between the QDs is turned oﬀin this state and
only the electron residing in the right dot ﬂows into D and the system is put
back to the initial state. The signal obtained in a single measurement is not
strong enough to be observed. Hayashi et al. measured the current I ﬂowing
out from D by repeating the above cycle many times [4]. Figure 16.9 shows
experimentally observed Rabi oscillation.

386
QUANTUM COMPUTING
FIGURE 16.9
Coherent charge oscillation. The barrier height between the left and the right
dots is controlled by changing the paramter VC, which changes the overlap
intergral t and hence Δ, leading the change in the Rabi oscillation frequency.
Courtesy of NTT Basic Research Laboratory.
16.4
Electron Spin Qubit
16.4.1
Electron Spin Qubit
Let us consider an electron conﬁned in a QD. We deﬁne the logical state |0⟩
as the spin-↑state and the logical |1⟩as the spin-↓state. Technology making
use of electron spins thus deﬁned is called spintronics in the literature. The
electron number N for a spintronics is 1 in an ideal situation. A QD with
N = 1 is easily realized not only in a QD but also in a DQD as mentioned
in the previous section. Let us consider a DQD and let SL (SR) be the spin
operator of the left (right) QD. Two-qubit coupling is given by
Hint = J

k=x,y,z
Sk ⊗Sk,
(16.10)
where the exchange energy J is controllable by changing the overlap intergral
between the electron wave functions. This is done by changing the barrier
height between the dots by controlling the voltage applied to the electrodes
separating the dots.
Although coherent motion of a large number of spins is well established in

Quantum Computing with Quantum Dots
387
FIGURE 16.10
Scanning electron micrograph of a quantum dot used in the single-shot readout
measurement. Electrodes M, P, R and T are attached to the dot. Bias voltage
VP is applied through P to control the dot potential. The current IQPC from
the source to the drain is very sensitive to the charge of the dot, and hence
the number of electrons trapped by the dot can be found by measuring IQPC.
Reprinted by permission from Macmillan Publishers Ltd: Nature 430, 431-
435, copyright 2004.
ESR, for example, individual control of an electron spin, which is necessary
for qubit operations, is rather diﬃcult to implement experimentally, in spite
of several theoretical proposals. Qubit operations are easy, however, if we
restrict ourselves within single qubit operations. We outline the experiment
carried out by Elzerman et al. [5] in the following.
16.4.2
Single-Qubit Operations
Elzerman et al.
[5] conducted single-shot readout measurement of a spin
qubit state. Figure 16.10 shows the scanning electron micrograph image of
the GaAs/AlGaAs heterostructure employed in their experiments. A QD is
formed in the area surrounded by gates T, M and R, where T and M control
the electron ﬂow from/to the reservoir. It is possible to realize a state with
electron number N = 0 or N = 1 of a dot by controlling these gate voltages, as
well as the voltage of the gate P. Quantum point contact (QPC) current
IQP C ﬂows from the source to the drain through the narrow channel formed
by the gates R and Q. This current is very sensitive to the dot charge, and
therefore measurement of IQP C enables us to tell whether N = 0 or 1 by
single shot measurement.
Spin of an electron in the dot may be measured by employing such equip-
ment along with a "spin-to-charge" conversion method. First a large magnetic
ﬁeld of ∼10 T is applied to lift the electron spin degeneracy. The Zeeman
splitting of electron energies in the dot due to this large magnetic ﬁeld is

388
QUANTUM COMPUTING
∼2 K. The temperature must be lowered so that kBT is much smaller than
the Zeeman splitting energy as well as the diﬀerence in the charging energy
EC of the dot with N = 0 and N = 1.
Measurement of the electron spin is made by controlling the P gate voltage
in three steps as described in Fig. 16.11 (a).
1. The voltage VP is set to 0 in the ﬁrst step. The other gate voltages are
adjusted so that the ↑-spin and the ↓-spin have higher energies relative
to the Fermi energy of electrons in the reservoir.
2. A positive voltage VP > 0 is applied in the second step. Then both
the ↑-spin and the ↓-spin have lower energies than the Fermi energy of
electrons in the reservoir. If the system is kept in this state for some
duration of time, an electron is injected to the dot from the reservoir.
either in the ↑-spin state or the ↓-state. This time duration is control-
lable by the gate voltages applied to the gates M and T and is adjusted
so that a proper amount of injection is made. Note that the N = 2 state
has much higher energy due to Coulomb blockade, and only states with
N = 1 are realized in reality.
3. Readout of the spin of an electron injected in the dot is done by adjusting
VP in the third step so that the Fermi energy of the reservoir sits between
the ↑-spin energy and the ↓-spin energy. If the electron in the dot is
in the ↑-spin state, the electron does not escape to the reservior. On
the other hand, if it is in the ↓-spin state, it escapes to the reservoir.
Subsequently, a ↑electron is newly injected to the dot from the reservoir.
This behavior can be also observed by measuring the change in current
IQP C as follows. Figure 16.11 shows the schematic QPC current response
under the above steps. IQP C increases during the transition from Step 1 to
Step 2 as a positive voltage is applied to the gate P and accordingly the barrier
formed by gates R and Q is lowered. However IQP C slightly decreases when
an electron is injected into the dot. The state of the dot does not change
provided that the electron is in the ↑-state when readout is made in Step
3. Accordingly the current IQP C does not change after it drops oﬀas VP
is reduced as depicted by the solid line in Fig. 16.11. In contrast, when the
electron is in the ↓-state, IQP C increases temporarily as the electron escapes
to the reservoir, and subsequently IQP C comes back to its initial value due
to an ↑-electron supplied from the reservoir as depicted by the broken line in
Fig. 16.11. It is thus possible to tell whether the electron spin is ↑or ↓by
single-shot measurement.
The relaxation time T1, deﬁned as the average time for a spin to ﬂip from
↓to ↑in the second step, is measured using this strategy. Time required for
an electron to escape to the reservoir or to be supplied from the reservoir is
negligiblly small compared to T1. (Note that these times are exaggerated in
Fig. 16.11.) Therefore T1 is obtained by measuring the probability with which

Quantum Computing with Quantum Dots
389
FIGURE 16.11
(a) Pulses and (b) response to the pulses to measure the state of an individual
electron spin in a quantum dot. (a) The voltage VP to control the potential of
the dot changes in three steps. (1) VP = 0 so that the dot is empty (vanishing
electron numbers), (2) VP at the "injection and wait" period is adjusted so
that the energy levels of the spin-up state and the spin-down state in the dot
are lower than the Fermi energy of electrons in the reservoir. As a result,
a spin-up or a spin-down electron is injected to the dot. There is a ﬁnite
probability with which a spin-down electron ﬂips to a spin-up electron. The
probability depends on the waiting time twait. The spin relaxation time T1
is measured by changing twait.
(3) Readout is conducted by adjusting VP
so that the energy of the spin-up state (spin-down state) is lower (higher)
than the electron Fermi energy of the reservoir. Then only a spin-up electron
remains in the dot. (b) ΔIQPC is the change of IQPC as VP changes as in (a).
The current IQPC increases by applying a positive VP in Step (2). It slightly
decreases when an electron is injected to the dot as denoted with "in" in (b).
Readout of an electron spin trapped by the dot is done by observing if the
electron escapes the dot in (3). When the electron spin is down, the current
IQPC increases shortly after VP is lowered since the down-spin electron escapes
from the dot. The current IQPC decreases since a spin-up electron from the
reservoir ﬁlls the dot. Adapted by permission from Macmillan Publishers Ltd:
Nature 430, 431-435, copyright 2004.

390
QUANTUM COMPUTING
FIGURE 16.12
Measurement of the spin-relaxation time T1. Relaxation from the spin-down
state to the spin-up state takes place in waiting time twait. Electron injection
to the dot takes place slightly after VP is set to 2). This delay is so short, how-
ever, that it may be negligible in practice [6]. Courtesy of Jeroen Elzerman,
ETH, Switzerland.
the spin is observed in the ↓-state as the pulse width in Step 2 is changed.
The relaxation time T1 measured in this way is ∼0.85±0.11 ms at a magnetic
ﬁeld of 8 T.
16.4.3
Coherence Time
Suppose there is a single electron in a quantum dot.
It is reported that
the longitudinal relaxation time T1 of the electron is as long as ∼10 ms
[5]. The coherence time T ∗
2 , which is deﬁned as the phase relaxation time
experimentally observed, is on the order of ∼10 ns. An electron in a quantum
dot is under ﬂuctuating magnetic ﬁeld produced by Ga and As nuclear spins,
which couples with the electron through the hyperﬁne interaction. Each dot
has ∼106 nuclear spins of Ga and As, which thermally ﬂuctuate. The eﬀective
magnetic ﬁeld on the electron is known to ﬂuctuate with the time scale on
the order of ∼10 μs.
Let us turn to the measurement of the dephasing time T2.
Single-shot
signal strength is, however, not strong enough to directly read out T2. Signals
are accumulated during the interval longer than the typical ﬂuctuation time
of the nuclei.
Therefore the observed phase decoherence time is obtained
by averaging a snap-shot T2 over ensemble under ﬂuctuating magnetic ﬁeld.
The decoherence time thus obtained is denoted as T ∗
2 . It is found from the
observed value T ∗
2 = 10 ns that the amplitude of the nuclear magnetic ﬁeld

Quantum Computing with Quantum Dots
391
FIGURE 16.13
Scanning electron micrograph of a DQD. The electron numbers in the DQD
are measured from the current gd through the DQD and the current gs through
the quantum point contact. The gates L and R ﬁx the electronic charge in the
left and the right dots and the gate T controls the coupling strength between
the left and the right dots [7]. Reprinted from Physica E, 35, J. R Petta et al.,
"Preparing, manipulating, and measuring quantum states on a chip", 251-256,
Copyright (2006), with permission from Elsevier. Also from J. R. Petta et al.,
SCIENCE, 309, 2180-2184 (30 September 2005). Reprinted with permission
from AAAS.
ﬂuctuation is ∼2 mT.
Measurement of T2, with the nuclear spin ﬂuctuation removed, has been
made for a coupled double quantum dot [7]. Let (m, n) be a state of a DQD,
employed for measurements, in which there are m electrons in the left QD and
n electrons in the right QD. Figure 16.14 shows the charge stability diagram
of the DQD as a function of bias voltages VL and VR. Let us consider the
boundary region (1, 1) and (0, 2) on this diagram. The parameter ε = ER−EL
is chosen, instead of VL and VR, in such a way that the state (0, 2) is stabilized
when ε > 0 while (1, 1) is stabilized when ε < 0.
Let us consider electron spins in these states. Electron spins in the state
(0, 2) are either parallel (|0⟩| ↑↑⟩, for example) or antiparallel (|0⟩| ↑↓⟩). One
of the electrons in the state | ↑↑⟩occupies the ﬁrst excited state whose energy
is higher than that of the ground state by Δϵ. The state | ↑↑⟩, i.e., a triplet
state, has higher energy than a singlet state when Δϵ is suﬃciently large.
We may ignore the contribution from triplet states in this case. This implies
that an electron with up-spin in the left dot cannot hop to the right dot if
the right dot is already occupied by a spin-up electron. This phenomenon

392
QUANTUM COMPUTING
FIGURE 16.14
Charge stability diagram showing the electron numbers (m, n) in a DQD as
a function of the gate voltages VR and VL. Reprinted from Physica E, 35,
J. R Petta et al., "Preparing, manipulating, and measuring quantum states
on a chip", 251-256, Copyright (2006), with permission from Elsevier. Also
from J. R. Petta et al., SCIENCE, 309, 2180-2184 (30 September 2005).
Reprinted with permission from AAAS.

Quantum Computing with Quantum Dots
393
FIGURE 16.15
Bloch sphere, which represents a DQD state in (1, 1). The north pole and the
south pole of the Bloch sphere corresponds to the singlet state |S⟩and the
triplet state |T0⟩, respectively, while | ↑↓⟩and | ↓↑⟩are in the xy-plane. The
arrow shows the initial state |S⟩. Reprinted from Physica E 35, J. R. Petta
et al., "Preparing, manipulating, and measuring quantum states on a chip",
251-256, Copyright (2006), with permission from Elsevier.
is called the spin blockade and is employed as a readout method of qubit
states in this exeperiment. In the state (1, 1) on the other hand, the energies
of the three states of a triplet electron pair and that of the singlet pair are
almost degenerate if the exchange energy J is negligible. If a magnetic ﬁeld
is applied in this state, the | ↑↑⟩and | ↓↓⟩states have diﬀerent energies, while
that of the residual states, a singlet state |S⟩= (| ↑↓⟩−| ↓↑)/
√
2 and a triplet
state |T0⟩= (| ↑↓⟩+ | ↓↑⟩)/
√
2, remain degenerate. We choose |S⟩and |T0⟩
as the qubit states |0⟩and |1⟩, respectively. Any qubit state is expressed as
a point on a Bloch sphere as shown in Fig. 16.15. In fact, the degeneracy
between |S⟩and |T0⟩is lifted if the exchange interaction J between the dots
is taken into account. As a result, the energy of the singlet state S is lower
than that of the triplet state T0 by J. The parameter J is controllable by
changing ε (≤0). It takes maximum value J(0) when ε = 0 and J(ε) →0 in
the limit |ε| ≫J(0). Let BL
nuc (BR
nuc) be the component of the hyperﬁne ﬁeld
in the left (right) dot. Then the Hamiltonian of this qubit is
H =

0
g∗μBΔBnuc
g∗μBΔBnuc
J(ε)

,
(16.11)
where g∗≃−0.44 is the electron g factor in GaAs, μB is the Bohr magneton,
ΔBnuc ≡BL
nuc −BR
nuc and J(0) ≫|ΔBnuc|.
The intrinsic phase coherence time T2 of this qubit has been measured by
elimimating the eﬀect of the nuclear magnetic ﬁeld ﬂuctuation. The parameter
ε has been scanned in the spin-echo experiment as shown in Fig. 16.16.

394
QUANTUM COMPUTING
FIGURE 16.16
Spin-echo pulse sequence. Pulse i) changes the voltage ε from a positive value
to ε ≪−J(0). Then the initial singlet state of (0, 2) is transformed into a
singlet state of (1, 1), which corresponds to the north pole of the Bloch sphere.
The spin which represents the qubit state rotates around the x-axis during
the pulse duration τS under the inﬂucence of the hyperﬁne ﬁeld ΔBnuc. As a
result, the spin state has a ﬁnite y-component ⟨σy⟩. Next, pulse ii) is applied
so that ε is slightly less than 0. Then the spin rotates around the z-axis due to
the exchange coupling J(0) between two qubits. The pulse width τE is taken
so that the resulting rotation around the z-axis is π. Then the expectation
value of the y-component of the spin is ﬂipped to −⟨σy⟩. Finally pulse iii)
is applied to put the voltage ε back to the value under the pulse i).
The
magnetic ﬁeld ΔBnuc rotates the spin so that the expectation value −⟨σy⟩
approaches zero. The time required for the above spin-echo pulse sequence
is much shorter than the characteristic time of ﬂuctuations in ΔBnuc. The
eﬀect of ΔBnuc may be removed if we take τS = τS′, where τS′ is the width
of the pulse iii).

Quantum Computing with Quantum Dots
395
1) Singlet electron pair (0, 2) is prepared in the right dot by taking ε > 0.
2) The parameter ε is changed to ε < 0, |ε| ≫J(0). The change is slower
than the time scale ≃ℏ/J(0) for an electron to tunnel to the left dot
and faster than the singlet-triplet mixing time ∼ℏ/(g∗μBΔBnuc). Sin-
glet state |S⟩is obtained as a result. The initial state |S⟩then mixes
with |T0⟩through g∗μBΔBnuc term in H since the system stays in the
parameter region in which J(ε) ≃0. Let τS be the duration of this
mixing step.
3) Now ε is put back to the value ε ∼0. Then J(ε) ≫ΔBnuc is satisﬁed
and a rotation around the z-axis is in action. The duration τE of this
process is taken such that J(ε)τE/ℏ= π so that a π-pulse around the
z-axis results in. Note that τE ≪τS.
4) The system is put to the same state as in 2) for the same duration τ′
S.
5) Readout is conducted by putting ε at the same positive value as in 1).
Suppose the state contains the triplet state |T0⟩. Then the corresponding
component does not come back to (0, 2) due to spin blockade, which is
active only in the triplet state. The probability PS of the state being in
the singlet state |S⟩after operation 4) is measured in this way.
Figure 16.17 shows the observed result of the probability PS, where PS is
plotted against τS −τS′ for a given value of τS + τS′. It is expected that the
eﬀect of ΔBnuc is eliminated when τS = τS′. This is because the time required
for operations 1) ∼5) above is much shorter than the characteristic time of
ﬂuctuation in ΔBnuc. The probability PS therefore takes the maximum value
at this position. The phase relaxation time T2 is obtained to be 1.2 μs by
plotting the maximum of PS as a function of τS + τS′ to measure the decay
rate, and subsequently the eﬀect of nuclear spins are subtracted.
The Rabi oscillation between | ↑↓⟩and ↓↑⟩is also observed in this system by
manipulating the pulse sequence for ε. This guarantees that the SWAP gate
and the
√
SWAP gate may be implemented by controlling the Rabi oscillation
time by regarding the DQD as a two-qubit system, in which up-spin and down-
spin states of each dot are basis vectors of a qubit.
An attempt has been made to control an individual electron spin of each dot
by using ESR (electron spin resonance) to make a DQD a two-qubit system
[9]. We note that the observed T2 ≃1.2 μs is roughly 7,000 times longer than
the
√
SWAP gate operation time.

396
QUANTUM COMPUTING
FIGURE 16.17
Spin echo recovery probability PS plotted against τS −τS′ for given τS +
τS′. Observe that the probability takes the maximum value at τS −τS′ =
0. The coherence time T2 is obtained by plotting the maximum value as a
function of τS + τS′. From J. R. Petta et al., SCIENCE 309: 2180-2184 (30
September 2005) and J. R. Petta et al., Physica E 35, 251-256 (December
2006). Reprinted with permissions from AAAS and Elsevier.
16.5
DiVincenzo Criteria
DiVincenzo criteria for a quantum dot quantum computer are evaluated sep-
arately for charge qubits and spin qubits.
16.5.1
Charge Qubits
Let us evaluate the DiVincenzo criteria for charge qubits.
1. A scalable physical system with well-characterized qubits:
A qubit is made of a double quantum dot fabricated in a GaAs/Al/GaAs
heterostructure. It is potentially scalable using currently available semi-
conductor lithography technology. A two-qubit system has been fabri-
cated, and coupling between two qubits has been demonstrated so far
[10]. The two basis states of the qubit correspond to states in which an
electron sits in the right (left) quantum dot.
2. The ability to initialize the state of the qubits to a simple ﬁducial state,
such as |00 . . . 0⟩:
The qubit can be initialized by electron injection [4]; see Fig. 16.8.

Quantum Computing with Quantum Dots
397
3. Long decoherence times, much longer than the gate operation time:
Decoherence time for a charge qubit is short due to charge ﬂuctuation
and phonon emission. The former restricts the phase relaxation time T2
and the latter the energy relaxation time T1 [4].
4. A "univeral" set of quantum gates:
One-qubit gate operations have already been demonstrated [4].
Al-
though two-qubit coupling has been demonstrated [10], two-qubit gates
have not been implemented yet.
5. A qubit-speciﬁc measurement capability:
Readout is possible by making use of tunneling current [4].
Single-
shot measurement with the radio-frequency single-electron transistor
(rf-SET) is also proposed, although this proposal has not been demon-
strated experimentally [11].
16.5.2
Spin Qubits
1. A scalable physical system with well-characterized qubits:
A qubit in a spin qubit is an electron spin trapped in a quantum dot.
It is also expected to be scalable within the current lithography tech-
nology. A double quantum dot may be regarded as a two-spin qubit
system. Individual spin control in a double quantum dot has not been
demonstrated yet.
2. The ability to initialize the state of the qubits to a simple ﬁducial state,
such as |00 . . . 0⟩:
Initialization is done with electron injection similarly to the charge qubit
case [5].
3. Long decoherence times, much longer than the gate operation time:
Energy relaxation time T1 is very long, on the order of 1 ms, under a
strong magnetic ﬁeld [5]. Phase relaxation time T2 is measured to be
∼1 μs, if the contribution from the background hyperﬁne interaction is
subtracted [8].
4. A "univeral" set of quantum gates:
ESR may be used to control a single spin qubit [12], although selective
addressing may be diﬃcult. As for two-qubit operations,
√
SWAP gate,
making use of the exchange coupling, has been demonstrated [7]. Im-
plementation of general two-qubit gates requires one-qubit gates, which
is diﬃcult due to lack of individual addressing.

398
QUANTUM COMPUTING
5. A qubit-speciﬁc measurement capability:
Tunneling current measurement to readout the qubit state has been
experimentally demonstrated. Single-shot measurement making use of a
quantum point contact (QPC) electrometer has been also demonstrated
[5].
References
[1] U. Meirav, M. A. Kastner, and S. J. Wind, Phys. Rev. Lett. 65, 771
(1990).
[2] M. A. Kastner, Rev. Mod. Phys. 64, 849 (1992).
[3] T. Fujisawa in Physical Realizations of Quantum Computing: Are the
DiVincenzo Criteria Fulﬁlled in 2004?, ed. M. Nakahara et al., World
Scientiﬁc, Singapore (2006).
[4] T. Hayashi, et al., Phys. Rev. Lett. 91, 226804 (2003).
[5] J. M. Elzerman et al., Nature 430, 431 (2004).
[6] J. M. Elzerman, Technische Universiteit Delft Thesis (2004).
[7] J. R. Petta, et al., Science 309, 2180 (2005).
[8] J. R. Petta, et al., Physica E 35, 251 (2006).
[9] F. H. L. Koppens, et al., Nature 442 (2006) 766.
[10] G. Shinkai et al., Appl. Phys. Lett. 90 103116 (2007).
[11] A. Aassime et al., Phys. Rev. Lett. 86, 3376 (2001).
[12] H.-A. Engel and D. Loss, Phys. Rev. Lett. 86. 4648 (2001).

A
Solutions to Selected Exercises
Chapter 1
1.1 For these vectors to be linearly dependent, we must have |v1⟩= c|v2⟩. The
solution is c = 3, for which we obtain x = 6 and y = 9/2. Therefore, they are
linearly independent if x ̸= 6 or y ̸= 9/2.
1.2 We may show that the determinant of a matrix (|v1⟩, |v2⟩, |v3⟩) does
not vanish to show the linear independence of these vectors.
We obtain
det(|v1⟩, |v2⟩, |v3⟩) = 2 ̸= 0.
1.3 ∥x∥=

⟨x|x⟩=
√
7. ⟨x|y⟩= 7 −2i. ⟨y|x⟩= 7 + 2i, where the result of
Exercise 1.4 may be used.
1.5 c1 = ⟨e1|v⟩= 5/2 and c2 = ⟨e2|v⟩= 1/2.
1.6 (1) |e1⟩= |v1⟩/∥|v1⟩∥= (−1, 2, 2)t/3. Then we obtain ⟨e1|v2⟩= 0 and
|e2⟩= |v2⟩/∥|v2⟩∥= (2, −1, 2)t/3. Next, we ﬁnd ⟨e1|v3⟩= −3 and ⟨e2|v3⟩= 0,
from which we obtain |f3⟩= (2, 2, −1)t and |e3⟩= (2, 2, −1)t/3.
(2) c1 = ⟨e1|u⟩= 3. Similarly we obtain c2 = 6 and c3 = −3.
1.7 |e1⟩= |v1⟩/∥|v1⟩∥= (1, i, 1)/
√
3. |f2 = |v2⟩−|e1⟩⟨e1|v2⟩= (2, 1−i, i−1)t,
from which we obtain |e2⟩= |f2⟩/∥|f2⟩∥= (2, 1 −i, i −1)t/2
√
2.
1.9 Eigenvalues are λ1 = 1 and λ2 = −1. Corresponding normalized eigen-
vectors are |λ1⟩= (eπi/4, 1)t/
√
2 |λ2⟩= (1, −e−πi/4)t/
√
2. Similar to Exam-
ple 1.3, the unitary matrix which diagonalizes A is found to be
U = (|λ1⟩, |λ2⟩) =
1
√
2
eiπ/4
1
1
−e−iπ/4

.
1.10 (2) Let U|λ⟩= λ|λ⟩. Hermitian conjugation yields ⟨λ|U = λ∗⟨λ|. Multi-
plying these two equations, we obtain
⟨λ|U †U|λ⟩= ⟨λ|λ⟩= |λ|2⟨λ|λ⟩,
from which we ﬁnd |λ| = 1.
1.11 Use U = iσx to obtain eigenvalues ±i. Alternatively we may use tr U =
399

400
QUANTUM COMPUTING
λ1 + λ2 = 0 and det U = λ1λ2 = 1 to show λi = ±i.
1.12 U † = (I −iH)−1†(I + iH)† = (I + iH)−1(I −iH), where use has been
made of the identity A−1† = A†−1. We show
U †U = (I + iH)−1(I −iH)(I + iH)(I −iH)−1
= (I + iH)−1(I + iH)(I −iH)(I −iH)−1 = I.
1.13
A =

i
λi|ei⟩⟨ei| =
 1 −2i
2i
1

.
1.14 (1) It follows from the observation A = 2I + σx that the eigenvalues are
2 ±1 and the eigenvectors are the same as those of σx. We denote λ1 = 3 and
λ2 = 1 and |λ1⟩= (1, 1)t/
√
2 and |λ2⟩= (1, −1)t/
√
2.
(2)
A = 3
2
 1 1
1 1

+ 1
2
 1 −1
−1 1

.
(3) exp(iαA) = ei3α|λ1⟩⟨λ1| + eiα|λ2⟩⟨λ2| = e2iα
 cos α i sin α
i sin α cos α

.
This
is expected from the decomposition A = 2I + σx and the factorization
exp(iαA) = exp(2iαI) exp(iασx), which follows from [2I, σx] = 0.
1.15 (1) λ1 = λ2 = 1, λ3 = 10. The ﬁrst two eigenvalues are degenerate.
The corresponding eigenvectors are obtained by Gram-Schmidt orthonormal-
ization. We may take
|λ1⟩=
1
√
2
⎛
⎝
1
0
1
⎞
⎠, |λ2⟩=
√
2
6
⎛
⎝
1
4
−1
⎞
⎠, |λ3⟩= 1
3
⎛
⎝
−2
1
2
⎞
⎠,
for example.
(2) It is easier to use Eq. (1.39). We obtain
A = 1 × P1 + 10 × P2 = 1 × 1
9
⎛
⎝
5 2
4
2 8 −2
4 −2 5
⎞
⎠+ 10 × 1
9
⎛
⎝
4 −2 −4
−2 1
2
−4 2
4
⎞
⎠.
(3)
A−1 = P1 + 1
10P2 = 1
10
⎛
⎝
6 2
4
2 9 −2
4 −2 6
⎞
⎠.

Solutions to Selected Exercises
401
1.16 It follows from Proposition 1.2 that
f(αˆn · σ) = f(α(P1 −P2)) = f(α)P1 + f(−α)P2
= f(α)I + ˆn · σ
2
+ f(−α)I −ˆn · σ
2
.
1.17
A =
 −1 0
0 i
  √
2 0 0
0
√
2 0
 1
√
2
⎛
⎝
−1
0
−i
1
0
−i
0 −
√
2 0
⎞
⎠.
1.21 To simplify our argument and notations, let us suppose all the vectors
are elements of C2 and write |a⟩= (a1, a2)t, for example. Then
|a⟩⟨b| =
a1b1, a1b2
a2b1, a2b2

, |c⟩⟨d| =
c1d1, c1d2
c2d1, c2d2

.
while
|a⟩⊗|c⟩=
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎝
a1c1
a1c2
a2c1
a2c2
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎠
, ⟨b| ⊗⟨d| = (b1d1, b1d2, b2d1, b2d2) .
By comparing the components of (|a⟩⟨b|) ⊗(|c⟩⟨d|) and (|a⟩⊗|c⟩)(⟨b| ⊗⟨d|),
we readily verify the equality of these matrices.
Chapter 2
2.2 The time development operator is
U(t) = eiωtσy/2 =
 cos ωt/2 sin ωt/2
−sin ωt/2 cos ωt/2

.
(1) |ψ(t)⟩= U(t)|ψ(0)⟩= (sin ωt/2, cosωt/2)t.
(2) p(t) = |⟨σz = +1|ψ(t)⟩|2 = sin2(ωt/2).
(3) p(t) = |⟨σx = +1|ψ(t)⟩|2 = 1
2(cos ωt/2 + sin ωt/2)2 = 1
2(1 + sin ωt).
2.4 Let ρ = 
i λi|λi⟩⟨λi| be the sepctral decomposition of ρ. Then
ρ2 =

i
λ2
i |λi⟩⟨λj|,

402
QUANTUM COMPUTING
from which we obtain
0 = Tr ρ −Tr ρ2 =

i
λi(1 −λi).
Since each summand is non-negative, we must have λi = 0 or λi = 1. From
Tr ρ = 
i λi = 1, we ﬁnd only one of λi is 1 and the rest are 0. The converse
is trivial.
2.5 We ﬁnd
ρpt
1 =
⎛
⎜
⎜
⎝
p+1
4
0
0
0
0
1−p
4
p
2
0
0
p
2
1−p
4
0
0
0
0
p+1
4
⎞
⎟
⎟
⎠.
The eivgenvalues are
p + 1
4
, p + 1
4
, p + 1
4
, 1
4(1 −3p).
Therefore one of the eigenvalues is negative for p > 1/3 and the negativity
does not vanish.
2.6 We ﬁnd
ρpt
2 =
⎛
⎜
⎜
⎝
p
2
0
0
1−p
2
0
1−p
2
p
2
0
0
p
2
1−p
2
0
1−p
2
0
0
p
2
⎞
⎟
⎟
⎠.
The eivgenvalues are
1
2, 1
2, 1
2(1 −2p), 1
2(2p −1).
We ﬁnd one of the eigenvalues is always negative except at p = 1/2, where
two of the eigenvalues vanish.
2.7 We obtain the corresponding density matrix
ρ′ = |ψ′⟩⟨ψ′|
= 1
2(|e1⟩⟨e1| ⊗|e2⟩⟨e2| + |e2⟩⟨e2| ⊗|e1⟩⟨e1|
−|e1⟩⟨e2| ⊗|e2⟩⟨e1| −|e2⟩⟨e1| ⊗|e1⟩⟨e2|).
Partial trace over the ﬁrst Hilbert space yields
ρ = Tr1ρ′ = 1
2(|e1⟩⟨e1| + |e2⟩⟨e2| = 1
2I.
It is a uniformly mixed state.
2.8
|Ψ⟩= 1
2(|ψ1⟩⊗|φ1⟩+
√
3|ψ2⟩⊗|φ2⟩).

Solutions to Selected Exercises
403
2.11
√ρ1ρ2
√ρ1 = 1
4
⎛
⎜
⎜
⎝
1 0 0 1
0 0 0 0
0 0 0 0
1 0 0 1
⎞
⎟
⎟
⎠,
√ρ1ρ2
√ρ1 =
1
2
√
2
⎛
⎜
⎜
⎝
1 0 0 1
0 0 0 0
0 0 0 0
1 0 0 1
⎞
⎟
⎟
⎠.
Therefore F(ρ1, ρ2) = 1/
√
2.
Chapter 3
3.2
ρ(θ, φ) = |ψ(θ, φ)⟩⟨ψ(θ, φ)| =
⎛
⎝
1+cos θ
2
1
2e−iφ sin θ
1
2eiφ sin θ
1−cos θ
2
⎞
⎠
= 1
2 (I + sin θ cos φ σx + sin θ sin φ σy + cos θ σz) .
3.3 By noting the identity tr σiσj = 2δij, we show
tr (ρσk) = 1
2

i
uitr (σkσi)
= 1
2

i
ui2δik = uk.
3.4 We have to ﬁx the order of the Bell basis vectors {|Belli⟩}.
We take
{|Φ+⟩, |Ψ+⟩, |Ψ−⟩, |Φ−⟩} as our order. Let |Belli⟩= 
i Vij|j⟩, where |j⟩is
the binary basis vectors in decimal expression. We have, for example, |Bell0⟩≡
|Φ+⟩=
1
√
2|00⟩+
1
√
2|11⟩. Repeating this for other basis vectors, we obtain
V =
1
√
2
⎛
⎜
⎜
⎝
1 0 0
1
0 1 1
0
0 1 −1 0
1 0 0 −1
⎞
⎟
⎟
⎠.
3.5 They all vanish.
3.6 (1) |11⟩|76⟩, (2) |23⟩|76⟩, (3) |35⟩|76⟩. Note that the second register is in
the common state |76⟩for all the three cases.
Chapter 4
4.1 Suppose UCNOT = U1 ⊗U2, where Uk ∈U(2).
Then, for any tensor

404
QUANTUM COMPUTING
product state, we ﬁnd UCNOT|ψ1⟩|ψ2⟩= (U1|ψ1⟩)⊗(U2|ψ2⟩) is another tensor
product state. If, however, UCNOT acts on |ψ⟩=
1
√
2(|0⟩+|1⟩)⊗|0⟩, we obtain
the entangled state
UCNOT|ψ⟩=
1
√
2
(|00⟩+ |11⟩),
which is a contradiction.
4.2 a|00⟩+ b|11⟩.
4.3 (1)
I ⊗|0⟩⟨0| + σx ⊗|1⟩⟨1| =
⎛
⎜
⎜
⎝
1 0 0 0
0 0 0 1
0 0 1 0
0 1 0 0
⎞
⎟
⎟
⎠
(2)
(I ⊗|0⟩⟨0| + σx ⊗|1⟩⟨1|)(|0⟩⟨0| ⊗I + |1⟩⟨1| ⊗σx)
= |00⟩⟨00| + |01⟩⟨10| + |10⟩⟨11| + |11⟩⟨01| =
⎛
⎜
⎜
⎝
1 0 0 0
0 0 1 0
0 0 0 1
0 1 0 0
⎞
⎟
⎟
⎠.
It leaves the basis vector |00⟩unchanged, but it produces the cyclic change of
other basis vectors as |01⟩→|11⟩→|10⟩.
(3) The result of (2) multiplied by CNOT from the left yields the matrix
|00⟩⟨00| + |01⟩⟨10| + |10⟩⟨01| + |11⟩⟨11| =
⎛
⎜
⎜
⎝
1 0 0 0
0 0 1 0
0 1 0 0
0 0 0 1
⎞
⎟
⎟
⎠.
It swaps the basis vector of the ﬁrst qubit and that of the second qubit.
Therefore it maps |ψ1⟩|ψ2⟩	→|ψ2⟩|ψ1⟩.
4.5 The LHS is
(UH ⊗UH)(I ⊗|0⟩⟨0| + X ⊗|1⟩⟨1|)(UH ⊗UH)
= I ⊗1
2(|0⟩+ |1⟩)(⟨0| + ⟨1|) + UHXUH ⊗1
2(|0⟩−|1⟩)(⟨0| −⟨1|)
= 1
2[I ⊗(I + X) + Z ⊗(I −X)] = 1
2[(I + Z) ⊗I + (I −Z) ⊗X]
= UCNOT = RHS.
4.6 |00⟩	→|Φ+⟩, |01⟩	→|Ψ+⟩, |10⟩	→|Φ−⟩, |11⟩	→|Ψ−⟩.
4.9 A NAND gate is obtained if NOT is applied after AND. Both NOT and

Solutions to Selected Exercises
405
AND may be implemented using CCNOT gates. NAND is also obtained using
the CCNOT gates.
4.10 (1) ⟨Ψ|Φ⟩= ⟨ψ|⟨0|U †U|φ⟩|0⟩= ⟨ψ|φ⟩= (⟨ψ|φ⟩)2.
(2) If such U existed, we would have either ⟨ψ|φ⟩= 1 or ⟨ψ|φ⟩= 0 for arbitrary
|ψ⟩and |φ⟩. This is a contradiction.
4.11 UH|ψ⟩=
1
√
2(a|00⟩+ a|10⟩+ b|01⟩−b|11⟩). Suppose 0 is obtained upon
the measurement of the ﬁrst qubit.
Then the wave function immediately
after the measurement is |0⟩⊗(a|0⟩+ b|1⟩) and the second qubit is in the
state a|0⟩+ b|1⟩. Similarly, if 1 is obained upon the ﬁrst qubit measurement,
the second qubit state is a|0⟩−b|1⟩.
4.12 Let
U =
⎛
⎜
⎜
⎝
a e j n
b f k p
c g l q
d h m r
⎞
⎟
⎟
⎠
and take
U1 =
⎛
⎜
⎜
⎝
a∗/u b∗/u 0 0
−b/u a/u 0 0
0
0
1 0
0
0
0 1
⎞
⎟
⎟
⎠.
Then it follows
U1U =
⎛
⎜
⎜
⎝
a′ e′ j′ n′
0 f ′ k′ p′
c′ g′ l′ q′
d′ h′ m′ r′
⎞
⎟
⎟
⎠.
The third and the fourth components of the ﬁrst column may be deleted
similarly.
(Use U2 whose components are diﬀerent from those of the unit
matrix only in (1, 1), (1, 3), (3, 1) and (3, 3) matrix elements.
See the next
exercise.)
4.13 Use
U1 =
⎛
⎜
⎜
⎝
1
√
2
1
√
2 0 0
−1
√
2
1
√
2 0 0
0
0 1 0
0
0 0 1
⎞
⎟
⎟
⎠, U2 =
⎛
⎜
⎜
⎜
⎜
⎝

2
3 0
1
√
3 0
0
1
0
0
−1
√
3 0

2
3 0
0
0
0
1
⎞
⎟
⎟
⎟
⎟
⎠
, U3 =
⎛
⎜
⎜
⎝
√
3
2
0 0
1
2
0 1 0 0
0 0 1 0
−1
2 0 0
√
3
2
⎞
⎟
⎟
⎠

406
QUANTUM COMPUTING
to reduce U to
U3U2U1U =
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
1
0
0
0
0 −1−i
2
√
2 −1
√
2 −1+i
2
√
2
0 −3+i
2
√
6
1
√
6
−3−i
2
√
6
0 −i
√
3 −1
√
3
i
√
3
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
.
Then apply the prescription for a 3 × 3 matrix given in Lemma 4.1 for the
rest of the nontrivial elements.
4.14 (1) g0 = 000, g1 = 010, g2 = 110, for example.
(2)
4.15
UCV UCU = (|0⟩⟨0| ⊗I + |1⟩⟨1| ⊗V )(|0⟩⟨0| ⊗I + |1⟩⟨1| ⊗U)
= |0⟩⟨0| ⊗I + |1⟩⟨1| ⊗(V U) = UC(V U).
4.16 The unitary matrix corresponding to the RHS of Fig. 4.12 is written as
(|0⟩⟨0| ⊗I ⊗I + |1⟩⟨1| ⊗I ⊗V )[(|0⟩⟨0| ⊗I + |1⟩⟨1| ⊗X) ⊗I]
×[I ⊗(|0⟩⟨0| ⊗I + |1⟩⟨1| ⊗V †)][(|0⟩⟨0| ⊗I + |1⟩⟨1| ⊗X) ⊗I]
×[I ⊗(|0⟩⟨0| ⊗I + |1⟩⟨1| ⊗V )]
= (|00⟩⟨00| + |01⟩⟨01| + |10⟩⟨10|) ⊗I + |11⟩⟨11| ⊗V 2
= (|00⟩⟨00| + |01⟩⟨01| + |10⟩⟨10|) ⊗I + |11⟩⟨11| ⊗U.
4.17 Instead of giving a general proof, we justify this statement by examining
a few examples. (i) Let the input state of the ﬁrst three qubits be 101. Then
the ﬁrst controlled-V gate is active and so is the controlled-V † gate. The
second controlled-V gate is not active since the second qubit is 0. The fourth
qubit is then acted by V †V = I. (ii) Suppose the input state of the ﬁrst
three qubits is 111, next. Then both controlled-V gates are active while the
controlled-V † gate is not active. The fourth qubit is acted by V 2 = U.

Solutions to Selected Exercises
407
Chapter 5
5.1 (1)
|ψ3⟩= |00⟩1
√
2(|0⟩−|1⟩).
The measurement outcome is 00 with a probability 1.
(2)
|ψ3⟩= |10⟩1
√
2(|0⟩−|1⟩).
The measurement outcome is 11 with a probability 1.
(3)
|ψ3⟩= 1
2(−|00⟩+ |01⟩+ |10⟩+ |11⟩) 1
√
2(|0⟩−|1⟩).
Chapter 6
6.2 (1) ⟨ψ|ψ⟩= N 2 N−1
x=0 cos2(2πx/N). The summation is evaluated as
N−1

x=0
cos2
2πx
N

=
N−1

x=0
cos
 4πx
N
!
+ 1
2
= N
2 = 2n−1.
Therefore N = 2−(n−1)/2.
(2) The x component is
1
√
N

N/2
N

y=0
e−2πixy/N cos 2πy
N
=
1
√
2N

y
e−2πixy/N(e2πiy/N + e−2πiy/N)
=
1
√
2N

y
(e−2πi(x+1)y/N + e−2πi(x−1)y/N)
=
1
√
2N N(δx,1 + δx,N−1) =
1
√
2(δx,1 + δx,N−1),
from which we obtain
UQFTn|ψ⟩=
1
√
2
(|1⟩+ |N −1⟩).
6.3 Let 2n/P = m ∈N. Then we have a vector, after the application of QFT,
|Ψ′⟩= 1
2n
2n−1

x,y=0
e−2πixy/2n|y⟩|f(x)⟩.

408
QUANTUM COMPUTING
Let us separate the summation over x as
2n−1

x=0
h(x) →
P −1

l=0
m−1

k=0
h(kP + l),
where h(x) is an arbitrary function. We obtain, after this replacement,
|Ψ′⟩= 1
2n
P −1

l=0
m−1

k=0
2n−1

y=0
e−2πily/2ne−2πiky/m|y⟩|f(kP + l)⟩
= 1
2n
2n−1

y=0
m−1

k=0
e−2πiky/m
P −1

l=0
e−2πily/2n|y⟩|f(l)⟩,
where use has been made of the periodicity |f(kP + l)⟩= |f(l)⟩.
Suppose y = qm (0 ≤q ≤P −1). Then
m−1

k=0
e−2πiky/m =
m−1

k=0
e−2πikq = m.
If y ̸= qm, on the other hand, we obtain
m−1

k=0
e−2πiky/m =
1 −e−2πiy
1 −e−2πiy/m = 0.
Accordingly,
|Ψ′⟩= m
2n
P −1

l=0
P −1

q=0
e−2πilq/P |qm⟩|f(l)⟩.
The outcome qm = q2n/P (0 ≤q ≤P −1) is obtained upon measurement of
the ﬁrst register.
6.4
6.7 K−1
n (x, y) = e−iθxδxy.
6.8 Let U =
 
eiθxδxy
!
be a selective phase rotation transform matrix with
n = 3. It is put in a block diagonal form
U =
⎛
⎜
⎜
⎝
U0 0
0
0
0 U1 0
0
0
0 U2 0
0
0
0 U3
⎞
⎟
⎟
⎠,

Solutions to Selected Exercises
409
where Uk is of the form diag(eiθa, eiθb). Note that
U = |00⟩⟨00| ⊗U0 + |01⟩⟨01| ⊗U1 + |10⟩⟨10| ⊗U2 + |11⟩⟨11| ⊗U3
= A0A1A2A3,
where A0 = |00⟩⟨00|⊗U0 +(|01⟩⟨01|+|10⟩⟨10|+|11⟩⟨11|)⊗I, for example. A
quantum circuit implementing this gate is obtained from these observations
as
A ﬁlled circle in the ﬁgure is an ordinary control node, while a white circle is
a negated control node, which may be implemented as in Fig. 6.5.
Chapter 8
8.2 It follows from 441 ≤2n < 882 that n = 9.
The period is 6 since
116 ≡1 mod 21.
8.3 61/45 = [1, 2, 1, 4, 3],
121/13 = [9, 3, 4].
8.4 The continued fraction expansion of 37042/Q is [0, 28, 3, 4, 88, 1, 4, 3]. We
ﬁnd for k = 3 that p3 = 13, q3 = 368 and |13/368−37042/Q| ≃8.293×10−8 ≤
1/(2Q). We have found P = q3 = 368. The continued fraction expansion of
65536/Q is [0, 16], and it fails to give the correct order.
8.5 The intermediate state of the bottom qubit in Fig. 8.6, for the input state
|c, a, b, c′⟩, is |ab ⊕c′⟩.
The last CCNOT gate adds (a ⊕b)c mod 2 to the
bottom qubit to yield |ab ⊕c′ ⊕(a ⊕b)c⟩= |ab ⊕ac ⊕bc ⊕c′⟩.
8.7 We ﬁnd from 7 = 111 that −7 is expressed as 1000 + 1 = 1001.
Chapter 9
9.3 We evaluate
−i[H, ρ] = iω0
2

0
cx −icy
−cx −icy
0

,

k
LkρL†
k =

(Γ+ + Γz)/2 + (Γz −Γ+)cz/2
−Γz(cx −icy)/2
−Γz(cx + icy)/2
(Γ−+ Γz)/2 + (Γ−−Γz)cz/2

.

410
QUANTUM COMPUTING
−1
2

k
8
ρ, L†
kLk
9
=

−(Γ−+ Γz)(1 + cz)/2
−(Γ+ + Γ−+ 2Γz)(cx −icy)/4
−(Γ+ + Γ−+ 2Γz)(cx + icy)/4
−(Γ+ + Γz)(1 −cz)/2

.
Adding these terms yields the RHS of the Lindblad equation,

(Γ+ −Γ−)/2 −(Γ+ + Γ−)cz/2
(2iω0 −Γ+ −Γ−−4Γz)(cx −icy)/4
−(2iω0 + Γ+ + Γ−+ 4Γz)(cx + icy)/4
−(Γ+ −Γ−)/2 + (Γ+ + Γ−)cz/2

,
from which the equations of motion for ck are derived as
dcx
dt = ω0cy −
Γ+ + Γ−
2
+ 2Γz

cx,
dcy
dt = −ω0cx −
Γ+ + Γ−
2
+ 2Γz

cy,
dcz
dt = (Γ+ −Γ−) −(Γ+ + Γ−)cz.
By introducing the constants
ceq
z = Γ+ −Γ−
Γ+ + Γ−
,
1
T1
= Γ+ + Γ−,
1
T2
= Γ+ + Γ−
2
+ 2Γz,
the equations of motion are put in compact forms
dcx
dt = ω0cy −cx
T2
, dcy
dt = −ω0cx −cy
T2
, dcz
dt = ceq
z −cz
T1
.
Chapter 10
10.1 The probability with which k bits are ﬂipped in the received ﬁve bits is
 5
k
!
pk(1 −p)5−k, (0 ≤k ≤5). The received ﬁve bits can be corrected if at
most two bits are ﬂipped. Therefore the success probability is
p0 = (1 −p)2 + 5p(1 −p)4 + 10p2(1 −p)3 = (1 −p)3(1 + 3p + 6p2).
p0 is as large as 0.99144 for p = 0.1.
10.3 Suppose Uβ occurs in the ﬁrst qubit. Encoding circuit outputs the state
a| + ++⟩+ b|111⟩for an input |ψ⟩= a|0⟩+ b|1⟩. The actions of Uβ on the
encoded state yields
a(cos β| + ++⟩+ i sin β| −++⟩) + b(cos β| −−−⟩+ i sin β| + −−⟩).
Action of the Hadmard gates in the error syndrome detection circuit maps
these vectors to
a(cos β|000⟩+ i sin β|100⟩) + b(cos β|111⟩+ i sin β|011⟩).

Solutions to Selected Exercises
411
The outputs of the error syndrome detection circuit for these vectors are
cos β(a|000⟩+ b|111⟩)|00⟩+ i sin β(a|100⟩+ b|011⟩)|11⟩.
Bob will get a|000⟩+ b|111⟩when his measurement outcomes of the ancilla
qubits are 00, which will happen with probability cos2 β, while he will get
a|100⟩+ b|011⟩when he observes ancilla qubits are 11, which will happen
with probability sin2 β. Bob applies X gate on the ﬁrst qubit in the latter
case.
10.5 (1) A1 = B1 = 1. (2) A1 = 1, B1 = 0. (3) A1 = 0, B1 = 1.
10.7 Let a| + ++⟩+ b| −−−⟩be a codeword to be sent. The state after the
action of the noise is
a| + +⟩1
√
2(|100⟩−|011⟩) + b| −−⟩1
√
2(|100⟩+ |011⟩).
(1) It is easy to see A1 = B1 = A2 = B2 = 0. The bit-ﬂip error syndrome
detection circuit outputs the third group qubits in the state

a| + +⟩1
√
2(|100⟩−|011⟩) + b| −−⟩1
√
2(|100⟩+ |011⟩)

|11⟩.
Therefore A3 = B3 = 1.
(2) Bob applies σx to the ﬁrst qubit of the third group to obtain a| + +−⟩+
b| −−+⟩. The action of U ⊗3
H
on |±⟩is
U ⊗3
H |+⟩= 1
2(|000⟩+ |011⟩+ |101⟩+ |110⟩) ≡|E⟩
U ⊗3
H |+⟩= 1
2(|001⟩+ |010⟩+ |100⟩+ |111⟩) ≡|O⟩.
Note that there are an even number of 1 in |E⟩and odd number in |O⟩.
Therefore the output of the phase-ﬂip error syndrome detection circuit is
(a|EEO⟩+ b|OOE⟩)|01⟩.
We obtain A4 = 0, B4 = 1.
(3) is solved following Exercise 10.3.
10.8 It follows from Eq. (10.21) that
received code
syndrome
(0001110) →(1, 1, 1)t
(1101000) →(1, 1, 1)t
(1100111) →(1, 1, 1)t.

412
QUANTUM COMPUTING
Chapter 12
12.1 It follows from Eq. (12.30) that
R
π
2 , π
4

=
⎛
⎜
⎝
1
√
2
−1
2(1 + i)
1
2(1 −i)
1
√
2
⎞
⎟
⎠.
R(π/2, π/4)|0⟩= (1/
√
2, (1 −i)/2)t, R(π/2, π/4)|1⟩= (−(1 + i)/2, 1/
√
2)t.
12.3 An SU(2) matrix equivalent with U is
U ′ =
eiθ/2
0
0
e−iθ/2

.
Comparing U ′ with Eq. (12.34), we identify β = θ, α+γ = 0 and α−γ = −π,
i.e., α = −π/2, β = θ and γ = π/2.
12.4
e−iδ
√
1+ϵ2 ˆn·It

1
0

=
⎛
⎜
⎜
⎝
cos Λ −i sin Λ
√
1 + ϵ2
−iϵ sin Λe−iφ
√
1 + ϵ2
⎞
⎟
⎟
⎠,
where Λ = δ
√
1 + ϵ2t/2. The state is −| ↑⟩for Λ = π, i.e., at t = 2π/δ
√
1 + ϵ2.
12.5 One is required simply to switch subscripts 1 and 2 in Eq. (12.43) to
obtain the inverted CNOT gate;
UCNOT′ = Z2 ¯Z1X1UJ(π/J)Y1.
Z2 and ¯Z1 are implemented with ˜H by making use of the relation (12.31).
12.7 UZ = diag(1, 1, 1, −1). We evaluate
UB = Q†UZQ =
⎛
⎜
⎜
⎝
0 0 0 i
0 1 0 0
0 0 1 0
−i 0 0 0
⎞
⎟
⎟
⎠,
U t
BUB =
⎛
⎜
⎜
⎝
−1 0 0 0
0 1 0 0
0 0 1 0
0 0 0 −1
⎞
⎟
⎟
⎠.
The eigenvalues are (−1, 1, 1, −1) and corresponding eigenvectors are
(1, 0, 0, 0)t, (0, 1, 0, 0)t, (0, 0, 1, 0)t, (0, 0, 0, 1)t,

Solutions to Selected Exercises
413
from which we ﬁnd O1I and hD = diag(i, 1, 1, i) = eiπIz⊗Iz. O2 is found as
O2 = UB(hDO1)−1 =
⎛
⎜
⎜
⎝
0 0 0 1
0 1 0 0
0 0 1 0
−1 0 0 0
⎞
⎟
⎟
⎠.
Cartan decomposition is then
k1 = QO1Q† = I, h = QhDQ† =
⎛
⎜
⎜
⎝
i 0 0 0
0 1 0 0
0 0 1 0
0 0 0 i
⎞
⎟
⎟
⎠= eiπ/4eiπIz⊗Iz
and
k2 = QO2Q† =
⎛
⎜
⎜
⎝
−i 0 0 0
0 1 0 0
0 0 1 0
0 0 0 i
⎞
⎟
⎟
⎠=

e−iπ/4
0
0
eipi/4

⊗

e−iπ/4
0
0
eipi/4

.
The NMR pulse sequence is trivial for k1 while we ﬁnd k2 = (XY ¯X) ⊗
(XY ¯X) and h = (X2 ⊗I)e−iπIz⊗Iz( ¯X2 ⊗I). The obtained pulse sequence is
UZ = eiπ/4[(XY ¯X) ⊗(XY ¯X)](X2 ⊗I)e−iπIz⊗Iz( ¯X2 ⊗I)
= eiπ/4[(XY X) ⊗(XY ¯X)]e−iπIz⊗Iz( ¯X2 ⊗I).
The sequence is further simpliﬁed by noticing that the overall phase can be
dropped and XY X is replaced by a single pulse R(π, π/4) = e−iπ(Ix+Iy)/
√
2.
In conclusion, the simplest pulse sequence is
UZ = [R(π, π/4) ⊗(XY ¯X)]e−iπIz⊗Iz( ¯X2 ⊗I).
12.8 We need to redeﬁne UCNOT so that it becomes an element of SU(4),
UCNOT = eiπ/4
⎛
⎜
⎜
⎝
1 0 0 0
0 1 0 0
0 0 0 1
0 0 1 0
⎞
⎟
⎟
⎠.
It follows from
UB = Q†UCNOTQ = eiπ/4
2
⎛
⎜
⎜
⎝
1
i −1 i
−i 1 −i −1
−1 i
1
i
−i −1 −i 1
⎞
⎟
⎟
⎠,
U t
BUB =
⎛
⎜
⎜
⎝
0
0 −i 0
0
0
0 −i
−i 0
0
0
0 −i 0
0
⎞
⎟
⎟
⎠

414
QUANTUM COMPUTING
that U t
BUB has eigenvalues i, i, −i, −i and corresponding normalized eigenvec-
tors (0, −1, 0, 1)t/
√
2, (−1, 0, 1, 0)t/
√
2, (0, 1, 0, 1)t/
√
2, (1, 0, 1, 0)t/
√
2. Now
O1 =
1
√
2
⎛
⎜
⎜
⎝
0 −1 0 1
−1 0 1 0
0
1 0 1
1
0 1 0
⎞
⎟
⎟
⎠, h2
D = diag(i, i, −i, −i),
from which we take hD = diag(eiπ/4, eiπ/4, e−iπ/4, e−iπ/4). The other matrix
O2 is found as
O2 = UB(hDO1)−1 =
1
√
2
⎛
⎜
⎜
⎝
0 −1 −1 0
−1 0
0 1
0
1 −1 0
1
0
0 1
⎞
⎟
⎟
⎠.
The Cartan decomposition is found as
k1 = QO1Q† =
1
√
2
⎛
⎜
⎜
⎝
0 i 0
i
−i 0 −i 0
0 i 0 −i
−i 0 i
0
⎞
⎟
⎟
⎠= −i
√
2
 1 1
1 −1

⊗
 0 −1
1 0

,
k2 = QO2Q† = 1
2eiπ/4
⎛
⎜
⎜
⎝
1
i
1
i
−i −1 −i −1
−i 1
i −1
−1 i
1 −i
⎞
⎟
⎟
⎠
= 1
2
 1 −i 1 −i
−1 −i 1 + i

⊗1
√
2
 i −1
1 −i

and
h = QhDQ† =
1
√
2
⎛
⎜
⎜
⎝
1 0 0 i
0 1 i 0
0 i 1 0
i 0 0 1
⎞
⎟
⎟
⎠= eiπIx⊗Ix.
To implement NMR pulse sequence, we notice k1 = UH ⊗Y 2, where Y =
e−i(π/2)Iy and UH is the Hadamard gate whose NMR implementation is given
in Fig. 12.7. As for k2, we ﬁnd by inspecting Eq. (12.34), we immediately ﬁnd
k2 =
#
ei(π/2)Iye−i(π/2)Ix$
⊗
#
e−iπIye−i(π/2)Ix$
.
Finally the Cartan subgroup element h is implemented with JIz ⊗Iz as
h = ( ¯Y ⊗Y )e−iπIz⊗Iz(Y ⊗¯Y ).

Solutions to Selected Exercises
415
A naive pulse sequence obtained is
[( ¯Y X ¯Y ) ⊗(Y 2XY )]UJ(π/J)[(Y ¯X2Y ) ⊗( ¯Y Y 2)].
However, we notice the following simpliﬁcations:
¯Y Y 2 = Y, Y 2XY = ¯X ¯Y , Y ¯X2Y = ¯X2
up to an overall phase. Then the pulse sequence above is simpliﬁed as
[( ¯Y X ¯Y ) ⊗( ¯
X ¯Y )] · UJ(π/J) · [ ¯X2 ⊗Y ].
Compare this result with Eq. (12.43).
12.9 (1)
˜ρY = 1
2

1 −cx cz −icy
cz + icy 1 + cx

.
(2)
ρY = 1
2

1 −cx
(cz −icy)e−iω0t
(cz + icy)eiω0t
1 + cx

.
Chapter 13
13.2 Use the following facts:
R
π
2 , −π
2

=
⎛
⎜
⎝
1
√
2
1
√
2
−1
√
2
1
√
2
⎞
⎟
⎠, R
π
2 , 0

=
⎛
⎜
⎝
1
√
2
−i
√
2
−i
√
2
1
√
2
⎞
⎟
⎠,
R
π
2 , π

=
⎛
⎜
⎝
1
√
2
i
√
2
i
√
2
1
√
2
⎞
⎟
⎠, R
π
2 , π
2

=
⎛
⎜
⎝
1
√
2
−1
√
2
1
√
2
1
√
2
⎞
⎟
⎠,
where R2(θ, φ) = R(θ, φ) ⊗I and R(θ, φ) has been deﬁned in Eq. (13.59).


Index
ac Stark shift, 314
ADD(n), 157
ancilla, 101
ancillary qubit, 101
AND, 73
balanced
Deutsch algorithm, 99
Deutsch-Jozsa algorithm, 101
basis, 6, 8
basis vector, 6
BB84, 60
Bell basis, 55
Bell state, 55
Bell vector, 55
Bernstein-Vazirani algorithm, 103
bipartite, 36
Bloch ball, 54
Bloch equation, 193
Bloch sphere, 53
Bloch vector, 53
Bloch-Siegert eﬀect, 256
blockade diamond, 382
blue-sideband transition, 300, 304
bra, 6
breathing mode, 297
carrier transition, 300, 302
CARRY, 157
Cartan decomposition, 265
Cartan subalgebra, 265
Cartan subgroup, 265
Cayley transformation, 18
CCNOT, 69
ceiling, 151
center of mass mode, 297
characteristic equation, 14
charge quantum dot, 377
charge qubit, 383
capacitive coupling, 359
inductive coupling, 362
readout, 352
chemical shift, 250
chloroform, 250
CMODMULTI, 167
CNOT, 67
trapped ions, 304
code, 196
codeword, 196
collapse of wave function, 29
COM mode, 297
completely positive map, 179
completeness relation, 8, 176
component, 8
computational complexity, 93
modular exponential function,
170
conrolled-Bjk gate, 116
constant
Deutsch algorithm, 99
Deutsch-Jozsa algorithm, 101
continued fraction expansion, 151
convergent, 152
control qubit, 67
control terms, 251
controlled-controlled-NOT gate, 69
controlled-modular multiplexer, 166
controlled-modular multiplexer cir-
cuit, 166
controlled-NOT, 67
convergent, 152
Cooper pair box, 337
split, 341
Copenhagen interpretation, 29
417

418
QUANTUM COMPUTING
Coulomb blockade, 381
Coulomb energy, 332
CP map, 179
CPB, 337
critical current, 331
current-biased qubit, 348
cytosine, 250
decoherence time, 235
decoupling, 260
dense coding, 76
density matrix, 39
Deutsch algorithm, 99
Deutsch-Jozsa algorithm, 101
Deutsch-Jozsa orable, 103
DFT, 112
dimension, 4
discrete Fourier transform, 112
discrete integral transform, 109
DIT, 109
DiVincenzo crietria
Josephson junction qubit, 374
DiVincenzo criteria, 233
ion trap, 307
neutral atoms, 327
NMR, 281
quantum dot, 396
Doppler cooling, 285
double quantum dot, 377, 383
DQD, 377, 383
drain, 384
drift term, 251
dual space, 7
dual vector space, 7
Earnshaw's theorem, 289
eigen equation, 14
eigenvalue, 13
eigenvector, 13
electron shelving method, 306
endcap electrode, 289
ensemble measurement, 243
entangled state, 36
entanglement, 54
bipartite, 36
environment, 174
error syndrome, 198
exponent
RSA cryptosystem, 138
fault tolerance, 224
Fermat's little theorem, 139
ﬁdelity, 47
ﬁeld gradient, 277
ﬂoor, 151
ﬂux quantum, 334
ﬂux qubit, 342
coupling with LC resonator, 369
switching current readout, 357
three-junction, 345
tunable coupling, 366
Fredkin gate, 71
generalized Rabi frequency, 35
generating matrix, 211
GHZ state, 55
Gram-Schmidt
orthonormalization,
10
Gray code, 85
Greenberger-Horne-Zeilinger state, 55
Grover's search algorithm, 125
multiple-ﬁle search, 133
single ﬁle search, 125
two-qubit implementation, 266
guiding center motion, 291
Hadamard matrix, 261
Hadamard transformation, 69
Hamiltonian, 30
Hamming code, 211
Hamming distance, 212
Haramard gete, 69
hard pulse, 257
Hermitian conjugate, 12
Hermitian matrix, 12
heteronucleus molecule, 250
homonucleus molecule, 250
hyperﬁne interaction, 312
hyperﬁne spin, 312
hyperﬁne structure, 312

Index
419
inner product, 6
inseparable, 42
inversion layer, 377
Josephson eﬀect, 330
Josephson energy, 332
Josephson junction, 330
critical current, 331
kernel, 109
ket, 5
Kraus operator, 175
Kronecker product, 26
Lamb-Dicke limit, 300
Lamb-Dicke parameter, 299
Larmor frequency, 243
Levi-Civita symbol, 19
light shift, 314
Lindblad equation, 192
Lindblad operators, 192
linear combination, 5
linear function, 6
linear operator, 11
linearly dependent, 5
linearly independent, 5
Liouville-von Neumann equation, 39
logical qubit, 196
Markovian approximation, 189
Mathieu equation, 291
maximally mixed state, 41
measurement, 237
ensemble, 243
measurement operator, 56
micromotion, 291
mixed state, 38
maximally, 41
mixing process, 177
MODADD, 161
MODEXP, 169
MODMULTI, 166
modular adder, 161
modular exponential function, 156,
168
molecule
heteronucleus, 250
homonucleus, 250
MOSFET, 377
Mott insulator, 324
multipartite, 38
negation, 72
negativity, 43
normal matrix, 17
NOT, 72
observable, 29
one-time pad, 60
operator-sum representation, 176
optical pumping, 288
OR, 73
oracle, 100, 125
order, 96
modular exponential function,
140
orthogonal group, 13
orthonormal basis, 8
OSR, 176
parity check matrix, 209
Parseval's theorem, 111
partial trace, 45
partial transpose, 42
Paul trap, 289
Pauli matrix, 3
period, 96
modular exponential function,
140
phase qubit, 348
phase relaxation process, 185
physical qubit, 196
Planck constant, 30
plasma frequency, 349
plasma oscillation, 364
positive
operator-valued
measure,
180
POVM, 180
principal system, 174
probability amplitude, 30

420
QUANTUM COMPUTING
projection operator, 9
projective measurement, 30
pseudopure state, 275
pulse width, 253
pure state, 38
puriﬁcation, 46
QD, 377
QECC, 196
QFT, 112
QIT, 111
QKD, 60
QPC, 387
quantronium, 347, 348
readout, 355
quantum algorithm, 65
quantum circuit, 65
quantum computation, 65
quantum computer, 65
quantum dot, 377
charge, 377
spin, 377
quantum dynamical semigroup, 189
quantum error correcting code, 196
quantum Fourier transform, 112
quantum gate, 65
quantum integral transform, 111
quantum key distribution, 60
quantum mechanics, 29
quantum operation, 173, 174
Quantum point contact current, 387
quantum register, 54
quantum teleportation, 76
qubit, 51, 234
qubit initialization, 234
qudit, 52, 234
qutrit, 52, 234
Rabi frequency, 35
generalized, 35
Rabi oscillation, 34, 353
vacuum, 371
Raman transition, 319
ray representation, 30
readout
charge qubit, 352
ﬂux qubit, 357
quantronium, 355
red sideband transition, 300, 303
refocusing, 259, 260
register, 54
rf-SQUID, 334, 342
rotating wave approximation
NMR, 248
tapped ions, 300
RSA cryptosystem, 137
scalar, 4
Schmidt coeﬃcient, 37
Schmidt decomposition, 37
Schmidt number, 37
Schr¨odinger equation, 30
selective phase rotation transform,
123
semigroup, 177
separable, 42
separable state, 36
Shor's factorization algorithm, 137
sideband resonance transition, 302
signular value matrix, 24
Simon's algorithm, 105
Singleton bound, 212
singular value, 24
singular value decomposition, 24
source, 384
spatial averaging method, 277
special orthogonal group, 13
special unitary group, 13
special unitary matrix, 13
spectral decomposition, 20
spin blockade, 393
spin matrix, 3
spin quantum dot, 377
spin qubit, 383
spintronics, 386
split Cooper pair box, 341
spontaneous emission, 192
SQUID, 333
stabilizer, 220
stabilizer code, 220

Index
421
state
entangled, 36, 54
GHZ, 55
inseparable, 42
mixed, 38
multipartite, 38
pure, 38
separable, 36, 42
tensor product, 36
uncorrelated, 42
W, 55
SUM, 157
superoperator, 178
superposition principle, 29
syndrome, 198, 209
target qubits, 67
temporal averaging method, 276
tensor product, 26
tensor product state, 36
three-junction ﬂux qubit, 345
time-evolution operator, 31
Toﬀoli gate, 69
transpose, 4
two's complement, 161
two-level unitary matrix, 82
uncertainty principle, 31
uncorrelated state, 42
unit matrix, 3
unitary group, 13
unitary matrix, 13
two-level, 82
universal gate set, 236
universality theorem, 82
vacuum Rabi oscillation, 371
vector, 4
basis, 6
bra, 6
ket, 5
zero, 5
vector space, 4
complex, 4
dual, 7
real, 4
W state, 55
Walsh transformation, 70
Walsh-Hadamard transform, 122
Walsh-Hadamard transformation, 70
XOR, 72
zero-vector, 4

