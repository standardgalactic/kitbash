### Overview for /mnt/c/Users/nateg/OneDrive/Documentos/GitHub/kitbash/prospectus

The text presents a comprehensive proposal for an application called "Swype Hero." The app is envisioned as a multi-phase project that begins as a game, evolves into a learning platform, and ultimately transforms into a customizable input interface for typing.

Phase 1 focuses on the game layer, drawing inspiration from games like Magic Touch and Black Ink Battle. Players trace glyphs to pop bubbles containing symbols, words, or letters. As they progress, they unlock new glyphs, combo moves, word chaining (proto-swype), and bonus rounds derived from learned "decks" (e.g., Spanish verbs, Python shortcuts).

Phase 2 introduces learning features, with Swype Hero becoming a mnemonic learning engine. Users can create custom decks for various subjects like languages, coding modes, or emoji glyphs. They can also design visual mnemonics called "Mems" to reinforce memory and integrate spaced repetition into the gameplay through boss fights or bubble waves. The app allows users to scan and import handwritten flashcards into their decks and offers options for shuffling, remixing, or printing for offline training.

In Phase 3, Swype Hero becomes a customizable input interface with features such as:
- A trace keyboard trained through gameplay that can be swapped for different languages, coding modes, or emojis.
- "Recall Mode," where users trace words to enter them, enhancing recall and typing skills.
- "Deck Typing," which reinforces vocabulary or shortcuts from favorite decks on the keyboard.
- Optional AI-predictive trace boost for accessibility and speed.

The social layer offers community sharing of glyph sets, layouts, and Mems, with leaderboards based on deck mastery or trace speed. A "Mems feed" allows users to share mnemonic posts for words or shortcuts.

Swype Hero differentiates itself from similar apps by offering a fun game onboarding experience, evolving trace-to-typing skills, custom decks/flashcards, mnemonics and Mems, spaced repetition, print & scan integration, and a unique social aspect that emphasizes community-driven content creation.

The text concludes by suggesting potential next steps, such as mocking up UI designs for the game and keyboard, creating test decks with in-game glyphs (e.g., "Intro to Python Shortcuts" or "Spanish Verbs"), generating trace glyphs for sample words, and outlining a code prototype using Unity or Flutter.


